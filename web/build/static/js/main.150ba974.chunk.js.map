{"version":3,"sources":["components/playbar/Playbar.tsx","graphql/mutations.ts","accessToken.ts","routes/login-register/Login.tsx","routes/login-register/Register.tsx","components/navigation/DropDown.tsx","components/header/AccountOptions.tsx","components/notifications/Notifications.tsx","components/header/Search.tsx","components/header/CreateOptions.tsx","components/header/Header.tsx","components/navigation/Navigation.tsx","components/post/functions/CreatePost.tsx","components/project/functions/CreateProject.tsx","components/profile/user/components/Information.tsx","components/post/options/Options.tsx","components/post/functions/DeleteComment.tsx","components/post/comments/Comment.tsx","components/formatTime/FormatTimestamp.tsx","components/post/like/LikePost.tsx","components/post/posts/UsersPost.tsx","components/project/contributors/ContributorAvatar.tsx","components/post/sharedProject/UserSharedProject.tsx","components/profile/user/posts/Posts.tsx","components/project/contributors/RemoveContributor.tsx","components/project/contributors/ContributorPanel.tsx","components/project/project/UsersProject.tsx","components/project/components/EmptyState.tsx","components/profile/user/projects/Projects.tsx","components/mates/options/Options.tsx","components/mates/functions/Validation.tsx","components/mates/mate/Mate.tsx","components/mates/lists/Mates.tsx","components/profile/user/UserProfile.tsx","components/scrollToTop/ScrollToTop.tsx","components/request/RequestResult.tsx","components/create/CreateComponent.tsx","components/post/functions/DeletePost.tsx","components/post/posts/MyPost.tsx","components/post/sharedProject/MySharedProject.tsx","routes/feed/Feed.tsx","routes/workspace/tabs/CreateTabs.tsx","routes/workspace/DeleteWSItem.tsx","routes/workspace/tabs/Tabs.tsx","routes/workspace/lyrics/CreatLyrics.tsx","routes/workspace/lyrics/Lyrics.tsx","routes/workspace/tracks/Recording.tsx","routes/workspace/tracks/Tracks.tsx","routes/workspace/tabs/TabsViewOnly.tsx","routes/workspace/lyrics/LyricsViewOnly.tsx","routes/workspace/tracks/TracksViewOnly.tsx","routes/workspace/Workspace.tsx","components/mates/lists/SearchMates.tsx","routes/myMates/MyMates.tsx","routes/profile/edit/NameDob.tsx","routes/profile/edit/Bio.tsx","routes/profile/edit/Instruments.tsx","components/profile/me/Posts.tsx","components/project/functions/Share.tsx","components/project/options/Options.tsx","components/project/components/ResultComponent.tsx","components/project/project/MyProject.tsx","components/project/lists/MyProjects.tsx","routes/profile/Profile.tsx","components/project/components/SearchProjects.tsx","components/project/components/ProjectsHeader.tsx","routes/projects/Projects.tsx","routes/notFound/NotFound.tsx","routes/landing/Landing.tsx","routes/discover/Discover.tsx","routes/searchResult/lists/Users.tsx","routes/searchResult/lists/Projects.tsx","routes/searchResult/SearchResult.tsx","Routes.tsx","App.tsx","redux/actions/user/types.ts","redux/reducers/user/reducers.ts","redux/actions/playbar/types.ts","redux/reducers/playbar/reducers.ts","redux/actions/application/types.ts","redux/reducers/application/reducers.ts","redux/actions/project/types.ts","redux/reducers/project/reducers.ts","redux/actions/workspace/types.ts","redux/reducers/workspace/reducers.ts","redux/actions/profile/types.ts","redux/reducers/profile/reducers.ts","redux/actions/posts/types.ts","redux/reducers/posts/reducers.ts","redux/actions/mates/types.ts","redux/reducers/mates/reducers.ts","redux/reducers/index.ts","redux/store.ts","index.tsx","graphql/queries.ts"],"names":["connector","connect","state","status","playbar","data","useState","buffer","setBuffer","setTrackDuration","isPlaying","setIsPlaying","setProjectId","useQuery","CURRENT_PROJECT","variables","projectId","projectData","loading","player","useRef","params","useLocation","pathname","split","useEffect","axios","get","id","then","res","base64","Buffer","from","Body","toString","catch","error","console","log","className","style","height","currentProject","trackName","name","onClick","audio","current","duration","paused","play","pause","playAudio","disabled","src","alt","autoPlay","autoPlayAfterSrcChange","onPlay","ref","defaultCurrentTime","defaultDuration","LOGIN_USER","gql","REGISTER_USER","LOGOUT_USER","UPDATE_NAMES_AND_DOB","UPDATE_BIO","UPDATE_INSTRUMENTS","CREATE_POST","DELETE_POST","SHARE_PROJECT","COMMENT_ON_POST","DELETE_COMMENT","LIKE_POST","CREATE_PROJECT","DELETE_PROJECT","CREATE_LYRIC","DELETE_LYRIC","CREATE_TAB","DELETE_TAB","CREATE_TRACK","DELETE_TRACK","ASSIGN_MAIN_TRACK_TO_PROJECT","ADD_CONTRIBUTOR","REMOVE_CONTRIBUTOR","ADD_MATE","REMOVE_MATE","SEND_NOTIFICATION","DELETE_NOTIFICATION","accessToken","setAccessToken","s","getAccessToken","authenticateUser","user","type","payload","history","client","email","setEmail","password","setPassword","emailErrors","setEmailErrors","passwordErrors","setPasswordErrors","loggingIn","setLogging","passwordType","setPasswordType","showOrHide","setShowOrHide","useMutation","login","MY_ACCOUNT","me","push","onSubmit","e","a","preventDefault","toLowerCase","update","cache","writeQuery","query","response","errorType","err","htmlFor","value","placeholder","onChange","target","border","showPassword","to","withRouter","firstName","lastName","day","month","year","formData","setFormData","emailError","setEmailError","nameErrors","setNameErrors","all","dobErrors","setDobErrors","passwordFocus","setPasswordFocus","register","number","lowerCaseLetters","upperCaseLetters","numbers","match","length","parseInt","Date","getFullYear","dob","success","message","onEmailChange","onFocus","onBlur","display","maxLength","required","aria-invalid","defaultValue","projectPanel","application","intialiseProject","bool","toggleNavbar","MY_PROJECTS","meData","meLoading","routeLocation","unlisten","listen","location","action","exact","activeClassName","avatar","myProjects","map","project","logoutUser","closeSettingsPanel","oldLocation","setLocation","logout","pathName","logoutUserFunction","resetStore","notificationPanel","toggleNotifications","GET_NOTIFICATIONS","addMate","deleteNotification","acceptMateRequest","userId","notificationId","mateId","GET_MY_MATES","getMates","notifications","declineRequest","takeToProject","notification","senderId","senderName","searchPanel","toggleSearch","search","searchData","setSearchData","indexLimit","SEARCH_APPLICATION","input","searchInput","autoFocus","searchApplication","users","index","projects","creatorId","creatorName","postPanel","closePostPanel","settingsPanel","createPanel","authenticated","navbar","toggleCreatePanel","btnDetails","setBtnDetails","unRead","setUnRead","setToggleMenu","componentLocation","setComponentLocation","USER_BY_ID","userLoading","userData","notifLoading","notifData","openSearchContainer","onMouseOver","onMouseOut","post","setPostContent","createPost","content","cacheMyData","readQuery","MY_POSTS","udatedMyCache","myPosts","cacheFeedData","FEED_POSTS","udatedFeedCache","myFeed","cacheAllData","ALL_POSTS","updatedAllCache","allPosts","initiliseProject","storeProject","details","projectName","setProjectName","isPublic","setPrivateOrPublic","formErrors","setErrors","createProject","errors","openInformation","checked","toggleMatesOptions","toggleMatesAdd","isMyMate","setIsMyMate","VALIDATE_NOTIFICATION","recipient","nData","nLoading","x","mates","addFriend","validateNotification","instruments","bio","togglePostOptions","validatePostDelete","toggleRemoveComment","commentId","postId","deleteComment","deleteCommentById","GET_COMMENTS","getComments","options","posts","postDelete","commentDelete","activatePlaybar","assignTrack","formComment","setFormComment","disableButton","setDisabled","selectId","setSelectedId","comment","USER_BY_POST_ID","formatTimestamp","timestamp","splitDateAndTime","date","time","hourAndMin","yearAbbr","toggleOptionsMenu","minHeight","userName","created","userByPostId","FormatTimestamp","formattedTime","setFormattedTime","fullDate","LikePost","likePost","cacheLikeData","indexOf","splice","toggleOptions","postIdForComment","setIdForComments","comments","likes","ContributorAvatar","setUserName","GET_CONTRIBUTORS","contributors","trackId","mainTrack","USERS_POSTS","usersPosts","contributor","removeContributors","removeContributor","removeFunc","conCache","modConCache","searchCache","SEARCH_MATES_FOR_CONTRIBUTORS","modifiedCache","searchMatesForContributors","remove","selectedProject","toggleContributors","searchName","projectLoading","searchLoading","addContributor","sendNotfication","addContributorFunc","y","minWidth","maxWidth","dataToSend","setRemoveContributor","contributorsPanel","UserProjects","USERS_PROJECTS","usersProjects","UsersProject","toggleMatesRemove","selectedUserId","isOurMate","setIsOurMate","myId","setMyId","mateData","mateLoading","cursor","toggleResult","removeMate","removeMateFunc","cacheRead","reqBlocked","show","add","mate","selectedId","Mates","setDisplayOption","window","scrollTo","timer","setTimeout","clearTimeout","setPostId","deletePost","updatedMyCache","cacheFeedPosts","updatedFeedCache","Feed","tabInit","workspace","initTabCreation","tabArray","initTabArray","description","setDescription","disable","disableSubmitBtn","createTab","initialArray","tab","cacheTabs","GET_TABS","newTabArray","tabs","newArray","i","val","document","getElementsByClassName","onTabChange","uuidv4","lyrics","initLyricDeletion","initTabDeletion","initTrackDeletion","setLyricId","wsType","itemId","deleteTab","deleteLyric","deleteTrack","deleteItem","GET_TRACKS","tracks","fileId","newFormData","FormData","append","method","url","headers","tabId","lyricId","GET_LYRICS","currentTab","setCurrentTab","create","CreateTabs","item","uuid","delete","initLyricCreation","createTabAndAddToProject","lyricData","option","lyric","createLyric","setSection","cacheLyrics","updateCache","backgroundColor","counter","currentLyric","setCurrentLyric","currentTrack","setCurrentTrack","assignTrackToProject","track","sendAudioData","MicRecorder","require","trackForm","setTrackForm","initForm","setForm","audioBuffer","storeBuffer","loadingSave","setLoadingSave","recording","createTrack","recorder","bitRate","newAudioFile","File","lastModified","now","cacheTracks","modifyCache","_res","undefined","start","stop","getMp3","alert","isActive","setMinutes","seconds","setSeconds","interval","setInterval","minutes","clearInterval","setAppLocation","col","component","setComponent","isContributor","setIsContributor","changeComponent","cType","typeObject","SearchMates","SEARCH_MATES","focus","searchMates","MyMates","editNames","UpdateNamesAndDob","dobArray","selected","editBio","updateBio","editInstrument","UpdateInstruments","setSelectedProject","toggleProjectResult","shareProject","shareProjectFunction","projectCache","postCache","modifyPostCache","feedCache","modifyFeedCache","toggle","deleteProject","deleteId","result","setDeleteProjectPanel","removeContribtutor","deletProjectById","filter","myPostsCache","updatedPostCache","removeAsContributor","cacheArray","closeComponent","resultData","Projects","profile","edittingNames","editting","names","edditingBio","edditingInstruments","updateProfile","NameDob","MyProjects","SEARCH_PROJECTS","searchProjects","NotFound","Landing","projectOption","setProjectOption","Discover","Users","hide","setHideResults","showMore","setShowMore","setIndexLimit","inputData","contructedUserData","path","Login","Register","Workspace","Profile","SearchResult","UserProfile","Playbar","App","setLoading","fetch","credentials","json","USER_AUTHENTICATED","CLEAR_USER","intialState","OPEN_PLAYBAR","ASSIGN_TRACK","initialState","SET_APP_LOCATION","CLOSE_POST_PANEL","CLOSE_SETTINGS_PANEL","TOGGLE__NOTIFICATIONS","INIT_PROJECT","TOGGLE__CONTRIBUTORS","TOGGLE_SEARCH","TOGGLE_CREATE_PANEL","RESULT_TOGGLE","NAVBAR_TOGGLE","STORE_PROJECT","SHOW_PROJECT_DELETE_PANEL","SELECTED_PROJECT_ID","PROJECT_OPTIONS","PROJECT_RESULT","INIT_AND_EXIT_LYRIC_CREATION","INIT_AND_EXIT_TAB_CREATION","SET_PROFILE","EDIT_NAME","EDIT_BIO","EDIT_INSTRUMENT","profileId","SELECTED_POST_ID","SET_DELETE_COMPONENT","TOGGLE_POST_OPTIONS","TOGGLE_REMOVE_COMMENT","MATES_OPTIONS","MATES_REMOVE","MATES_ADD","MATES_SELECTED_ID","rootReducer","combineReducers","initialised","middleware","thunk","store","createStore","compose","composeWithDevTools","applyMiddleware","httpLink","createHttpLink","uri","authLink","setContext","_","token","cookieValue","cookie","authorization","tokenRefreshLink","TokenRefreshLink","accessTokenField","isTokenValidOrUndefined","exp","jwtDecode","fetchAccessToken","mode","handleFetch","handleError","warn","errorLink","onError","graphQLErrors","ApolloClient","link","InMemoryCache","typePolicies","Query","fields","merge","existing","incoming","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.150ba974.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef, Fragment } from 'react'\nimport { useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport AudioPlayer from 'react-h5-audio-player';\n// GraphQL \nimport { useQuery } from \"@apollo/client\";\nimport { CURRENT_PROJECT } from \"../../graphql/queries\";\n// Redux\nimport { connect, ConnectedProps } from \"react-redux\";\n\ninterface ComponentState {\n  playbar: {\n    status: boolean,\n    data :  {\n      id: string,\n      projectId: string,\n      trackName: string\n    }\n  }\n}\n\nconst mapState = (state: ComponentState) => ({\n  status: state.playbar.status,\n  data: state.playbar.data\n})\n\nconst connector = connect(mapState)\n\ntype PropsFromRedux = ConnectedProps<typeof connector>\n\ntype Props = PropsFromRedux\n\n\nconst Playbar = ({status, data} : Props) => {\n  const [buffer, setBuffer] = useState(\"\");\n  const [trackDuration, setTrackDuration] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false)\n  const [currentProjectId, setProjectId] = useState(\"\")\n  const { data: projectData , loading} = useQuery(CURRENT_PROJECT, {\n    variables : {\n      projectId : data.projectId\n    }\n  });\n  const player = useRef(null);\n  const location = useLocation()\n  const path = location.pathname;\n  const params = path.split(\"/\");\n  \n  useEffect(() => {\n    if(params[1] === \"workspace\"){\n      setProjectId(params[2])\n    }\n    if(data.projectId) {\n      setProjectId(data.projectId)\n\n      axios.get(`http://localhost:4000/get/${data.projectId}/${data.id}`)\n      .then((res) => {\n        // Make binary buffer from the response data\n        const file = Buffer.from(res.data.Body, 'binary')\n        // Convert buffer into base64 \n        const base64 = file.toString('base64');\n        // Store base 64 in comonent state\n        setBuffer(base64);\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n      .then(() => {\n        // always executed\n      });  \n    }\n  },[data, buffer, params])\n\n  const playAudio = () => {\n    const audio = player.current as any;\n    setTrackDuration(audio.audio.current.duration)\n    // If player is paused then button calls play function else pause\n    if(audio.audio.current.paused) {\n      audio.audio.current.play();\n    } else  {\n      audio.audio.current.pause();\n    }\n  }\n  return (\n    <div className=\"playbar-container\" style={status === true ? { height: \"90px\" } : { height: \"0\" } }>  \n      <div className=\"playbar-wrapper\">\n      <div className=\"project-details\">\n          {\n            !loading && projectData && projectData.currentProject && \n            <Fragment>\n              <p className=\"track-name\">{data && data.trackName ? data.trackName : projectData.currentProject.name}</p> \n              <p className=\"project-name\">{projectData.currentProject.name}</p>\n            </Fragment>\n          }\n      </div>\n      <div className=\"controls-wrapper\">\n          <div className=\"playbar-controls\">\n          <button id=\"playbar-play\" onClick={() => playAudio()} disabled={buffer === \"\"}>\n            { isPlaying ?  \n            <img src=\"/assets/icons/playbar/pause.svg\" id=\"pause\" alt=\"Pause\"/> :  \n            <img src=\"/assets/icons/playbar/play.svg\" alt=\"Play\"/>\n            }           \n            </button>\n          </div>\n\n          <div className=\"playbar-scrub\">\n          <AudioPlayer\n            autoPlay\n            autoPlayAfterSrcChange={false}\n            src={`data:audio/wav;base64, ${buffer}`}\n            onPlay={() => setIsPlaying(true)}\n            ref={player}\n            defaultCurrentTime=\"0:00\"\n            defaultDuration=\"0:00\"\n          />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default connector(Playbar);","import { gql } from \"@apollo/client\";\n\nexport const LOGIN_USER = gql`\nmutation Login($email: String!, $password: String!) {\n  login(email: $email, password: $password) {\n    accessToken\n    user {\n      id\n      email\n      avatar\n      firstName\n      lastName\n      dob\n      bio\n      instruments\n      mates\n      created\n    }\n    error\n    errorType\n  }\n}`\n\nexport const REGISTER_USER = gql`\nmutation Register($email: String!, $password: String!, $firstName: String!, $lastName: String!, $dob: String!) {\n  register(email: $email, password: $password, firstName: $firstName,lastName: $lastName, dob: $dob) {\n    email\n    password\n    success\n  }\n}`\n\nexport const LOGOUT_USER = gql`\nmutation Logout {\n  logout\n}`\n// UPDATING PROFILE\nexport const UPDATE_NAMES_AND_DOB = gql`\nmutation UpdateNamesAndDob($firstName: String!, $lastName: String!, $dob: String! ){\n  updateNamesAndDob(firstName: $firstName, lastName: $lastName, dob:$dob ){\n    id\n    firstName\n    lastName\n    dob\n    bio\n    instruments\n  }\n}`\nexport const UPDATE_BIO = gql`\nmutation UpdateBio($bio: String!){\n  updateBio( bio: $bio){\n    id\n    firstName\n    lastName\n    dob\n    bio\n    instruments\n  }\n}`\nexport const UPDATE_INSTRUMENTS = gql`\nmutation UpdateInstruments($instruments:String!){\n  updateInstruments(instruments: $instruments){\n    id\n    firstName\n    lastName\n    dob\n    bio\n    instruments\n  }\n}`\n// POSTS\nexport const CREATE_POST = gql`\nmutation CreatePost($content: String!) {\n  createPost(content: $content) {\n    id \n    content \n    creatorId\n    shares\n    created\n  }\n}` \nexport const DELETE_POST =  gql`\nmutation DeletePost($postId: Int!) {\n  deletePost(postId: $postId) {\n    post {\n      id\n      content\n      creatorName \n      shares\n      created\n    }\n    comments {\n      id\n      postId\n      userId\n      userName\n      comment\n      created\n    }\n    likes {\n      id\n    postId\n    userId\n    }\n  } \n}`\nexport const SHARE_PROJECT = gql`\nmutation ShareProject($projectId: String!) {\n  shareProject(projectId : $projectId) {\n    success\n    response\n    post {\n    \tid\n      content\n      creatorId\n      creatorName\n      avatar\n      projectId\n      project {\n        id\n      }\n      shares\n      created\n    }\n  }\n}`\n// COMMENTS\nexport const COMMENT_ON_POST  = gql`\nmutation Comment($postId: Int!, $comment: String!) {\n  comment(postId:$postId, comment: $comment ) {\n      id\n      postId\n      userId\n      userName\n      comment\n      created\n  }\n}`\nexport const DELETE_COMMENT = gql `\nmutation DeleteComment($postId: Int!, $commentId: Int!) {\n  deleteComment(postId: $postId, commentId: $commentId) {\n      id\n      postId\n      userId\n      userName\n      comment\n      created\n  }\n}`\n// LIKES\nexport const LIKE_POST = gql`\nmutation LikePost($postId: Int!) {\n  likePost(postId:$postId ) {\n    post {\n      id\n      content\n      creatorName \n      shares\n      created\n    }\n    comments {\n      id\n      postId\n      userId\n      userName\n      comment\n      created\n    }\n    likes {\n      id\n    postId\n    userId\n    }\n  }\n}`\n// PROJECTS\nexport const CREATE_PROJECT = gql`\nmutation CreateProject($name: String!, $isPublic: Boolean!){\n  createProject(name:$name, isPublic:$isPublic) {\n    error\n    payload\n  }\n}`\nexport const DELETE_PROJECT = gql`\nmutation DeleteProject($id: String!){\n  deleteProject(id:$id) {\n    id\n\t\tname\n    isPublic\n\t\tcreatorId\n  }\n}`\n// LYRICS\nexport const CREATE_LYRIC =  gql`\nmutation CreateLyric($lyric: String!, $option: String!, $projectId: String!) {\n  createLyric(lyric: $lyric, option:  $option, projectId:$projectId) {\n    id\n\t\tlyric\n    option \n    projectId\n  }\n}`\nexport const DELETE_LYRIC = gql`\nmutation DeleteLyric($projectId: String!, $lyricId: Float!){\n  deleteLyric(projectId:$projectId, lyricId: $lyricId) {\n    id\n\t\tlyric\n    option \n    projectId\n  }\n}`\n// TABS\nexport const CREATE_TAB =  gql`\nmutation CreateTab($projectId: String!, $tab: [String!]!, $description: String!){\n  createTab(projectId:$projectId, description: $description, tab: $tab) {\n    id\n    tab\n    description\n    projectId\n  }\n}`\nexport const DELETE_TAB = gql`\nmutation DeleteTab($projectId: String!, $tabId: Int!){\n  deleteTab(projectId:$projectId, tabId:$tabId ){\n    id\n   \ttab\n  }\n}`\n// TRACKS\nexport const CREATE_TRACK =  gql`\nmutation CreateTrack($name: String!, $projectId: String!) {\n  createTrack(name:$name, projectId:$projectId) {\n    id\n    name\n    projectId\n  } \n}`\nexport const DELETE_TRACK = gql`\nmutation DeleteTrack($trackId: String!, $projectId: String!){\n  deleteTrack(trackId: $trackId, projectId: $projectId) {\n    id\n    name\n    projectId\n  }\n}`\nexport const ASSIGN_MAIN_TRACK_TO_PROJECT = gql`\nmutation AssignTrackToProject($projectId: String!, $trackId : String!) {\n  assignTrackToProject(projectId: $projectId, trackId : $trackId) {\n    id\n\t\tname\n\t\tisPublic\n\t\tcreatorId\n    contributors\n    mainTrack\n    created\n  }\n}`\n\n// CONTRIBUTORS ON PROJECT\nexport const ADD_CONTRIBUTOR = gql`\nmutation AddContributor($projectId: String!, $userId: Int!){\n  addContributor(projectId: $projectId, userId: $userId ) {\n    id\n    email\n    firstName\n    lastName\n    dob\n    bio\n    instruments\n    avatar\n  }\n}`\nexport const REMOVE_CONTRIBUTOR = gql`\nmutation RemoveContributor($userId: Int!, $projectId: String!){\n  removeContributor(userId : $userId, projectId: $projectId) {\n    id\n    email\n    firstName\n    lastName\n    dob\n    bio\n    instruments\n    avatar\n  } \n}`\n// MATES\nexport const ADD_MATE = gql`\nmutation AddMate($mateId: Int!) {\n  addMate(mateId:$mateId) {\n    id\n    email\n    firstName\n    lastName\n    dob\n\t  mates\n    created\n  }\n}`\nexport const REMOVE_MATE = gql`\nmutation RemoveMate($mateId: Int!) {\n  removeMate(mateId:$mateId) {\n    id\n    email\n    firstName\n    lastName\n    avatar\n    dob\n    bio\n    instruments\n\t  mates\n    created\n  }\n}` \n// NOTIFICATIONS\nexport const SEND_NOTIFICATION = gql`\nmutation SendNotfication($recipient: Int!, $message: String!, $type: String! ){ \n\tsendNotfication(recipient:$recipient , message:$message, type:$type) {\n    reqBlocked\n    status\n    type\n  }\n}`\nexport const DELETE_NOTIFICATION = gql`\nmutation DeleteNotification($id: Int!){\n  deleteNotification(id:$id ) {\n    message \n    id\n    recipient\n    senderId\n    senderName\n    avatar\n    read\n    type\n    created \n  }\n}`","export let accessToken = \"\";\n\nexport const setAccessToken = (s: string) => {\n  accessToken = s;\n}\n\nexport const getAccessToken = () => {\n  console.log(`This is the accesssToken ${accessToken}`);\n    return accessToken;\n}","import React, { useState, useEffect } from 'react'\nimport { Link } from \"react-router-dom\"\n \n// GraphQL\nimport { useQuery, useMutation} from \"@apollo/client\";\nimport { MY_ACCOUNT } from \"../../graphql/queries\";\nimport { LOGIN_USER } from \"../../graphql/mutations\";\n// Redux \nimport { connect, ConnectedProps } from \"react-redux\";\n// Components\nimport { setAccessToken } from '../../accessToken';\n\n\n\nconst mapDispatch = {\n    authenticateUser: (user: object) => ({ type: \"USER_AUTHENTICATED\", payload: user})\n  }\nconst connector = connect(null, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux & {\n    history: any,\n    client: any\n}\n\n\nconst Login = ({history, client, authenticateUser}: Props) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState(\"\");\n    const [ emailErrors, setEmailErrors ] = useState(\"\")\n    const [ passwordErrors, setPasswordErrors ] = useState(\"\")\n    const [loggingIn, setLogging] = useState(false);\n    const [passwordType, setPasswordType] = useState(\"password\")\n    const [showOrHide, setShowOrHide] = useState(\"show\")\n    const [login] = useMutation(LOGIN_USER);\n    const { data, loading } = useQuery(MY_ACCOUNT);    \n     \n    useEffect(() => {\n        if(loggingIn === false && !loading && data && data.me) {\n            history.push(\"/\")\n        }\n    },[loggingIn,loading, data, history])\n    \n    if(loading) {\n        return <div>...Loading</div>\n    }\n\n    const onSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        console.log(\"login clicked\");\n        setLogging(true);\n        if(email === \"\") {\n            setEmailErrors(\"You must enter an email address\");\n        } \n        if(password === \"\") {\n            setPasswordErrors(\"You must enter a password\");\n        } \n        if(email !== \"\" && password !== \"\") {\n          const response = await login({\n                variables: {\n                    email: email.toLowerCase(),\n                    password: password,\n                },\n                update: (cache, { data: { login } } ) => {\n                    if (!login) {\n                        return null\n                      }\n                //Update cache with the login data \n                cache.writeQuery({ \n                    query: MY_ACCOUNT,\n                    data : {\n                    me : login.user\n                    } \n                });\n                }\n                })\n           \n                try {\n                    // If there are any errors handle properly\n                    if(response.data.login.error) {\n                        if(response.data.login.errorType === \"user\") {\n                            setEmailErrors(\"Could not find user\");\n                        } else if(response.data.login.errorType === \"password\") {\n                            setPasswordErrors(\"Incorrect password\");\n                        }\n                    }\n                    \n                    if (response.data.login.user) {\n                        setAccessToken(response.data.login.accessToken)\n                        authenticateUser(response.data.login.user);\n                        history.push(\"/feed\")\n                      }\n\n                } catch(err) {\n                    console.log(err)\n                }\n            // .then((res) => {\n            //     setAccessToken(res.data.login.accessToken);\n            //     const contructedUserData = {\n            //         id : res.data.login.user.id,\n            //         email: res.data.login.user.email,\n            //     }\n            //    \n            // })\n            // .then(() =>  {\n            //     // const updateQuery = client.writeQuery({ \n            //     //     query: MY_ACCOUNT,\n            //     //     data : {\n            //     //     me : responseData.user\n            //     //     } \n            //     // });\n            //     // console.log(responseData)\n            //     // console.log(updateQuery)\n            //     history.push(\"/feed\")\n            //     setLogging(false)})\n            // .catch(err => {\n            //     setEmailErrors(\"Incorrect username or password\")\n            //     setPasswordErrors(\"Incorrect username or password\")\n            //     console.log(err.message);\n            // })\n        }\n    }\n\n    const showPassword = (e:React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault()\n\n        if(passwordType === \"password\") {\n            setPasswordType(\"text\")\n            setShowOrHide(\"hide\")\n        } else {\n            setPasswordType(\"password\")\n            setShowOrHide(\"show\")\n        }\n    }\n\n\n    return (\n        <div className=\"login-container\">\n            <h1>SocialSongs</h1>\n            <h2>To enter, log in with your details below.</h2>\n            <form onSubmit={(e) => onSubmit(e)}>\n                <span>\n                    <label htmlFor=\"email\">Email address</label>\n                    <input \n                        type=\"text\" \n                        name=\"email\" \n                        value={email} \n                        placeholder=\"Email Address\"\n                        onChange={e => {\n                            setEmail(e.target.value);\n                        }}\n                        style={emailErrors ? {border: \"2px solid #F84061\"} : {border: \"none\"}}/>\n                        { emailErrors && <p className=\"input-error\">{emailErrors}</p> }\n                </span>\n                <span>\n                    <label htmlFor=\"password\">Password</label>\n                    <input \n                        type={passwordType} \n                        name=\"password\" \n                        value={password} \n                        placeholder=\"Enter password\"\n                        onChange={e => {\n                            setPassword(e.target.value);\n                        }}\n                        style={passwordErrors ? {border: \"2px solid #F84061\"} : {border: \"none\"}}/>  \n                        { passwordErrors && <p className=\"input-error\">{passwordErrors}</p> }\n                        <button id=\"show-password\" onClick={(e) => showPassword(e)}>\n                                <img src={`/assets/icons/validate/${showOrHide}-password.svg`} alt=\"Show/hide password\"/>\n                        </button>\n                    <Link to=\"/\" className=\"forgotPassword\">Forgot your password?</Link>\n                </span>\n              \n                <span>\n                <input type=\"submit\" value=\"Login\" className=\"submit-btn\"/>\n                </span>\n                <div className=\"line-breaker\"></div>\n                <p className=\"no-account\">Don't have an account?</p>\n                <Link className=\"register-link\"to=\"/register\">\n                    Sign up to SocialSongs\n                </Link>\n            </form>\n                        \n        </div>\n    );\n}\n\nexport default connector(Login);","import React, { useEffect, useState, Fragment, useRef } from 'react'\nimport { Link, withRouter} from \"react-router-dom\"\n// GraphQL\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { MY_ACCOUNT } from \"../../graphql/queries\";\nimport { REGISTER_USER , LOGIN_USER } from \"../../graphql/mutations\";\n// Components\nimport { setAccessToken } from '../../accessToken';\n\ninterface ComponentProps {\n    history: any\n}\n\nconst Register = ({history}: ComponentProps) => {\n    const [loggingIn, setLogging] = useState(false);\n    const [formData, setFormData] = useState({\n        email : \"\", \n        password: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        day: \"\",\n        month: \"\",\n        year: \"\" });\n    const [passwordErrors , setPasswordErrors] = useState(\"\");\n    const [emailError, setEmailError] = useState(\"\")\n    const [nameErrors, setNameErrors] = useState(\"\")\n    const [dobErrors, setDobErrors] = useState({\n        day: \"\",\n        month: \"\",\n        year: \"\",\n        all: \"\"\n    })\n    const [passwordType, setPasswordType] = useState(\"password\")\n    const [showOrHide, setShowOrHide] = useState(\"show\")\n    const [passwordFocus, setPasswordFocus] = useState(false)\n    const [register] = useMutation(REGISTER_USER);\n    const [login] = useMutation(LOGIN_USER);\n    const { data, loading } = useQuery(MY_ACCOUNT)\n    \n    \n    useEffect(() => {\n        // Checking if user is authenticated and that theyre not logging in \n        // To see whether to push user off the route\n        if(loggingIn === false && !loading && data && data.me) {\n            history.push(\"/feed\");\n        }\n    }, [loggingIn, loading, data, history])\n\n    const onEmailChange = (e:React.ChangeEvent<HTMLInputElement>) => {\n        setFormData({...formData, [e.target.name] : e.target.value})\n        // Email validation : If email doesn't include a @ then set email errors\n        const emailSign: any = /@/g;\n        if(!e.target.value.match(emailSign)) {\n            setEmailError(\"Email must include @\")\n        } else {\n            setEmailError(\"\")\n        }\n    }\n\n    const onChange = (e:any) => {\n        setFormData({...formData, [e.target.name] : e.target.value});\n        const value = e.target.value;\n        // Password validation \n        if(e.target.name === \"password\") {\n            const lowerCaseLetters: any = /[a-z]/g;\n            const upperCaseLetters: any = /[A-Z]/g;\n            const numbers: any  = /[0-9]/g;\n            // Does password contain a lowercase letter\n            if(!value.match(lowerCaseLetters)) {  \n                setPasswordErrors(\"Password must contain a lower case letter\");\n            }\n            // Does password contain an uppercase letter\n            if(!value.match(upperCaseLetters)) {  \n                setPasswordErrors(\"Password must contain an Upper case letter\");\n            }\n            // Does password contain a number\n            if(!value.match(numbers)) {  \n                setPasswordErrors(\"Password must contain a number\");\n            }\n            // Does password contain 8 or more characters\n            if(value.length < 8) {\n                setPasswordErrors(\"Password must contain 8 or more characters\");\n            }\n            // If passed valdiation set errors to empty\n            if(value.match(lowerCaseLetters) && value.match(upperCaseLetters) && value.match(numbers) && value.length >= 8) {\n                setPasswordErrors(\"\");\n            }\n        }\n        let number;\n        // Validating the day of birth and parsing as integar\n        if(e.target.name === \"day\") {\n            number = parseInt(value);  \n            // Check if number is between 1 and 31\n            if(number < 1 || number > 31 ) {\n                setDobErrors({...dobErrors, day: \"Enter a correct day\"})\n            } else {\n                setDobErrors({...dobErrors, day: \"\"})\n            }\n        }\n        // Validating the year of birth and parsing as integar\n        if(e.target.name === \"year\") {\n            number = parseInt(value);\n            // Getting current year\n            var d = new Date();\n            var year = d.getFullYear();\n            // Check if number entered is above 1900 and under the current year\n            if(number < 1900 || number > year ) {\n                setDobErrors({...dobErrors, year: \"Enter a correct year\"})\n            } else {\n                setDobErrors({...dobErrors, year: \"\"})\n            }\n        }\n    }\n\n    const onSubmit =   (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault()\n        // Set logginIn state to true so the useEffect doesn't push us to /feed prematurely \n        setLogging(true);\n        const { email , password, firstName , lastName, day, month , year} = formData;\n        // Formatting the date of birth\n        let dob = \"\";\n        if(day !== \"\" &&  month !== \"\" && year !== \"\" ) {\n            dob = day + \" \" + month + \" \" + year\n        }\n        // If fields aren't empty and their are no errors then register user\n        if(emailError === \"\" && email !== \"\" && password !== \"\" && firstName !== \"\" && lastName !== \"\" && dob !== \"\" ) {\n            register({\n                variables: {\n                    email: email.toLowerCase(),\n                    password,\n                    firstName: firstName.toLowerCase(),\n                    lastName: lastName.toLowerCase(),\n                    dob\n                }\n            })\n            .then(async (res: any) => {\n                // If our response contains any errors then we handle them by setting the correct error state\n                if(res.data.register.email !== \"\" ) {\n                    setEmailError(res.data.register.email);\n                } else {\n                    setEmailError(\"\");\n                }\n                if(res.data.register.password !== \"\" ) {\n                    setPasswordErrors(res.data.register.password);\n                } else {\n                    setPasswordErrors(\"\");\n                }\n                // If repsonse is a success : log in the user and update MY_ACCOUNT cache\n                if(res.data.register.success === true)  {\n                    const response = await login({\n                        variables: {\n                            email: email.toLowerCase(),\n                            password,\n                        },\n                        update: (cache, { data: { login } } )=> {\n                            //Update cache with the login data\n                            cache.writeQuery({ \n                                query: MY_ACCOUNT,\n                                data : {\n                                    me : login.user\n                                } \n                            });          \n                        }\n                    })\n                    try {\n                        // If we have response data \n                        if (response?.data) {\n                        // Set access token to the header\n                        setAccessToken(response.data.login.accessToken)   \n                        // Push to feed \n                        history.push(\"/feed\")\n                        // Set logging back to false\n                        setLogging(false)\n                        }\n                    } catch(err) {\n                        console.log(err.message);\n                    }\n                }\n            })\n            . catch(err => {\n                console.log(err);\n            })\n        } else{\n            // Else if there are empty fields and errors handle correctly by setting the correct state\n            if(email === \"\") {\n                setEmailError(\"You must enter a valid email address.\");\n            } else if(emailError !== \"\")  {\n                setEmailError(\"You must enter a valid email address.\");\n            } else {\n                setEmailError(\"\");\n            }\n            if(password === \"\"){\n                setPasswordErrors(\"You must enter a password.\")\n            } else {\n                setPasswordErrors(\"\")\n            }\n            if(firstName === \"\"){\n                setNameErrors(\"You must enter a name.\")\n            } else {\n                setNameErrors(\"\")\n            }\n            if(day === \"\" || month === \"\" || year === \"\"){\n                setDobErrors({...dobErrors , all : \"You must enter a valid date of birth.\"})\n            }else {\n                setDobErrors({...dobErrors , all : \"\"})\n            }\n        }\n    }\n\n    const showPassword = (e:React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault()\n        if(passwordType === \"password\") {\n            setPasswordType(\"text\")\n            setShowOrHide(\"hide\")\n        } else {\n            setPasswordType(\"password\")\n            setShowOrHide(\"show\")\n        }\n    }\n\n    return (\n        <Fragment>\n            <div className=\"login-container\">\n                <h1>SocialSongs</h1>\n                <h2>Sign up to start creating projects and sharing with your mates</h2>\n                <form onSubmit={(e) => onSubmit(e)}>\n                    <span>\n                        <label htmlFor=\"email\">What's your email address?</label>\n                        <input \n                            type=\"text\" \n                            name=\"email\" \n                            id=\"email\"\n                            value={formData.email} \n                            placeholder=\"Enter Email\"\n                            style={ emailError ? {border: \"2px solid #F84061\"} : {border: \"none\"} }\n                            onChange={e => onEmailChange(e)}/>\n                             { emailError && <p className=\"input-error\">{emailError}</p>}\n                    </span>\n                    <span>\n                        <label htmlFor=\"password\">Password</label>\n                        <input \n                            type={passwordType} \n                            name=\"password\" \n                            id='password'\n                            value={formData.password} \n                            placeholder=\"Enter Password\"\n                            style={ passwordErrors ? {border: \"2px solid #F84061\"} : {border: \"none\"} }\n                            onFocus={() => setPasswordFocus(true)}\n                            onBlur={() => setPasswordFocus(true)}\n                            onChange={e => onChange(e)}/>\n                             { passwordErrors && <p className=\"input-error\">{passwordErrors}</p>}\n                             <button id=\"show-password\" onClick={(e) => showPassword(e)}>\n                                <img src={`/assets/icons/validate/${showOrHide}-password.svg`} alt=\"Show/hide password\"/>\n                            </button>\n                            <div className=\"password-warning\" style={passwordFocus === true ?{display: \"block\"} : {display: \"none\"}}>\n                                <p>Be cautious of the password you use, at this moment in time this is only a beta version of the application to demonstrate my development skills.</p>\n                            </div>\n                    </span> \n                    <span>\n                    <p className=\"label-p\">Have you got a name?</p>\n                        <span className=\"name-wrapper\">\n                            <span className=\"name-inputs\">\n                                <label htmlFor=\"firstName\">First Name</label>\n                                <input \n                                    type=\"text\" \n                                    name=\"firstName\" \n                                    id=\"firstName\"\n                                    value={formData.firstName} \n                                    placeholder=\"First name\"\n                                    style={ nameErrors ? {border: \"2px solid #F84061\"} : {border: \"none\"} }\n                                    onChange={e => onChange(e)}/>\n                            </span>\n                            <span className=\"name-inputs lastName-wrapper\">\n                                <label htmlFor=\"lastName\">Last Name</label>\n                                <input \n                                    type=\"text\" \n                                    name=\"lastName\" \n                                    id=\"lastName\"\n                                    value={formData.lastName} \n                                    placeholder=\"Last name\"\n                                    style={ nameErrors ? {border: \"2px solid #F84061\"} : {border: \"none\"} }\n                                    onChange={e => onChange(e)}/>\n                            </span>\n                        </span>\n                        { nameErrors && <p className=\"input-error\">{nameErrors}</p>}\n                    </span>\n                    <span>\n                        <p className=\"label-p\">What's your date of birth?</p>\n                        <span className=\"dob-wrapper\">\n                            <span className=\"dob-inputs day-wrapper\">\n                                <label htmlFor=\"day\">Day</label>\n                                <input \n                                    type=\"text\"\n                                    name=\"day\" \n                                    value={formData.day} \n                                    className=\"dob-input\"\n                                    id=\"day\"\n                                    placeholder=\"DD\"\n                                    maxLength={2}\n                                    style={  dobErrors.all || dobErrors.day !== \"\" ? {border: \"2px solid #F84061\"} : {border: \"none\"} }\n                                    onChange={e => onChange(e)}/>\n                            </span>\n                            <span className=\"dob-inputs month-wrapper\">\n                                <label htmlFor=\"month\">Month</label>\n                                <select \n                                    name=\"month\" \n                                    id=\"month\" \n                                    required\n                                    aria-invalid=\"true\"\n                                    style={  dobErrors.all || dobErrors.month !== \"\" ? {border: \"2px solid #F84061\"} : {border: \"none\"} }\n                                    onChange={e => onChange(e)} defaultValue={\"\"}>\n                                    <option disabled value=\"\"> Month</option>\n                                    <option value=\"January\">January</option>\n                                    <option value=\"February\">February</option>\n                                    <option value=\"March\">March</option>\n                                    <option value=\"April\">April</option>\n                                    <option value=\"May\">May</option>\n                                    <option value=\"June\">June</option>\n                                    <option value=\"July\">July</option>\n                                    <option value=\"August\">August</option>\n                                    <option value=\"September\">September</option>\n                                    <option value=\"October\">October</option>\n                                    <option value=\"November\">November</option>\n                                    <option value=\"December\">December</option>\n                                </select>\n                            </span>\n                                <span className=\"dob-inputs year-wrapper\">\n                                <label htmlFor=\"year\">Year</label>\n                                <input \n                                    type=\"text\" \n                                    name=\"year\" \n                                    value={formData.year} \n                                    className=\"dob-input\"\n                                    id=\"year\"\n                                    placeholder=\"YYYY\"\n                                    maxLength={4}\n                                    style={ dobErrors.all || dobErrors.year !== \"\" ? {border: \"2px solid #F84061\"} : {border: \"none\"} }\n                                    onChange={e => onChange(e)}/>\n                            </span>\n                        </span>\n                        { dobErrors.day || dobErrors.month || dobErrors.year || dobErrors.all ? <p className=\"input-error\">Enter a valid date of birth</p> : null}\n                    </span>\n                    <input type=\"submit\" value=\"Register\" className=\"submit-btn\" id=\"register-submit\"/>\n                    <p className=\"login-p\">Already have an account? <Link to=\"/login\" className=\"login-link\">Login</Link></p>\n                </form>\n            </div>\n         </Fragment>\n    );\n}\n\nexport default withRouter(Register);","import React , { useEffect, useState } from 'react'\nimport { NavLink, useLocation, withRouter } from \"react-router-dom\";\n\nimport { connect, ConnectedProps } from \"react-redux\";\n\nimport { useQuery } from \"@apollo/client\";\nimport { MY_PROJECTS, MY_ACCOUNT } from \"../../graphql/queries\";\n \ninterface ComponentProps {\n  application: {\n    projectPanel: boolean\n  }\n}\n\nconst mapState = (state: ComponentProps) => ({\n  projectPanel: state.application.projectPanel\n})\n\nconst mapDispatch = {\n  intialiseProject: (bool: boolean ) => ({type: \"INIT_PROJECT\", payload: bool }),\n  toggleNavbar: (payload: boolean) => ({type: \"NAVBAR_TOGGLE\", payload })\n}\n\nconst connector = connect(mapState, mapDispatch);\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux & {\n  history : any\n}\n\nconst DropDown = ({history,projectPanel, intialiseProject, toggleNavbar} : Props) => {\n  const { data, loading } = useQuery(MY_PROJECTS); \n  const { data: meData, loading: meLoading } = useQuery(MY_ACCOUNT); \n  const locationPath = useLocation();\n  var pathname = locationPath.pathname;\n  var params = pathname.split(\"/\");\n  const [routeLocation] = useState(params[1]);\n\n  useEffect(() => {\n    let unlisten = history.listen((location: any, action: any) => {\n      toggleNavbar(false)\n    });\n    return () => {\n      unlisten();\n    }\n  }, [history, toggleNavbar])\n\n  const toggleCreatePanel = () => {\n    if(projectPanel === false) {\n      intialiseProject(true)\n    } else {\n      intialiseProject(false)\n    }\n  }\n  return (\n      <div \n        className={routeLocation === \"workspace\" ? 'workspace-drop-down' : \"drop-down-wrapper\"}>\n      <div className=\"main-menu\">\n        <nav className=\"menu-navigation\">\n          <ul> \n            { !meLoading && meData && meData.me &&    \n              <li>\n\n                <NavLink exact activeClassName=\"navlink-active\" to=\"/profile/me\">\n                <span className=\"menu-icons\">\n                  <img src={meData.me.avatar} alt=\"Profile Avatar\" className=\"avatar\"/>\n                </span>\n                  <p className=\"user-name\">{meData.me.firstName + \" \" + meData.me.lastName}</p></NavLink></li>\n           } \n            <li>\n              <NavLink exact activeClassName=\"navlink-active\" to=\"/feed\">\n              <span className=\"menu-icons\">\n               <img src=\"/assets/icons/menu/feed.svg\" alt=\"Feed\"/>\n              </span>\n              <p>Feed</p>\n             </NavLink>\n            </li>\n            <li>\n              <NavLink exact activeClassName=\"navlink-active\" to=\"/discover\">\n              <span className=\"menu-icons\">\n               <img src=\"/assets/icons/menu/discover.svg\" alt=\"Discover\"/>\n              </span>\n              <p>Discover</p>\n             </NavLink>\n            </li>\n            <li>\n              <NavLink exact activeClassName=\"navlink-active\" to=\"/projects\">\n              <span className=\"menu-icons\">\n                <img src=\"/assets/icons/menu/projects.svg\" alt=\"Project\"/>\n              </span>\n              <p>Projects</p>\n            </NavLink>\n            </li>\n            <li>\n              <NavLink exact activeClassName=\"navlink-active\" to=\"/mates\">\n              <span className=\"menu-icons\">\n                <img src=\"/assets/icons/menu/mates.svg\" alt=\"Mates\"/>\n              </span>\n              <p>Mates</p>\n              </NavLink>\n              </li>\n          </ul>\n        </nav>\n        <nav className=\"menu-projects\">\n          <ul>\n            <li className=\"menu-projects-title\"><p>Projects</p></li>\n            <li className=\"menu-create\">\n              <button \n                className=\"menu-create-project\"\n                onClick={() => toggleCreatePanel()}\n                >\n                  <div className=\"btn-bg\"></div>\n                  <p>Create</p> \n                  <img className=\"icon-white\" src=\"/assets/icons/create/plus-white.svg\" alt=\"Create Project\"/>\n                  <img className=\"icon-blue\" src=\"/assets/icons/create/plus-blue.svg\" alt=\"Create Project\"/>\n                  </button></li>\n                  <ul className=\"project-names\">\n                  { !loading && data && data.myProjects ? data.myProjects.map((project: any) => \n            <li key={project.id}><NavLink exact activeClassName=\"navlink-active\" to={`/workspace/${project.id}`}>{project.name}</NavLink></li>) : null}\n                  </ul>\n          </ul>\n        </nav>\n      </div>\n    </div>\n  )\n}\n\nexport default withRouter(connector(DropDown));\n","import React , {Fragment , useEffect, useState} from 'react'\nimport { Link, withRouter, useLocation } from \"react-router-dom\";\n// GraphQL\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { LOGOUT_USER } from \"../../graphql/mutations\"\nimport { MY_ACCOUNT } from \"../../graphql/queries\"\n// Components\nimport { setAccessToken } from '../../accessToken';\n// Redux\nimport { connect, ConnectedProps } from \"react-redux\";\n\ninterface ComponentProps {\n\n}\n\nconst mapState = (state: ComponentProps) => ({\n\n})\n\nconst mapDispatch = {\n  logoutUser: () => ({ type: \"CLEAR_USER\", payload: false}),\n  closeSettingsPanel : (payload: boolean) => ({ type: \"CLOSE_SETTINGS_PANEL\", payload: payload })\n}\n\nconst connector = connect(mapState, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux & {\n  history: any\n}\n\nconst AccountOptions = ({logoutUser, closeSettingsPanel , history} :Props) => {\n  const [oldLocation , setLocation] = useState(\"\")\n  const [logout, { client }] = useMutation(LOGOUT_USER);\n  const { data, loading } = useQuery(MY_ACCOUNT);\n \n  var location = useLocation();\n  var pathName = location.pathname\n\n  useEffect(() => {\n    if(oldLocation !== \"\" &&  pathName !== oldLocation) {\n      closeSettingsPanel(false)\n      setLocation(pathName)\n    } else {\n      setLocation(pathName)\n    }\n  }, [pathName, oldLocation, closeSettingsPanel])\n\n  \n  const logoutUserFunction = async () => {\n  logoutUser();\n   await logout();\n   try{\n    closeSettingsPanel(false);\n    setAccessToken(\"\");\n    history.push(\"/login\")\n    await client.resetStore();\n   }catch(err) {\n     console.log(err);\n   }\n  }\n    return (\n      <div className=\"account-options-dropdown\">\n        <span className=\"top-wrapper\">\n          { !loading && data && data.me &&\n          <Fragment >\n          <img src={data.me.avatar} className=\"avatar\" alt=\"Users Avatar\"></img>\n          <p>{ data.me.firstName + \" \" + data.me.lastName }</p>\n          </Fragment>\n        }\n        </span>\n        <ul>\n        <li><img src=\"/assets/icons/menu/profile.svg\" className=\"account-icons\"alt=\"Profile Icon\"/><Link to=\"/profile/me\">Profile</Link></li>\n        <li><img src=\"/assets/icons/menu/settings.svg\" className=\"account-icons\" alt=\"Settings Icon\"/><Link to=\"/settings\">Settings</Link></li>\n          <li><img src=\"/assets/icons/menu/logout.svg\"className=\"account-icons\"  alt=\"Logout Icon\"/><button onClick={() => logoutUserFunction()}>Logout</button></li>\n        </ul>\n      </div>\n    );\n}\n\nexport default withRouter(connector(AccountOptions));","import React, {useEffect, useState, Fragment} from 'react'\nimport { useLocation , Link, withRouter} from \"react-router-dom\";\n// GraphQL\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport {GET_NOTIFICATIONS, GET_MY_MATES, MY_ACCOUNT} from \"../../graphql/queries\";\nimport { ADD_MATE , DELETE_NOTIFICATION} from \"../../graphql/mutations\";\n// Redux\nimport {connect, ConnectedProps} from \"react-redux\";\n\n\ninterface ComponentProps {\n  application: {\n    notificationPanel : boolean\n  }\n}\n\nconst mapStateToProps = (state: ComponentProps) => ({\n  notificationPanel: state.application.notificationPanel\n})\n\nconst mapDispatch = {\n  toggleNotifications : (payload: boolean) => ({ type: \"TOGGLE__NOTIFICATIONS\", payload: payload }),\n}\n\nconst connector = connect(mapStateToProps, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>\n\ntype Props = PropsFromRedux & {\n  history: any\n}\n\nconst Notifications = ({toggleNotifications, notificationPanel, history} : Props) => {\n  const [oldLocation , setLocation] = useState(\"\")\n  const { loading, data } = useQuery(GET_NOTIFICATIONS);\n  const { loading: meLoading, data: meData } = useQuery(MY_ACCOUNT);\n\n  const [addMate] = useMutation(ADD_MATE);\n  const [deleteNotification] = useMutation(DELETE_NOTIFICATION);\n\n  var location = useLocation();\n  var pathName = location.pathname\n\n useEffect(() => {\n    if(oldLocation !== \"\" &&  pathName !== oldLocation) {\n      toggleNotifications(false)\n      setLocation(pathName)\n    } else {\n      setLocation(pathName)\n    }\n  }, [pathName, oldLocation, toggleNotifications])\n\n\n  if(!loading && data){\n    console.log(data);\n  }\n  const acceptMateRequest = async (userId: number , notificationId: number) => {\n    console.log(userId);\n    await addMate({\n      variables: {\n        mateId: userId\n      },\n      update: (cache, { data: { addMate } }) => {\n        cache.writeQuery({\n          query: GET_MY_MATES, \n          variables : {\n          userId: meData.me.id\n          }, \n          data: {\n            getMates: addMate\n          } \n      })\n      }\n    })\n    try{\n        await deleteNotification({\n        variables: {\n          id: notificationId \n        },\n        update: (cache , {data: {deleteNotification} }) => {\n          cache.writeQuery({\n            query: GET_NOTIFICATIONS,\n            data : {\n              notifications: deleteNotification\n            }\n          })\n        }\n      }).then(() => {\n          // Close notifications with redux\n      })\n      .catch(err => console.log(err))\n      \n    }catch(err) {\n      console.log(err);\n    }\n    \n  }\n\n  const declineRequest = async (notificationId: number) => {\n    await deleteNotification({\n      variables: {\n        id: notificationId \n      },\n      update: (cache , {data: {deleteNotification} }) => {\n        cache.writeQuery({\n          query: GET_NOTIFICATIONS,\n          data : {\n            notifications: deleteNotification\n          }\n        })\n      }\n    })\n  }\n  const takeToProject = async (notificationId: number, projectId: string) => {\n      history.push(`/workspace/${projectId}`)\n      await deleteNotification({\n        variables: {\n          id: notificationId \n        },\n        update: (cache , {data: {deleteNotification} }) => {\n          cache.writeQuery({\n            query: GET_NOTIFICATIONS,\n            data : {\n              notifications: deleteNotification\n            }\n          })\n        }\n      })\n  }\n      return (\n          <div className=\"notifications-container\">\n            <h3>Notifications</h3>\n            <ul>\n              {!loading && data && data.notifications && data.notifications.map((notification: any) => \n               <li key={notification.id} > \n                <div className=\"list-top\">\n                <Link to={`/profile/${notification.senderId}`}>\n                  <img src={notification.avatar} alt=\"User Avatar\"/>\n                </Link>\n              \n                  <Fragment>\n                   <p className=\"name\">\n                     <Link to={`/profile/${notification.senderId}`}>{notification.senderName}</Link> {notification.message.split(\"/\")[0]}</p>\n                  </Fragment>\n             \n                </div>\n                { notification.type === \"request\" &&  \n                    <div className=\"li-btns\">\n                      <button className=\"accept-btn\" onClick={() => acceptMateRequest(notification.senderId, notification.id)}>Accept</button>\n                      <button className=\"decline-btn\" onClick={() => declineRequest(notification.id)}>Decline</button>\n                    </div>\n                 }\n                 {\n                   notification.type === \"contributor\" && \n                    <div className=\"li-btns\">\n                      <button onClick={() => takeToProject(notification.id, notification.message.split(\"/\")[1])}>See project</button>\n                      <button className=\"decline-btn\" onClick={() => declineRequest(notification.id)}>Delete</button>\n                    </div>\n                 }\n              </li>)}\n              {!loading && data && data.notifications.length < 1 && <li>You have no notifcations.</li> }\n            </ul>\n          </div>\n      )}\n\nexport default withRouter(connector(Notifications));\n","import React, { useState, useEffect, Fragment, useRef } from 'react'\nimport { Link, useLocation, withRouter } from \"react-router-dom\"\n// GraphQL\nimport { useQuery } from \"@apollo/client\"\nimport { SEARCH_APPLICATION } from \"../../graphql/queries\"\n// Redux\nimport { connect, ConnectedProps } from \"react-redux\"\n\ninterface ComponentProps {\n  application : {\n    searchPanel: boolean\n  }\n}\n\nconst mapState = (state: ComponentProps) => ({\n  searchPanel: state.application.searchPanel\n}) \n\nconst mapDispatch = {\n  toggleSearch : (payload: boolean) => ({ type: \"TOGGLE_SEARCH\", payload: payload })\n}\n\nconst connector = connect(mapState, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux & {\n  history : any\n}\n\nconst Search = ({toggleSearch, searchPanel, history}: Props) => {\n  const [ searchData, setSearchData ] = useState({ search: \"\" })\n  const [routeLocation, setLocation] = useState(\"\")\n  const [indexLimit, setIndexLimit] = useState(8);\n  const { data, loading } = useQuery(SEARCH_APPLICATION, {\n    variables: {\n      input : searchData.search.toLowerCase()\n    }\n  })\n  const location = useLocation();\n  const searchInput = useRef(null);\n\n  useEffect(() => {\n    let pathname = location.pathname;\n    if(routeLocation !== \"\" && pathname!== routeLocation) {\n      toggleSearch(false)\n      setLocation(pathname)\n    } else {\n      setLocation(pathname)\n    }\n\n  }, [location, routeLocation, toggleSearch])\n\n  const closeContainer = () => {\n    if(searchPanel === true ) {\n      toggleSearch(false);\n    } else {\n      toggleSearch(true);\n    }\n  }\n  const onChange = (e:React.ChangeEvent<HTMLInputElement>) => {\n    setSearchData({...searchData, search: e.target.value })\n  }\n\n  const onSubmit = (e:React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n    history.push(`/search/${searchData.search.toLowerCase()}`)\n  }\n\n  return (\n    <div className=\"search-container\">\n      <span className=\"flex-wrapper\">\n        <button className=\"header-btns\" onClick={() => closeContainer()}>\n          <img src=\"/assets/icons/menu/back.svg\" alt=\"back\"/>\n        </button>\n        <form id=\"search-form\" onSubmit={(e) => onSubmit(e)}>\n          <input autoFocus ref={searchInput} type=\"text\" id=\"search-bar\" placeholder=\"Search projects, people and bands\" value={searchData.search} onChange={(e) => onChange(e)}/>\n        </form>\n      </span>\n      { searchData.search !== \"\" && \n        <ul className=\"search-list\">\n           { !loading && data && data.searchApplication.users.length !== 0 && \n           <Fragment>\n            <span className=\"list-headings\">\n            <h3>Users</h3>\n            <Link to={`/search/${searchData.search}`} className=\"see-more\">See more</Link>\n            </span>\n              { data.searchApplication.users.map((user: any, index: number) => \n              <Fragment key={user.id}>\n                { index < indexLimit &&\n                    <li key={user.id} >\n                    <Link to={`/profile/${user.id}`}  className=\"search-link\"> </Link>\n                      <span>\n                        <img src={user.avatar} alt=\"Users avatar\"/>\n                      </span>\n                      <p className=\"username\">{user.firstName}</p>\n                  </li>\n                 }\n              </Fragment>\n              )}  \n          </Fragment> }\n          { !loading && data && data.searchApplication.projects.length !== 0 && <Fragment>\n            <span className=\"list-headings\">\n              <h3>Projects</h3>\n              <Link to={`/search/${searchData.search}`} className=\"see-more\">See more</Link>\n            </span>\n            {data.searchApplication.projects.map((project: any, index: number) => \n            <Fragment key={project.id}>\n              { index < indexLimit &&\n             <li key={project.id}>\n              <Link to={`/workspace/${project.id}`} className=\"search-link\"></Link>\n                <span>\n                  <img className=\"project-icon\" src=\"/assets/icons/menu/projects.svg\" alt=\"Project icon\"/>\n                </span>\n                <p>{project.name}</p>\n                <Link to={`/profile/${project.creatorId}`} className=\"creator\">by <em>{project.creatorName}</em></Link>\n              </li>\n            }\n            </Fragment> \n          )}\n          </Fragment> }\n        </ul>\n      }\n    </div>\n  )\n}\n\nexport default withRouter(connector(Search));","import React from 'react'\n// Redux\nimport {connect, ConnectedProps} from \"react-redux\";\ninterface ComponentProps {\n  application:  {\n    postPanel : boolean,\n    projectPanel: boolean,\n  },\n}\n\nconst mapStateToProps = (state: ComponentProps) => ({\n  postPanel : state.application.postPanel,\n  projectPanel: state.application.projectPanel,\n})\n\nconst mapDispatch = {\n  closePostPanel : (payload: boolean) => ({ type: \"CLOSE_POST_PANEL\", payload: payload }),\n  intialiseProject: (bool: boolean ) => ({type: \"INIT_PROJECT\", payload: bool }),\n\n}\n\nconst connector = connect(mapStateToProps, mapDispatch);\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux\n\nconst CreateOptions = ({postPanel , projectPanel, closePostPanel, intialiseProject } : Props) => {\n  const createProject = () => {\n    if(projectPanel === false) {\n      intialiseProject(true)\n    } else {\n      intialiseProject(false)\n    }\n  } \n  const createPost = () => {\n    if(postPanel === false) {\n      closePostPanel(true)\n    } else {\n      closePostPanel(false)\n    }\n  }\n  return (\n    <div className=\"create-options\">\n      <button onClick={() => createProject()}>\n      <img src=\"/assets/icons/menu/create-projects.svg\" alt=\"Create Post\"/>\n        <p>New Project</p></button>\n      <button onClick={() => createPost()}>\n      <img src=\"/assets/icons/menu/post.svg\" alt=\"Create Post\"/>\n        <p>New Post</p>\n      </button>\n    </div>\n  )\n}\n\nexport default connector(CreateOptions);\n","import React, {useState, Fragment, useEffect} from 'react'\nimport { useLocation } from \"react-router-dom\";\n// GraphQL\nimport { useQuery } from \"@apollo/client\";\nimport { MY_ACCOUNT, GET_NOTIFICATIONS, USER_BY_ID } from \"../../graphql/queries\";\n// Redux\nimport {connect, ConnectedProps} from \"react-redux\";\n// Components\nimport DropDown from \"../navigation/DropDown\";\nimport AccountOptions from \"./AccountOptions\";\nimport Notifications from \"../notifications/Notifications\";\nimport Search from \"./Search\";\nimport CreateOptions from './CreateOptions';\n\ninterface ComponentProps {\n  application:  {\n    location: string,\n    settingsPanel: boolean,\n    postPanel : boolean,\n    projectPanel: boolean,\n    notificationPanel : boolean,\n    searchPanel: boolean,\n    createPanel: boolean,\n    navbar: boolean,\n  },\n  user : {\n    authenticated: boolean,\n    user : {\n      id: number\n    }\n  }\n  LoggedIn: string,\n  Guest: string\n}\n\nconst mapStateToProps = (state: ComponentProps) => ({\n  location : state.application.location,\n  settingsPanel: state.application.settingsPanel,\n  postPanel : state.application.postPanel,\n  projectPanel: state.application.projectPanel,\n  notificationPanel: state.application.notificationPanel,\n  searchPanel: state.application.searchPanel,\n  createPanel: state.application.createPanel,\n  authenticated: state.user.authenticated,\n  user: state.user.user,\n  navbar: state.application.navbar\n})\n\nconst mapDispatch = {\n  closeSettingsPanel : (payload: boolean) => ({ type: \"CLOSE_SETTINGS_PANEL\", payload }),\n  closePostPanel : (payload: boolean) => ({ type: \"CLOSE_POST_PANEL\", payload }),\n  intialiseProject: (bool: boolean ) => ({type: \"INIT_PROJECT\", payload: bool }),\n  toggleNotifications : (payload: boolean) => ({ type: \"TOGGLE__NOTIFICATIONS\", payload }),\n  toggleSearch : (payload: boolean) => ({ type: \"TOGGLE_SEARCH\", payload }),\n  toggleCreatePanel: (payload: boolean) => ({type: \"TOGGLE_CREATE_PANEL\", payload}),\n  toggleNavbar: (payload: boolean) => ({ type: \"NAVBAR_TOGGLE\", payload })\n}\n\nconst connector = connect(mapStateToProps, mapDispatch);\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux\n\nconst Header = ({navbar, location, createPanel, user, postPanel, projectPanel,settingsPanel, notificationPanel, searchPanel, toggleNotifications, closePostPanel, intialiseProject, closeSettingsPanel, toggleSearch, toggleCreatePanel, toggleNavbar} : Props) => {\n  const [btnDetails, setBtnDetails] = useState(\"\")\n  const [unRead, setUnRead]= useState(0)\n  const [toggleMenu, setToggleMenu] = useState(false);\n  const [componentLocation, setComponentLocation] = useState(\"\");\n  const { loading, data } = useQuery(MY_ACCOUNT);\n  const { loading: userLoading, data: userData } = useQuery(USER_BY_ID, {\n    variables : {\n      userId: user?.id\n    }\n  })\n  const { loading: notifLoading, data: notifData } = useQuery(GET_NOTIFICATIONS);\n  const routeLocation = useLocation();\n  var pathname = routeLocation.pathname;\n\n  useEffect(() => {\n    if(pathname !== componentLocation) {\n      setComponentLocation(pathname);\n      setToggleMenu(false);\n    }\n    if(!notifLoading && notifData && notifData.notifications) {\n      setUnRead(notifData.notifications.length)\n      }       \n\n  }, [user,notifLoading, notifData, loading , data, pathname, componentLocation, toggleNavbar])\n\n\n  if(loading) {\n    return <div>Loading...</div>\n  }\n  \n  const openOptionsMenu = () => {\n    if(settingsPanel === false) {\n      closeSettingsPanel(true);\n    } else if(settingsPanel === true) {\n      closeSettingsPanel(false);\n    }\n  }\n\n  const createPost = () => {\n    if(postPanel === false) {\n      closePostPanel(true)\n    } else {\n      closePostPanel(false)\n    }\n  }\n  const createProject = () => {\n    if(projectPanel === false) {\n      intialiseProject(true)\n    } else {\n      intialiseProject(false)\n    }\n  } \n  const openNotifications = () => {\n    if(notificationPanel === false) {\n      toggleNotifications(true)\n    } else {\n      toggleNotifications(false)\n    }\n  }\n\n  const openSearchContainer = () => {\n    if(searchPanel === false) { \n        toggleSearch(true)   \n    } else {\n      toggleSearch(false)   \n    }\n  }\n\n  const openBurgerMenu = () => {\n    if(navbar === true ) {\n      toggleNavbar(false)\n    } else {\n      toggleNavbar(true)\n    }\n  }\n  const openCreateMenu = () => {\n    if(createPanel) {\n      toggleCreatePanel(false)\n    } else {\n      toggleCreatePanel(true)\n    }\n  }\n      return (\n        <Fragment>\n          <div className=\"app-header\">\n            <div className=\"header-wrapper\">\n              <div className=\"aligned-left\">\n                {/* <h3 className=\"logo\">Space</h3> */}\n                <span id=\"left-btns\" style={location === \"workspace\" ?{display:\"flex\"} : {display:\"\"} }>\n                <span className=\"header-btn-wrapper\">\n                  <button\n                    className=\"header-btns\"\n                    onClick={() => openSearchContainer()}\n                    onMouseOver={() => setBtnDetails(\"Search\")}\n                    onMouseOut={() =>  setBtnDetails(\"\")}>\n                      <img src=\"/assets/icons/menu/search-btn.svg\" alt=\"Search\"/>\n                      { btnDetails === \"Search\" && <div className=\"btn-info\">\n                    <p>{btnDetails}</p></div>}\n                  </button>\n                  </span>\n                  <span className=\"header-btn-wrapper\" >\n                  <button \n                    className=\"header-btns\"\n                    onClick={() => openBurgerMenu()}\n                    onMouseOver={() => setBtnDetails(\"Menu\")}\n                    onMouseOut={() =>  setBtnDetails(\"\")}>\n                      <img src=\"/assets/icons/menu/burger.svg\" alt=\"Open Menu\"/>\n                      { btnDetails === \"Menu\" && <div className=\"btn-info\">\n                      <p>{btnDetails}</p></div>}\n                  </button>\n                </span>\n                </span>\n                <span className=\"header-btn-wrapper\" id=\"search-to-hide\">\n                  <button\n                    className=\"header-btns\"\n                    onClick={() => openSearchContainer()}\n                    onMouseOver={() => setBtnDetails(\"Search\")}\n                    onMouseOut={() =>  setBtnDetails(\"\")}\n                    style={location === \"workspace\" ?{display:\"none\"} : {display:\"block\"}}>\n                      <img src=\"/assets/icons/menu/search-btn.svg\" alt=\"Search\"/>\n                      { btnDetails === \"Search\" && <div className=\"btn-info\">\n                    <p>{btnDetails}</p></div>}\n                  </button>\n                  </span>\n\n              </div>\n              <img src=\"/assets/icons/logo/logo-white.svg\" alt=\"Foliotune Logo\" className=\"header-logo\"/>\n              <div className=\"aligned-right\">\n              <span className=\"header-btn-wrapper\"  id=\"create-project-btn\" >\n                <button \n                  className=\"header-btns\" \n                  onClick={() => createProject()}\n                  onMouseOver={() => setBtnDetails(\"Create Project\")}\n                  onMouseOut={() =>  setBtnDetails(\"\")}>\n                  <img src=\"/assets/icons/menu/create-projects.svg\" alt=\"Create Project\"/>\n                  { btnDetails === \"Create Project\" && \n                  <div className=\"btn-info\">\n                     <p>{btnDetails}</p>\n                  </div>}\n                </button>\n                </span>\n                <span className=\"header-btn-wrapper\"   id=\"create-post-btn\" >\n                <button \n                  className=\"header-btns\" \n                  onClick={() => createPost()}\n                  onMouseOver={() => setBtnDetails(\"Create Post\")}\n                  onMouseOut={() =>  setBtnDetails(\"\")}>\n                  <img src=\"/assets/icons/menu/post.svg\" alt=\"Create Post\"/>\n                  { btnDetails === \"Create Post\" && <div className=\"btn-info\">\n                  <p>{btnDetails}</p></div>}\n                </button>\n                </span> \n                <span className=\"header-btn-wrapper\"    id=\"notifcations-btn\" >\n                <button \n                  className=\"header-btns\"        \n                  onClick={() => openNotifications()}\n                  onMouseOver={() => setBtnDetails(\"Notficiations\")}\n                  onMouseOut={() =>  setBtnDetails(\"\")}>\n                  <img src=\"/assets/icons/menu/notifications.svg\" alt=\"Notifications\"/>\n                  {unRead !== 0 && <div className=\"unread-notifications\">{unRead}</div>} \n                  { btnDetails === \"Notficiations\" && <div className=\"btn-info\">\n                    <p>{btnDetails}</p></div>}\n                </button>  \n                {notificationPanel === true ? <Notifications /> : null}\n                </span>\n                <span className=\"header-btn-wrapper\"    id=\"create-btn\" >\n                <button \n                    className=\"header-btns\" \n                    onClick={() => openCreateMenu()}\n                    onMouseOver={() => setBtnDetails(\"Create\")}\n                    onMouseOut={() =>  setBtnDetails(\"\")}>\n                    <img src=\"/assets/icons/menu/create.svg\" alt=\"Create Project\"/>\n                  { btnDetails === \"Create\" && <div className=\"btn-info\">\n                    <p>{btnDetails}</p></div>}\n                </button>\n                {createPanel && <CreateOptions />}\n                </span>\n                <span className=\"header-btn-wrapper\"   id=\"settings-btn\" >\n                <button \n                    className=\"header-btns\" \n                    onClick={() => openOptionsMenu()} \n                    onMouseOver={() => setBtnDetails(\"Options\")}\n                    onMouseOut={() =>  setBtnDetails(\"\")}>\n                  <img src=\"/assets/icons/menu/settings.svg\" alt=\"settings\"/>\n                  { btnDetails === \"Options\" && <div className=\"btn-info\">\n                    <p>{btnDetails}</p></div>}\n                </button>\n                </span>\n                { !loading && data && data.me && \n                  <img src={data.me.avatar} className=\"profile-avatar\"  id=\"avatar\"  alt=\"Profile Avatar\"/>}\n                {!loading && data && data.me === null && !userLoading && userData && userData.user  && <img src={userData.user.avatar} className=\"profile-avatar\" alt=\"Profile Avatar\"/>}\n              </div>\n              {settingsPanel === true  ? <AccountOptions/> : null}\n              {searchPanel === true && <Search />}\n            </div>\n          </div>\n            { navbar === true && <DropDown></DropDown>}\n       </Fragment>\n      )}\n\nexport default connector(Header);\n","import React, { useState } from 'react'\nimport { NavLink } from \"react-router-dom\";\n// GraphQL\nimport { useQuery } from \"@apollo/client\"\nimport { MY_PROJECTS, MY_ACCOUNT } from \"../../graphql/queries\";\n//  Redux\nimport { connect, ConnectedProps } from \"react-redux\";\n\ninterface ComponentProps  {\n  application : {\n    projectPanel: boolean\n  }\n}\n\nconst mapState = (state: ComponentProps) => ({\n  projectPanel: state.application.projectPanel\n})\n\nconst mapDispatch = {\n  intialiseProject: (bool: boolean ) => ({type: \"INIT_PROJECT\", payload: bool }),\n}\n\nconst connector = connect(mapState, mapDispatch);\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux\n\n const Navigation = ({projectPanel,  intialiseProject} : Props) => {\n   const [activeLink, setActiveLink] = useState(\"\")\n  const { data, loading } = useQuery(MY_PROJECTS);\n  const { data: meData, loading: meLoading } = useQuery(MY_ACCOUNT);\n\n  const createProject = () => {\n    if(projectPanel === false) {\n      intialiseProject(true)\n    } else {\n      intialiseProject(false)\n    }\n  } \n  return (\n    \n    <div className=\"main-menu\">\n      <h4 className=\"menu-title\">Menu</h4>\n      <nav className=\"menu-navigation\">\n      <ul> \n            { !meLoading && meData && meData.me &&    \n              <li>\n                <NavLink exact activeClassName=\"navlink-active\" to=\"/profile/me\">\n                <span className=\"menu-icons\">\n                  <img src={meData.me.avatar} alt=\"Profile Avatar\" className=\"avatar\"/>\n                </span>\n                <p className=\"profile-name\">{meData.me.firstName + \" \" + meData.me.lastName}</p></NavLink></li>\n           } \n            <li>\n              <NavLink exact activeClassName=\"navlink-active\" to=\"/feed\">\n              <span className=\"menu-icons\">\n               <img src=\"/assets/icons/menu/feed-bg.svg\" alt=\"Feed\"/>\n              </span>\n              <p>Feed</p>\n              <div className=\"active-circle\"></div> </NavLink>\n            </li>\n            <li>\n              <NavLink exact activeClassName=\"navlink-active\" to=\"/discover\">\n              <span className=\"menu-icons\">\n               <img src=\"/assets/icons/menu/discover-bg.svg\" alt=\"Discover\"/>\n              </span>\n              <p>Discover</p>\n              <div className=\"active-circle\"></div> </NavLink>\n            </li>\n            <li>\n\n              <NavLink exact activeClassName=\"navlink-active\" to=\"/projects\">\n                <span className=\"menu-icons\">\n                  <img src=\"/assets/icons/menu/projects-bg.svg\" alt=\"Project\"/>\n                </span>\n                <p>Projects</p>\n              <div className=\"active-circle\"></div> </NavLink>\n            </li>\n            <li>\n              <NavLink exact activeClassName=\"navlink-active\" to=\"/mates\">\n              <span className=\"menu-icons\">\n                <img src=\"/assets/icons/menu/mates-bg.svg\" alt=\"Mates\"/>\n              </span>\n              <p>Mates</p>\n              <div className=\"active-circle\"></div> </NavLink>\n              </li>\n          </ul>\n  \n      </nav>\n      <nav className=\"menu-projects\">\n        <ul>\n          <li><p className=\"menu-projects-title\">Projects</p></li>\n          <li>\n            <button \n              className=\"menu-create-project\"\n              onClick={() => createProject()}\n              disabled={projectPanel === true}\n              >\n            <p>Create</p>\n            <img src=\"/assets/icons/plus/plus-white.svg\" alt=\"Create Project\"/></button></li>\n\n            { !loading && data && data.myProjects ? data.myProjects.map((project: any) => \n            <li key={project.id}><NavLink exact activeClassName=\"navlink-active\" to={`/workspace/${project.id}`}>{project.name}</NavLink></li>) : null}\n            \n        </ul>\n      </nav>\n  </div>\n  )\n}\n\nexport default connector(Navigation);\n","import React, { useState, useEffect } from 'react'\nimport { useLocation } from \"react-router-dom\";\n// GraphQL\nimport { useMutation } from \"@apollo/client\";\nimport { CREATE_POST } from \"../../../graphql/mutations\";\nimport { MY_POSTS, FEED_POSTS, ALL_POSTS } from \"../../../graphql/queries\";\n// Redux \nimport { connect, ConnectedProps } from \"react-redux\";\n// Component props types\ninterface ComponentProps {\n  application : {\n    postPanel : boolean\n  }\n }\n \n const mapState = (state: ComponentProps) => ({\n   postPanel : state.application.postPanel\n })\n const mapDispatch = {\n   closePostPanel : (payload: boolean) => ({ type: \"CLOSE_POST_PANEL\", payload: payload }),\n }\n \n const connector = connect(mapState, mapDispatch)\n type PropsFromRedux = ConnectedProps<typeof connector>;\n type Props = PropsFromRedux;\n \nconst CreatePost = ({closePostPanel} : Props) => {\n    const [oldLocation , setLocation] = useState(\"\")\n    const [post, setPostContent] = useState(\"\");\n    const [createPost] = useMutation(CREATE_POST)\n    // Find location from the pathname\n    var location = useLocation();\n    var pathName = location.pathname\n  \n    useEffect(() => {\n      // Check to see if the route has changed\n      // If so close the create panel\n      if(oldLocation !== \"\" &&  pathName !== oldLocation) {\n        closePostPanel(false)\n        setLocation(pathName)\n      } else {\n        setLocation(pathName)\n      }\n    }, [pathName, oldLocation, closePostPanel])\n\n    const onSubmit =  (e:React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      const postConent = post;\n      // Create the post and update all caches that will display your new  post\n      createPost({\n        variables: { content : postConent },\n        update: (cache, { data: { createPost } }) => {\n          // Cache for my posts : Update cache to show on profile in realtime\n          const cacheMyData: any = cache.readQuery({ query: MY_POSTS });\n          // Check to see if there is a cache\n          if(cacheMyData !== null) {\n          const udatedMyCache = [...cacheMyData.myPosts , createPost];\n          cache.writeQuery({ \n            query: MY_POSTS,\n            data : {\n              myPosts : udatedMyCache\n            } \n           });\n          }\n          // Cache for feed posts :  Used on /feed route\n          const cacheFeedData: any = cache.readQuery({ query: FEED_POSTS });\n          // Check to see if there is a cache\n          if(cacheFeedData !== null) {\n          const udatedFeedCache = [...cacheFeedData.myFeed , createPost];\n          cache.writeQuery({ \n            query: FEED_POSTS,\n            data : {\n              myFeed : udatedFeedCache\n            } \n           });\n          }\n          // Cache for all posts : Used on /discover route\n          const cacheAllData: any = cache.readQuery({ query: ALL_POSTS });\n           // Check to see if there is a cache\n          if(cacheAllData !== null) {\n          const updatedAllCache = [...cacheAllData.allPosts , createPost];\n           cache.writeQuery({ \n            query: ALL_POSTS,\n            data : {\n              allPosts : updatedAllCache\n            } \n           });\n          }\n        }\n      }).then((res) => {\n          // If successful then clear state and close the post panel\n          setPostContent(\"\");\n          closePostPanel(false);\n        })\n        .catch(err => console.log(err))\n    }\n\n    return (\n       <div className=\"create-container\">\n        <span className=\"panel-top\">\n              <h4>Create Post</h4>\n              <button onClick={() => closePostPanel(false)} className=\"exit-btn\">\n              <img src=\"/assets/icons/plus/exit-dark.svg\" alt=\"Exit panel\"/>\n            </button>\n        </span>\n          <form  className=\"create-form\" onSubmit={(e) => onSubmit(e)}>\n          <span className=\"input-wrapper\">\n              <label htmlFor=\"projectName\">Name your project</label>\n            <textarea \n              name=\"post\" \n              id=\"post\"\n              value={post}\n              placeholder=\"Whats on your mind?\"\n              onChange={(e:any) => setPostContent(e.target.value)}\n              />\n          </span>\n            <input type=\"submit\" className=\"create-submit\" value=\"Post\"/>     \n            <button onClick={() => closePostPanel(false)} className=\"create-cancel\">Cancel</button>\n         </form>\n       </div> \n       \n    );\n}\n\nexport default connector(CreatePost);","import React, { useState, useEffect } from 'react'\nimport { withRouter, useLocation } from \"react-router-dom\";\n// GraphQL\nimport { useMutation } from \"@apollo/client\";\nimport { CREATE_PROJECT } from \"../../../graphql/mutations\";\nimport {  MY_PROJECTS } from \"../../../graphql/queries\";\n// Redux\nimport { connect, ConnectedProps } from \"react-redux\";\n\ninterface ComponentProps {\n  project: {\n    initialised: boolean,\n    projectDetails: {}\n  }  \n  user : {\n    authenticated : boolean,\n    user : {\n      id: number\n    }\n  }\n}\n\nconst mapState = (state: ComponentProps) => ({\n  project: state.project,\n  user : state.user\n})\n\nconst mapDispatch = {\n  initiliseProject: (bool: boolean) => ({type: \"INIT_PROJECT\", payload: bool}),\n  storeProject: (details: object) => ({type: \"STORE_PROJECT\", payload: details}),\n\n}\n\nconst connector = connect(mapState, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux & {\n  history: any\n};\n\n\nconst CreateProject = ({initiliseProject, history, storeProject, user}: Props) => {\n    const [oldLocation , setLocation] = useState(\"\")\n    const [projectName, setProjectName] = useState(\"\");\n    const [isPublic, setPrivateOrPublic] = useState(false)\n    const [formErrors, setErrors ] = useState({ name: \"\"})\n    const [createProject] = useMutation(CREATE_PROJECT);\n\n    var location = useLocation();\n    var pathName = location.pathname\n\n    useEffect(() => {\n      if(oldLocation !== \"\" &&  pathName !== oldLocation) {\n        initiliseProject(false)\n        setLocation(pathName)\n      } else {\n        setLocation(pathName)\n      }\n    }, [pathName, oldLocation, initiliseProject])\n\n    const openInformation = (e:any) => {\n      e.preventDefault()\n      console.log(\"open info\")\n    }\n\n    const checkboxChange = () => {\n      if(isPublic === true) {\n        setPrivateOrPublic(false);\n      }else {\n        setPrivateOrPublic(true);\n      }\n    };\n\n\n    const onChange = (e: any) => {\n    setProjectName(e.target.value)\n    setErrors({...formErrors, name: \"\"})\n    }\n\n    const onSubmit = async (e: any) => {\n      e.preventDefault();\n\n      interface Errors {\n        name: string \n      }\n      \n      let errors: Errors = {\n        name: \"\",\n      };\n\n      if(!projectName) {\n        errors.name = \"A Project Name must be entered\"\n      }\n      if(projectName && projectName.length < 3) {\n        errors.name = \"Project name needs to be above 3 characters\"\n      }\n      if(errors.name !== \"\") {\n        setErrors(errors)\n      } else {\n\n        setErrors({ name: \"\"})\n\n       const name = projectName;\n\n       const response = await createProject({\n         variables: {\n          name,\n          isPublic\n         },\n         update: (cache, { data: { createProject } }) => {\n           if(createProject.error === false) {\n           const cacheMyData: any = cache.readQuery({ query: MY_PROJECTS });\n           if(cacheMyData !== null) {\n           const udatedMyCache = [...cacheMyData.myProjects , createProject];\n           cache.writeQuery({ \n            query: MY_PROJECTS,\n            data : {\n              myProjects : udatedMyCache\n            } \n           });\n          } else {\n            cache.writeQuery({ \n              query: MY_PROJECTS,\n              data : {\n                myPosts : createProject\n              } \n             });\n          }\n        }\n        }\n       }) \n       try {\n        // Empty State\n        if(response.data.createProject.error) {\n          setErrors({ name: response.data.createProject.payload})\n        } else {\n          setProjectName(\"\");\n          setPrivateOrPublic(true);\n          initiliseProject(false)\n          const projectId = response.data.createProject.payload;\n          history.push(`/workspace/${projectId}`);\n        }\n       } catch(err) {\n        //  console.log(err);\n         setErrors({ name: err})\n       }\n      }\n    }\n\n    return (\n        <div className=\"create-container\">\n          <span className=\"panel-top\">\n            <h4>Create Project</h4>\n            <button onClick={() => initiliseProject(false)} className=\"exit-btn\">\n            <img src=\"/assets/icons/plus/exit-dark.svg\" alt=\"Exit panel\"/>\n          </button>\n          </span>\n          <form onSubmit={(e) => onSubmit(e)}className=\"create-form\">\n            <span className=\"input-wrapper\">\n              <label htmlFor=\"projectName\">Name your project</label>\n              <input \n                type=\"text\" \n                id=\"projectName\" \n                name=\"projectName\" \n                placeholder=\"Project name\" \n                onChange={(e) => onChange(e)}\n                style={formErrors.name ? {border: \"2px #f8323b solid\"} : {border: \"none\"}}\n                />\n                {formErrors.name ? <p className=\"input-error\">{formErrors.name}</p> : null}\n            </span>\n            <div className=\"input-wrapper\">\n              <span className=\"p-wrapper\">\n                <p>Do you want to make your project public?</p> \n                <button onClick={(e) => openInformation(e)}><img src=\"/assets/icons/create/info-icon.svg\" alt=\"Information icon\"/></button>\n              </span> \n              <span className=\"checkbox-wrapper\">\n              <label htmlFor=\"publicOrPrivate\">Make Public</label>\n                <input type=\"checkbox\" id=\"publicOrPrivate\" name=\"publicOrPrivate\" value=\"true\"   checked={isPublic} onChange={() => checkboxChange()}/>\n              </span>\n            </div>\n            <p className=\"bottom-p\">Your project will be { isPublic === true ? \"public\" : \"private\"}</p>\n            <input type=\"submit\" value=\"Create Project\" className=\"create-submit\"/> \n            <button onClick={() => initiliseProject(false)} className=\"create-cancel\">Cancel</button>\n          </form>\n      </div>\n    );\n}\n\nexport default withRouter(connector(CreateProject));","import React, { Fragment, useState, useEffect } from 'react'\n// GraphQL\nimport { useQuery } from \"@apollo/client\";\nimport {MY_ACCOUNT, VALIDATE_NOTIFICATION } from \"../../../../graphql/queries\";\n // Redux\nimport { connect, ConnectedProps } from \"react-redux\";\n\nconst mapDispatch = {\n  toggleMatesOptions: (payload: boolean) => ({type: \"MATES_OPTIONS\", payload}),\n  toggleMatesAdd: (payload: boolean) => ({type: \"MATES_ADD\", payload})\n}\n\nconst connector = connect(null, mapDispatch);\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux & { \n      user: {\n        id: number\n        firstName: string\n        lastName: string\n        avatar: string\n        dob: string\n        bio: string\n        instruments: string\n      }\n  }\n  \nconst Information = ({ user,toggleMatesAdd , toggleMatesOptions} : Props) => {\n  const [isMyMate,  setIsMyMate] = useState(false)\n  const { data: meData, loading: meLoading } = useQuery(MY_ACCOUNT);\n  const { data: nData, loading: nLoading } = useQuery(VALIDATE_NOTIFICATION, { \n    variables : {\n      senderId : meData.me.id,\n      recipient: user.id,\n      type: \"request\"\n    }\n  })\n  useEffect(() => {\n    if(!meLoading && meData) {\n      for(let x = 0; x < meData.me.mates.length; x++) {\n        if(user.id === meData.me.mates[x]) {\n          setIsMyMate(true);\n        }\n      }\n    }\n  },[meLoading, meData, user, setIsMyMate])\n\n \n  const addFriend = () => {\n    toggleMatesAdd(true)\n  }\n  const openOptions = () => {\n    toggleMatesOptions(true);\n  }\n\n    return (\n      <Fragment>\n        <div className=\"profile-top-wrapper\">\n        <div className=\"info-wrappers\">\n          <div className=\"left-wrapper\">\n            <div className=\"profile-avatar\">\n            <img src={user.avatar} alt=\"User's Avatar\"/>\n            </div>\n            { isMyMate === true &&\n            <button onClick={() => openOptions()} className=\"user-profile-options\">\n                <span className=\"btn-bg\"></span>\n            <img src=\"/assets/icons/post/options.svg\" alt=\"Profile options\"/>\n          </button>  }\n            { !nLoading && nData.validateNotification === true && isMyMate === false && \n              <button onClick={() => addFriend()} className=\"user-profile-btn req-sent\" disabled>\n            \n              <p>Mate request sent</p></button> \n            }\n            { !nLoading && nData.validateNotification !== true && isMyMate === false && \n              <button onClick={() => addFriend()} className=\"user-profile-btn\">\n              <span className=\"btn-bg\"></span>\n              <p>Add Mate</p></button> \n            }\n          </div>\n          <div className=\"name-dob\">\n              <div className=\"name-email-wrapper\">\n            <span>\n                <p className=\"label\">Full Name</p>\n                <p className=\"profile-info user-name\">{user.firstName + \" \" + user.lastName}</p>\n            </span>\n          </div>\n          <span>\n            <p className=\"label\">Date of birth</p>\n            <p className=\"profile-info\">{user.dob}</p>\n        </span>\n        </div>\n      </div>\n      <div className=\"info-wrappers user-instruments\"> \n        <span>\n              <p className=\"label\">Instruments</p>\n            <p className=\"profile-info instruments\">{user.instruments ? user.instruments: null}</p>\n        </span>\n      </div>\n      </div>\n        <div className=\"info-wrappers\">\n          <span>\n            <p className=\"label\">Bio</p>\n              <p className=\"profile-info\">{user.bio ? user.bio : null}</p>\n          </span>\n        </div> \n    </Fragment>\n    );\n}\n\nexport default connector(Information);","import React from 'react'\n// Redux\nimport { connect, ConnectedProps } from \"react-redux\";\n\nconst mapDispatch = {\n  togglePostOptions: (payload: boolean) => ({type: \"TOGGLE_POST_OPTIONS\", payload}),\n  validatePostDelete: (payload:boolean) => ({type: \"SET_DELETE_COMPONENT\", payload: payload}),\n  toggleRemoveComment: (payload: boolean) => ({type: \"TOGGLE_REMOVE_COMMENT\", payload})\n}\n\nconst connector = connect(null, mapDispatch);\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux & {\n  type: string\n}\n\nconst Options = ({ type, togglePostOptions, validatePostDelete,\n  toggleRemoveComment}:Props) => {\n\n  const setDeletePost = () => {\n    if(type === \"post\") {\n      validatePostDelete(true);\n    }\n    if(type === \"comment\") {\n      toggleRemoveComment(true);\n    }\n  }\n\n  return (\n    <div className=\"options-container\">\n        <div className=\"options\">\n           <button className=\"delete-btn\" onClick={() => setDeletePost()}>Delete</button>\n          <button onClick={() => togglePostOptions(false)}>Cancel</button>\n        </div>\n    </div>\n  )\n}\n\nexport default connector(Options);","import React, { Fragment, useEffect } from 'react'\nimport { Link } from \"react-router-dom\"\n// GraphQL\nimport { useMutation } from \"@apollo/client\";\nimport { GET_COMMENTS } from \"../../../graphql/queries\";\nimport { DELETE_COMMENT } from \"../../../graphql/mutations\";\n// Redux\nimport { connect, ConnectedProps } from \"react-redux\";\n\ninterface ComponentProps {\n\n}\n\nconst mapState = (state: ComponentProps) => ({\n\n})\n\nconst mapDispatch = {\n  toggleRemoveComment: (payload: boolean) => ({type: \"TOGGLE_REMOVE_COMMENT\", payload})\n}\n\nconst connector = connect(mapState, mapDispatch);\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux & {\n  postId: number\n  commentId: number\n};\n\nconst DeleteComment = ({commentId, postId, toggleRemoveComment} : Props) => {\n  const [deleteComment] = useMutation(DELETE_COMMENT);\n  const deleteCommentById = async () => {\n    // Remove Comment and update cache\n    await deleteComment({\n      variables: {\n        commentId: commentId,\n        postId\n      }, \n      update: (cache, { data : {deleteComment} }) => {\n       cache.writeQuery({ \n         query: GET_COMMENTS, \n         variables : {\n             postId\n           },\n         data : {\n           getComments : deleteComment\n         }\n       });\n      }\n    })\n    try {\n      toggleRemoveComment(false);\n    } catch(err){\n      console.log(err);\n    }\n    }\n  return (\n    <div className=\"result-component\">\n      <div className=\"wrapper\">\n            <p>Are you sure you want to delete this comment?</p> \n            <span className=\"btn-wrapper\">\n              <button onClick={() => deleteCommentById()} className=\"delete-btn\">\n                <span className=\"btn-bg\"></span>\n                <p>Delete</p>\n              </button>\n              <button onClick={() =>    toggleRemoveComment(false)} >\n                <p>Cancel</p>\n              </button>\n            </span>\n      </div>\n    </div>\n  )\n}\nexport default connector(DeleteComment)","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n// GraphQL\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { COMMENT_ON_POST, DELETE_COMMENT } from \"../../../graphql/mutations\";\nimport { GET_COMMENTS, MY_ACCOUNT, USER_BY_POST_ID } from \"../../../graphql/queries\";\n// Components \nimport Options from \"../options/Options\";\nimport DeleteComment from \"../functions/DeleteComment\";\n// Redux\nimport { connect, ConnectedProps } from \"react-redux\";\ninterface ComponentProps  {\n  posts : {\n    options: boolean\n    postDelete: boolean\n    commentDelete: boolean\n  }\n}\nconst mapState = (state: ComponentProps) => ({\n  options: state.posts.options,\n  postDelete: state.posts.postDelete,\n  commentDelete: state.posts.commentDelete\n})\n\nconst mapDispatch = {\n  activatePlaybar : (payload: boolean) => ({ type: \"OPEN_PLAYBAR\", payload: payload }),\n  assignTrack : (payload: object) => ({type: \"ASSIGN_TRACK\", payload: payload}),\n  togglePostOptions: (payload: boolean) => ({type: \"TOGGLE_POST_OPTIONS\", payload}),\n}\n\nconst connector = connect(mapState, mapDispatch)\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux & {\n  postId: number\n}\nconst Comment = ({postId, options, commentDelete, togglePostOptions}: Props) => {\n  const [ formComment, setFormComment] = useState(\"\")\n  const [ disableButton, setDisabled] = useState(true)\n  const [selectId, setSelectedId] = useState(0);\n  const [comment] = useMutation(COMMENT_ON_POST);\n  const [deleteComment] = useMutation(DELETE_COMMENT);\n  const { data: userData, loading : userLoading } = useQuery(USER_BY_POST_ID,{\n    variables: {\n      postId: postId\n    }\n  });\n  const { data: meData, loading : meLoading } = useQuery( MY_ACCOUNT);\n  const { data, loading } = useQuery(GET_COMMENTS, {\n    variables: {\n      postId: postId\n    }\n  });\n\n  useEffect(() => {\n    if(formComment === \"\"){\n      setDisabled(true);\n    } else {\n      setDisabled(false);\n    }\n  },[formComment, ])\n  const onChange = (e:React.ChangeEvent<HTMLTextAreaElement>) => {\n    setFormComment(e.target.value);\n  } \n  const onSubmit = (e:React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n     comment({\n      variables: {\n        comment: formComment,\n        postId\n      },\n      update: (cache, { data: { comment } }) => {\n        // Update cache with the response comment data which\n        // should be all comments for the selected post\n         cache.writeQuery({ \n          query: GET_COMMENTS, \n          variables : {\n              postId: postId\n            },\n          data : {\n            getComments : comment\n          }\n        });\n      }\n    }).then((res) => setFormComment(\"\"))\n    .catch(err => console.log(err))\n  }\n  const formatTimestamp = (timestamp: any) => {\n    const splitDateAndTime = timestamp.split(\"T\")\n    const date = splitDateAndTime[0].split(\"-\");\n    const time =  splitDateAndTime[1].split(\":\");\n    const hourAndMin = time[0] + \":\" + time[1];\n    var month;\n    switch(date[1]){\n      case \"01\" : month = \"January\"; break;\n      case \"02\" : month = \"Febraury\"; break;\n      case \"03\" : month = \"March\"; break;\n      case \"04\" : month = \"April\"; break;\n      case \"05\" : month = \"May\"; break;\n      case \"06\" : month = \"June\"; break;\n      case \"07\" : month = \"July\"; break;\n      case \"08\" : month = \"August\"; break;\n      case \"09\" : month = \"September\"; break;\n      case \"10\" : month = \"October\"; break;\n      case \"11\" : month = \"November\"; break;\n      case \"12\" : month = \"December\"; break;  \n    };\n    const year = date[0].split(\"\")\n    const yearAbbr = year[2] + year[3];\n    const fullDate = date[2] +  \" \" + month + \" \" + yearAbbr;\n    const displayTimestamp = fullDate + \" at \" + hourAndMin;\n     return displayTimestamp;\n }\n\n const deleteCommentById = (id: number) => {\n   deleteComment({\n     variables: {\n       commentId: id,\n       postId\n     }, \n     update: (cache, { data : {deleteComment} }) => {\n      cache.writeQuery({ \n        query: GET_COMMENTS, \n        variables : {\n            postId: postId\n          },\n        data : {\n          getComments : deleteComment\n        }\n      });\n     }\n   })\n }\n\n const toggleOptionsMenu = (id: number) => {\n  if(options === true) {\n    setSelectedId(0);\n    togglePostOptions(false)\n  } else {\n    setSelectedId(id);\n    togglePostOptions(true)\n  }\n}\n  return (\n    <div  className=\"comments-container\">\n      <form className=\"comment-form\" onSubmit={(e) => onSubmit(e)}>\n        <span className=\"input-wrapper\">\n          <label htmlFor=\"comment\">Why not make a comment?</label>\n          <span className=\"input-span\">\n          <textarea value={formComment} placeholder=\"Write your comment here ...\" onChange={(e) => onChange(e)} style={formComment === \"\" ? { minHeight: \"40px\" } : { minHeight: \"150px\" } } />\n          <input type=\"submit\" value=\"Send\" disabled={disableButton === true}/>\n          </span>\n        </span>  \n      </form>  \n      <div>\n        <ul>\n        {!loading && data && data.getComments && data.getComments.map((comment: any) => \n           <li key={comment.id} className=\"comment\">\n             <div className=\"comment-top\">\n              <div className=\"avatar\">\n                <img src={comment.avatar} alt=\"Avatar\"/>\n              </div>\n              <div className=\"name-date-wrap\">\n              { !meLoading && meData && meData.me && meData.me.id === comment.userId ? \n                <Link to={`/profile/${comment.userId}`} className=\"name\">You</Link> \n                :   <Link to={`/profile/${comment.userId}`} className=\"name\">{comment.userName}</Link> \n                }\n                <p className=\"date\">{formatTimestamp(comment.created)}</p>\n              </div>\n        \n              { !meLoading && !userLoading && userData && userData.userByPostId &&  userData.userByPostId.id === meData.me.id ? \n              // <button className=\"delete-comment\" onClick={() => deleteCommentById(comment.id)}>\n              //     <img src=\"/assets/icons/workspace/delete.svg\" alt=\"Delete post\"/>\n              // </button> \n              <span className=\"post-btn-wrapper\">\n                <button className=\"post-buttons\" onClick={() => toggleOptionsMenu(comment.id)}>\n                  <img src=\"/assets/icons/post/options.svg\" alt=\"Project options\"/>\n                </button>\n                </span>\n              : \n              !meLoading && meData && meData.me &&  meData.me.id === comment.userId && \n              // <button className=\"delete-comment\" onClick={() => deleteCommentById(comment.id)}>\n              //     <img src=\"/assets/icons/workspace/delete.svg\" alt=\"Delete post\"/>\n              // </button>\n              <span className=\"post-btn-wrapper\">\n              <button className=\"post-buttons\" onClick={() => toggleOptionsMenu(comment.id)}>\n                <img src=\"/assets/icons/post/options.svg\" alt=\"Project options\"/>\n              </button>\n              </span>}\n             </div>\n            <p className=\"comment-context\">{comment.comment}</p>\n            { selectId === comment.id && options === true && \n                      <Options type=\"comment\" />}\n            { commentDelete === true && selectId === comment.id && <DeleteComment postId={postId} commentId={comment.id}/>}\n           </li>\n        ) }\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default connector(Comment);","import React, { useState, useEffect } from 'react'\n\ninterface ComponentProps {\n  timestamp : any\n}\n\nfunction FormatTimestamp({ timestamp }: ComponentProps ) {\n    const [formattedTime , setFormattedTime] = useState(\"\")\n\n    useEffect(() => {\n      formatTimestamp();\n    }, [])\n\n    const formatTimestamp = () => {\n      const splitDateAndTime = timestamp.split(\"T\")\n      const date = splitDateAndTime[0].split(\"-\");\n      const time =  splitDateAndTime[1].split(\":\");\n      const hourAndMin = time[0] + \":\" + time[1];\n      var month;\n      switch(date[1]){\n        case \"01\" : month = \"January\"; break;\n        case \"02\" : month = \"Febraury\"; break;\n        case \"03\" : month = \"March\"; break;\n        case \"04\" : month = \"April\"; break;\n        case \"05\" : month = \"May\"; break;\n        case \"06\" : month = \"June\"; break;\n        case \"07\" : month = \"July\"; break;\n        case \"08\" : month = \"August\"; break;\n        case \"09\" : month = \"September\"; break;\n        case \"10\" : month = \"October\"; break;\n        case \"11\" : month = \"November\"; break;\n        case \"12\" : month = \"December\"; break;  \n      };\n      const year = date[0].split(\"\")\n      const yearAbbr = year[2] + year[3];\n      const fullDate = date[2] +  \" \" + month + \" \" + yearAbbr;\n      const displayTimestamp = fullDate + \" at \" + hourAndMin;\n      setFormattedTime(displayTimestamp);\n    }\n\n     return (\n      <p className=\"post-date\">{formattedTime}</p>\n     )\n}\n\nexport default FormatTimestamp;","import React from 'react'\n// GraphQL\nimport {useMutation } from \"@apollo/client\";\nimport {FEED_POSTS} from \"../../../graphql/queries\";\nimport { LIKE_POST } from \"../../../graphql/mutations\";\ninterface ComponentProps {\n  id: number\n}\nconst LikePost = ({ id }:ComponentProps) => {\n  const [likePost] = useMutation(LIKE_POST);\n  const likePostById = () => {\n    likePost({ \n      variables : { postId: id },\n      update: (cache, { data: { likePost } }) => {\n        // Read the query cache\n        const cacheLikeData : any = cache.readQuery({query : FEED_POSTS })  \n        var index: any;\n        if(cacheLikeData !== null ) {\n        // Assign varaible with the cache so we can modify\n        var myFeed = [...cacheLikeData.myFeed];\n        // Loop through the poss array\n        for(var x = 0; x < myFeed.length; x++) {\n          // Find the post that links to the like we just created\n          if(myFeed[x].postId === likePost.postId) {\n            // Get the index of the post \n            index = myFeed.indexOf(myFeed[x]);\n          }\n        }\n        // Remove the item from the index we found\n        // and replace with the new post data we get from the mutation response \n        myFeed.splice(index, 1,likePost);\n        // Write query to update cache passing the myFeed variable in\n        cache.writeQuery({\n          query : FEED_POSTS,\n           data: {\n            myFeed : myFeed\n          }\n        })\n      }\n      }\n    })\n    .catch(err => console.log(err))\n  }\n\n  return (\n    <button className=\"post-buttons like-btn\" onClick={() => likePostById()}> \n      <span className=\"like-bg\"></span>\n      <img src=\"/assets/icons/post/thumb.svg\" alt=\"Like post\"/> \n    </button>\n  )\n}\n\nexport default LikePost;","import React, { useState } from 'react'\nimport { Link } from \"react-router-dom\"\n// Components \nimport Comment from \"../comments/Comment\";\nimport FormatTimestamp from \"../../formatTime/FormatTimestamp\"\nimport LikePost from \"../like/LikePost\";\n// Redux\nimport { connect, ConnectedProps } from \"react-redux\";\ninterface ComponentProps  {\n  application : {\n    options: string\n  }\n}\nconst mapState = (state: ComponentProps) => ({\n  options: state.application.options,\n})\n\nconst mapDispatch = {\n  toggleOptions: (postId: string) => ({type: \"PROJECT_OPTIONS\", payload: postId}),\n}\n\nconst connector = connect(mapState, mapDispatch)\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux & {\n  post : { \n    post: {\n      id: number\n      creatorId : string\n      avatar: string\n      created: number\n      content: string\n      creatorName: string\n    }\n    project: {\n      id: string\n      mainTrack: string\n    }\n    comments: [{\n      id: number\n      postId:  number\n      userId:  number\n      userName: string\n      comment: string\n      created : number\n      avatar : string\n    }]\n    likes : [{\n      id : number\n      postId: number\n      userId: string\n    }]\n  }\n}\n\n\nconst UsersPost = ({ post, options, toggleOptions }: Props ) => {\n  const [ postIdForComment, setIdForComments ] = useState(0)\n\n  const toggleOptionsMenu = (id: number) => {\n    if(options === \"\") {\n      toggleOptions(\"dssd\")\n    } else {\n      toggleOptions(\"\")\n    }\n  }\n  const openComments = (postId: number) => {\n    if(postIdForComment === postId) {\n     setIdForComments(0)\n    } else {\n     setIdForComments(postId)\n    }\n  }\n\n  return (\n    <div className=\"post\">\n      <div className=\"post-top-wrapper\">\n        <div className=\"avatar\">\n          <img src={post.post.avatar} alt=\"User's Avatar\"/>\n        </div>\n        <span className=\"post-name-wrapper\">\n          <Link to={`/profile/${post.post.creatorId}`} className=\"post-name post-user\">{post.post.creatorName}</Link>\n          <FormatTimestamp timestamp={post.post.created} />\n        </span> \n        <span className=\"post-btn-wrapper\"> \n          <LikePost id={post.post.id} />\n        </span>\n      </div>\n    <div className=\"post-content\"><p>{post.post.content}</p></div>\n    <div className=\"post-bottom-wrapper\">\n      <button onClick={() => openComments(post.post.id)} className=\"comment-button\">Comments</button>\n        <p className=\"comments-length\">{post.comments.length}</p>\n      <div className=\"likes\"> \n        <img src=\"/assets/icons/post/thumb.svg\" alt=\"Likes\"/>\n        <p>{post.likes.length}</p>\n      </div>\n    </div>\n    {postIdForComment === post.post.id ? <Comment postId={post.post.id} /> : null}\n  </div> \n  )\n}\n\nexport default connector(UsersPost);","import React, { Fragment, useState} from 'react'\nimport { Link } from \"react-router-dom\";\n// GraphQL\nimport { useQuery } from \"@apollo/client\";\nimport { GET_CONTRIBUTORS } from \"../../../graphql/queries\";\ninterface ComponentProps {\n  projectId: string\n}\n\nconst ContributorAvatar = ({projectId}:ComponentProps) => {\n  const [userName, setUserName] = useState(\"\");\n  const { data, loading } = useQuery(GET_CONTRIBUTORS, { variables: { projectId }})\n  return (\n    <Fragment>\n    { !loading && data && data.contributors.length !== 0 ? data.contributors.map((user: any) => \n     <Link key={user.id} to={`/profile/${user.id}`} className=\"contributor-avatar-link\" \n     onMouseOver={() => setUserName(user.firstName)}\n     onMouseOut={() => setUserName(\"\")}>\n      <img src={user.avatar} alt=\"User's Avatar\"/>\n      { userName === user.firstName && \n       <div className=\"avatar-hover\">\n         <p>{user.firstName}</p>\n      </div>}\n    </Link>\n   ): null }\n   </Fragment>\n  )\n}\n\nexport default ContributorAvatar;","import React, { useState } from 'react'\nimport { Link } from \"react-router-dom\"\n// Components \nimport Comment from \"../comments/Comment\";\nimport FormatTimestamp from \"../../formatTime/FormatTimestamp\"\nimport ContributorAvatar from \"../../project/contributors/ContributorAvatar\";\nimport LikePost from \"../like/LikePost\";\n// Redux\nimport { connect, ConnectedProps } from \"react-redux\";\ninterface ComponentProps  {\n  application : {\n    options: string\n  }\n}\nconst mapState = (state: ComponentProps) => ({\n  options: state.application.options,\n})\n\nconst mapDispatch = {\n  activatePlaybar : (payload: boolean) => ({ type: \"OPEN_PLAYBAR\", payload: payload }),\n  assignTrack : (payload: object) => ({type: \"ASSIGN_TRACK\", payload: payload}),\n  toggleOptions: (postId: string) => ({type: \"PROJECT_OPTIONS\", payload: postId}),\n}\n\nconst connector = connect(mapState, mapDispatch)\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux & {\n  post : { \n    post: {\n      id: number\n      creatorId : string\n      avatar: string\n      created: number\n      content: string\n      creatorName: string\n    }\n    project: {\n      id: string\n      mainTrack: string\n    }\n    comments: [{\n      id: number\n      postId:  number\n      userId:  number\n      userName: string\n      comment: string\n      created : number\n      avatar : string\n    }]\n    likes : [{\n      id : number\n      postId: number\n      userId: string\n    }]\n  }\n}\n\n\nconst UserSharedProject = ({ post, options, activatePlaybar, assignTrack, toggleOptions }: Props ) => {\n  const [ postIdForComment, setIdForComments ] = useState(0)\n  const openPlaybarAndAssignTrackId = (trackId: string, projectId: string) => {\n    activatePlaybar(true);\n    const dataObject = {\n      id: trackId,\n      projectId,\n      trackName: \"\"\n    }\n    assignTrack(dataObject)\n  }\n  const toggleOptionsMenu = (id: number) => {\n    if(options === \"\") {\n      toggleOptions(\"dssd\")\n    } else {\n      toggleOptions(\"\")\n    }\n  }\n  const openComments = (postId: number) => {\n    if(postIdForComment === postId) {\n     setIdForComments(0)\n    } else {\n     setIdForComments(postId)\n    }\n  }\n\n  return (\n      <div className=\"post\">\n        <div className=\"post-top-wrapper\">\n          <div className=\"avatar\">\n            <img src={post.post.avatar} alt=\"User's Avatar\"/>\n          </div>\n          <span className=\"post-name-wrapper\">\n            <Link to={`/profile/${post.post.creatorId}`} className=\"post-name post-user\">{post.post.creatorName} <span className=\"shared-project-span\">Shared project</span></Link>\n            <FormatTimestamp timestamp={post.post.created} />\n          </span> \n          <span className=\"post-btn-wrapper\">\n              <LikePost id={post.post.id}/>\n          </span>\n        </div>\n        <div className=\"post-project-wrapper\">\n          <button onClick={() => openPlaybarAndAssignTrackId(post.project.mainTrack, post.project.id)}>\n            <img src=\"/assets/icons/post/play.svg\" alt=\"Play button\"/>\n          </button>\n          <Link to={`/workspace/${post.project.id}`} className=\"project-name\">{post.post.content}</Link>\n        </div>\n        <div className=\"contributors\">\n          <span className=\"flex-wrapper\">\n            <p>Contributors</p>\n            <span className=\"contributors-avatars\">\n              <ContributorAvatar projectId={post.project.id} />\n            </span>\n          </span>   \n        </div>\n        <div className=\"post-bottom-wrapper\">\n          <button onClick={() => openComments(post.post.id)} className=\"comment-button\">Comments</button>\n          <p className=\"comments-length\">{post.comments.length}</p>\n          <div className=\"likes\"> \n            <img src=\"/assets/icons/post/thumb.svg\" alt=\"Likes\"/>\n              <p>{post.likes.length}</p>\n          </div>\n        </div>\n        {postIdForComment === post.post.id ? <Comment postId={post.post.id} /> : null}\n      </div> \n  )\n}\n\nexport default connector(UserSharedProject);","import React, { Fragment } from 'react'\nimport { withRouter, useLocation } from \"react-router-dom\";\n// GraphQL\nimport { useQuery } from \"@apollo/client\";\nimport { USERS_POSTS, USER_BY_ID } from \"../../../../graphql/queries\";\n// Components\nimport UsersPost from \"../../../post/posts/UsersPost\";\nimport UserSharedProject from \"../../../post/sharedProject/UserSharedProject\";\n\nconst Posts: React.FC = () => {\n  const location: any = useLocation();\n  const params = location.pathname.split(\"/\")\n  const userId = parseInt(params[2]);\n  const { data: userData, loading: userLoading } = useQuery(USER_BY_ID, {\n    variables: {\n      userId: userId\n    }\n  });\n  const { data, loading } = useQuery(USERS_POSTS, {\n    variables: {\n      userId: userId\n    }\n  });\n\n  if(loading) {\n    return <div>Loading...</div>\n  }\n\n    return (\n     <Fragment>\n      {!loading && data && data.usersPosts.length !== 0  ?\n      data.usersPosts.map((post: any) => \n        <li key={post.post.id}>\n           { post.project !== null ?\n              <UserSharedProject post={post} />\n              :\n              <UsersPost post={post} />\n           }  \n          </li> ) : \n          <div className=\"no-posts\"><p> <em>{!userLoading && userData && userData.user && userData.user.firstName}</em> has no posts</p></div> }\n    \n    </Fragment>\n    );\n}\n\nexport default withRouter(Posts);","import React from 'react'\nimport { useMutation } from \"@apollo/client\"\nimport { REMOVE_CONTRIBUTOR } from \"../../../graphql/mutations\"\nimport { GET_CONTRIBUTORS, SEARCH_MATES_FOR_CONTRIBUTORS } from \"../../../graphql/queries\"\n// Redux\nimport { connect, ConnectedProps } from \"react-redux\";\n\ninterface ComponentProps {  \n  project : {\n    contributor : {\n      projectId: string\n      userId: number\n    }\n  }\n}\n\nconst mapState = (state: ComponentProps) => ({\n  contributor: state.project.contributor\n})\n\nconst mapDispatch = {\n  removeContributors : (payload: object) => ({type: \"REMOVE_CONTRIBUTOR\", payload: payload})\n}\n\nconst connector = connect(mapState, mapDispatch);\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux\n\nconst RemoveContributor = ({removeContributors, contributor}: Props) => {\n  const [removeContributor] = useMutation(REMOVE_CONTRIBUTOR);\n\n  const removeFunc = async () => {\n    await removeContributor({\n      variables : {\n        projectId: contributor.projectId,\n        userId: contributor.userId \n      },\n      update: (cache, { data : { removeContributor }}) => {\n        // Read the cache for SEARCH_MATES query\n        const conCache: any = cache.readQuery({query: GET_CONTRIBUTORS,\n          variables : {\n            projectId: contributor.projectId,\n          }})\n          // Assign variable with the cached array so we can modify\n          let modConCache = [...conCache.contributors];\n          // Loop through the cache and find the removed user\n          for(let a = 0; a < modConCache.length; a++) {\n            if(modConCache[a].id === removeContributor.id) {\n              // Find index of the removed user and then splice from array\n              let index = modConCache.indexOf(modConCache[a]);\n              modConCache.splice(index, 1)\n            }\n          }\n          // Update cache\n          cache.writeQuery({\n            query : GET_CONTRIBUTORS,\n            variables : {\n              projectId: contributor.projectId,\n            },\n            data: {\n              contributors : modConCache\n            }\n          })\n          // Read the cache for SEARCH_MATES query\n          const searchCache: any = cache.readQuery({query: SEARCH_MATES_FOR_CONTRIBUTORS,\n            variables : {\n              projectId: contributor.projectId,\n              name: \"\"\n            }})\n\n          // Assign the cache to new array and add the removed user also\n          if(searchCache !== null) {\n            let modifiedCache = [...searchCache.searchMatesForContributors, removeContributor ]\n            // Update cache with our modified array\n            cache.writeQuery({\n              query: SEARCH_MATES_FOR_CONTRIBUTORS,\n              variables : {\n                projectId: contributor.projectId,\n                name: \"\"\n              },\n              data: {\n                searchMatesForContributors: modifiedCache\n                }\n            })\n          }\n      }\n    })\n    try{\n      removeContributors({\n        remove: false,\n        projectId : \"\",\n        userId: -1\n      })\n    }catch(err) {\n      console.log(err);\n    }\n  }\n\n  const closeValidation = () => {\n    // Redux function\n    removeContributors({\n          remove: false,\n          projectId : \"\",\n          userId: -1\n        })\n  }\n\n  return (\n      <span className=\"btn-wrapper\">\n        <button onClick={() => removeFunc()}className=\"remove-btn\">\n          <span className=\"btn-bg\"></span>\n          <p>Remove</p>\n        </button>\n        <button onClick={() => closeValidation()}className=\"cancel-btn\">\n          <span className=\"btn-bg\"></span>\n          <p>Cancel</p>\n        </button>\n      </span>\n  )\n}\n\n\nexport default connector(RemoveContributor);","import React, { useEffect, useState, Fragment } from 'react'\nimport { Link } from \"react-router-dom\"\n// GrahphQL\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { SEARCH_MATES_FOR_CONTRIBUTORS , GET_CONTRIBUTORS, CURRENT_PROJECT, MY_ACCOUNT} from \"../../../graphql/queries\"\nimport { ADD_CONTRIBUTOR , SEND_NOTIFICATION} from \"../../../graphql/mutations\";\n// Redux\nimport { connect, ConnectedProps } from \"react-redux\";\n// Components\nimport RemoveContributor from \"./RemoveContributor\";\n\ninterface ComponentProps {\n  user : {\n    user: {\n      id: number\n    }\n  }\n  project : {\n    contributor:  {\n      remove: boolean\n      userId: number\n    }\n    selectedProject: string\n  }\n}\n\nconst mapState = (state: ComponentProps) => ({\n  id: state.user.user.id,\n  contributor: state.project.contributor,\n  selectedProject: state.project.selectedProject\n})\n\nconst mapDispatch = {\n  toggleContributors : (payload: boolean) => ({type: \"TOGGLE__CONTRIBUTORS\", payload: payload}),\n  removeContributors : (payload: object) => ({type: \"REMOVE_CONTRIBUTOR\", payload: payload})\n}\n\nconst connector = connect(mapState, mapDispatch);\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux \n\n\nconst ContributorPanel = ({selectedProject, contributor, id, removeContributors, toggleContributors} :Props) => {\n  const [searchName, setSearchData] = useState({ name: \"\"});\n  const { data: meData, loading: meLoading } = useQuery(MY_ACCOUNT)\n  const { data: userData, loading: userLoading } = useQuery(GET_CONTRIBUTORS, {\n    variables : {\n      projectId: selectedProject\n    }\n  })\n  const { data: projectData, loading: projectLoading } = useQuery(CURRENT_PROJECT, {\n    variables : {\n      projectId: selectedProject\n    }\n  })\n  const { data: searchData, loading: searchLoading} = useQuery(SEARCH_MATES_FOR_CONTRIBUTORS, {\n    variables : {\n      projectId: selectedProject,\n      name: searchName.name\n    }\n  })\n  const [addContributor] = useMutation(ADD_CONTRIBUTOR)\n  const [sendNotfication] = useMutation(SEND_NOTIFICATION);\n\n  useEffect(() => {\n    return () => {\n      toggleContributors(false)\n    } \n  },[toggleContributors])\n\n\n  const addContributorFunc = async (mateId: number) => {\n        // Adding contributor with useMutatiion\n        // Updating cache so we can see the change in realtime in our ui\n       await  addContributor({\n          variables : {\n            projectId : selectedProject,\n            userId: mateId\n        },\n        update: (cache , { data: { addContributor } }) => {\n            // Updating our GET_CONTRIBUTORS cache with the response data which is the current project\n            cache.writeQuery({\n              query: GET_CONTRIBUTORS,\n              variables : {\n                projectId: selectedProject\n              },\n              data: {\n                contributors: addContributor\n              }\n            })\n            // Read the cache for SEARCH_MATES query\n            const searchCache: any = cache.readQuery({query: SEARCH_MATES_FOR_CONTRIBUTORS,\n              variables : {\n                projectId: selectedProject,\n                name: searchName.name\n              }})\n            // Assign and iterate the cache to a new variable so we can mofidy\n            let modifiedCache = [...searchCache.searchMatesForContributors]\n            let index: number;\n            // Loop through the searchMatesForContributors cache and the addContributor response\n            for(let x = 0; x < modifiedCache.length; x++) {\n              for(let y = 0 ; y < addContributor.length; y ++) {\n                // Find the contributors and splice them from modified array\n                if(addContributor[y].id === modifiedCache[x].id) {\n                  index = modifiedCache.indexOf(modifiedCache[x]);\n                  modifiedCache.splice(index!, 1);\n                }\n              }\n            }\n            // Update cache with our modified array\n            cache.writeQuery({\n              query: SEARCH_MATES_FOR_CONTRIBUTORS,\n              variables : {\n                projectId: selectedProject,\n                name: searchName.name\n              },\n              data: {\n                 searchMatesForContributors: modifiedCache\n                }\n            })\n        }\n      })\n    try {\n  await sendNotfication({\n        variables : {\n            recipient: mateId,\n            type: \"contributor\",\n            message: `added you as a contributor to ${projectData.currentProject.name} /${projectData.currentProject.id}`\n        }\n      })\n\n    } catch (err) {\n        console.log(err)\n    }\n    } \n\n    const setRemoveContributor = (id: number) => {\n      let dataToSend;\n      if(contributor.remove === true && contributor.userId === id) {\n         dataToSend = {\n          remove: false,\n          projectId : selectedProject,\n          userId: id\n        }\n      } else {\n         dataToSend = {\n          remove: true,\n          projectId : selectedProject,\n          userId: id\n        }\n      }\n  \n      // Send dataToSend with redux\n      removeContributors(dataToSend);\n    }\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      setSearchData({...searchName, name: e.target.value})\n  }\n\n  const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n  } \n\n  const closePanel = () => {\n    toggleContributors(false);\n  }\n\n  return (\n    <div className=\"contributor-container\">\n    <div className=\"contributor-panel\">\n      <span className=\"panel-heading\">\n        <p>Contributors</p>\n      </span>\n      <ul>\n        { !userLoading && userData && userData.contributors && userData.contributors.map((user: any) => \n        <li key={user.id}>\n          <div className=\"remove-bg\" style={contributor.remove === true && contributor.userId === user.id ? {minWidth: \"100%\", maxWidth:\"100%\"} : { minWidth: \"0%\", maxWidth:\"0%\"} }>\n            <RemoveContributor />\n          </div>\n          <img src={user.avatar} alt=\"Profile Avatar\"/>\n          <Link className=\"user-link\" to={`/profile/${user.id}`}>\n            <p>{user.firstName}</p>\n            <p className=\"hover-show\">See profile</p>\n          </Link>\n          {!meLoading && !projectLoading && meData.me.id === projectData.currentProject.creatorId && \n            <Fragment>\n              { meData.me.id !== user.id && \n              <button onClick={() => setRemoveContributor(user.id)} className=\"remove-contributor\">\n                <p>Remove</p> \n              </button>}\n            </Fragment>\n        }\n        </li>) }\n      </ul>\n      <form onSubmit={(e) => onSubmit(e)}>\n          <label htmlFor=\"mateSearch\">Search mates</label>\n          <span className=\"input-wrapper\">\n            <input \n              type=\"text\"\n              id=\"mateSearch\" \n              name=\"mateSearch\"\n              placeholder=\"Enter mate's name\"\n              onChange={(e) => onChange(e)}/>\n              <button className=\"search-btn\">\n                <img src=\"/assets/icons/menu/search-blue.svg\" alt=\"Submit\"/>\n              </button>\n          </span>\n      </form>\n      <ul className=\"mates-on-contributors\">\n        { !searchLoading && searchData && searchData.searchMatesForContributors.length !== 0 && searchData.searchMatesForContributors.map((user: any) => \n          <li key={user.id}>\n              <img src={user.avatar} alt=\"Profile Avatar\"/>\n              <Link className=\"user-link\" to={`/profile/${user.id}`}>\n              <p>{user.firstName}</p>\n              <p className=\"hover-show\">See profile</p>\n              </Link>\n              <button onClick={() => addContributorFunc(user.id)} className=\"add-btn\">\n                <p>Add</p> \n              </button>\n            </li> \n        )}\n      </ul>\n      <button className=\"exit-btn\" onClick={() => closePanel()}>\n        <p>Exit</p>\n      </button>\n    </div>\n  </div>\n  )\n}\nexport default connector(ContributorPanel);","import React from 'react'\nimport { Link } from \"react-router-dom\";\n// Redux\nimport { connect, ConnectedProps } from \"react-redux\";\n// Components\nimport ContributorPanel from \"../contributors/ContributorPanel\"\nimport ContributorAvatar from \"../contributors/ContributorAvatar\";\nimport FormatTimestamp from \"../../formatTime/FormatTimestamp\";\ninterface ComponentProps {\n  application : { \n    contributorsPanel: boolean\n  }\n}\n\nconst mapState = (state: ComponentProps) => ({\n  contributorsPanel: state.application.contributorsPanel,\n})\n\nconst mapDispatch = {\n  activatePlaybar : (payload: boolean) => ({ type: \"OPEN_PLAYBAR\", payload: payload }),\n  assignTrack : (payload: object) => ({type: \"ASSIGN_TRACK\", payload: payload})\n}\n\nconst connector = connect(mapState, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux &  {\n  userId: number\n  project: {\n    id: string\n    name: string\n    creatorId: number\n    creatorName: string\n    mainTrack: string\n    created: string\n    postId: number\n    isPublic: boolean\n  }\n};\n\nconst UserProject = ({ userId, project, contributorsPanel, activatePlaybar, assignTrack }:Props) => {\n  const openPlaybarAndAssignTrackId = (trackId: string, projectId: string, projectName: string) => {\n    activatePlaybar(true);\n    const dataObject = {\n      id: trackId,\n      projectId,\n      trackName: \"\"\n    }\n    assignTrack(dataObject)\n  }\n\n    return (\n        <li className=\"project\" key={project.id}>\n           <span className=\"top\">\n              <span className=\"project-details\">\n                <span>\n                <Link to={`/workspace/${project.id}`} className=\"project-name\">{project.name}</Link>\n                { userId !== project.creatorId &&\n                   <Link to={`/profile/${project.creatorId}`} className=\"project-creator\"> by <em>{project.creatorName}</em></Link>\n                }\n                </span>\n                <FormatTimestamp timestamp={project.created} />\n              </span>\n              <span className=\"responsive-btns\">\n                <button className=\"post-buttons responsive-play\"  onClick={() => openPlaybarAndAssignTrackId(project.mainTrack, project.id, project.name)}>\n                  <img src=\"/assets/icons/post/play-blue.svg\" alt=\"Play\"/>\n                </button>\n              </span>\n            </span>\n            <div className=\"bottom\">\n              <span className=\"contributors\">\n                <ContributorAvatar projectId={project.id} />\n              </span>  \n            </div>\n            {contributorsPanel === true && <ContributorPanel />}\n        </li> \n    );\n} \n\nexport default connector(UserProject);\n\n","import React, { Fragment } from 'react'\nimport { useQuery } from \"@apollo/client\";\nimport { USER_BY_ID } from \"../../../graphql/queries\";\n// Redux\nimport { connect, ConnectedProps } from \"react-redux\";\nconst mapDispatch = {\n  intialiseProject: (bool: boolean ) => ({type: \"INIT_PROJECT\", payload: bool }),\n}\n\nconst connector = connect(null, mapDispatch);\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux & {\n  type: string\n  userId: number\n};\n\n const EmptyState = ({type , userId, intialiseProject}: Props) => {\n   const { data, loading } = useQuery(USER_BY_ID, {\n     variables: {\n       userId\n     }\n   })\n  return (\n    <div className=\"no-posts\">\n      { type === \"user\" ?  \n          <p> <em>{!loading && data && data.user && data.user.firstName}</em> has no projects</p>  :\n        <Fragment>\n          <p>You have no projects yet.</p>\n          <button onClick={() => intialiseProject(true)}>  Why not create a new project? \n          </button>\n        </Fragment>\n      }\n\n </div>\n  )\n}\nexport default connector(EmptyState);","import React , { Fragment } from 'react'\nimport { useLocation} from \"react-router-dom\";\n// GraphQL\nimport { useQuery } from \"@apollo/client\";\nimport {USERS_PROJECTS} from \"../../../../graphql/queries\";\n// Components\nimport UsersProject from \"../../../project/project/UsersProject\";\nimport EmptyState from \"../../../project/components/EmptyState\";\n \nconst UserProjects: React.FC = () => {\n  const location: any = useLocation();\n  const params = location.pathname.split(\"/\")\n  const userId = parseInt(params[2]);\n  const { data, loading } = useQuery(USERS_PROJECTS, {\n    variables : {\n      userId\n    }\n  });\n\n    return (\n      <Fragment>\n        {!loading && data && data.usersProjects.length !== 0  ?\n            data.usersProjects.map((project: any) => \n            <UsersProject userId={userId} project={project}/>) :\n            <EmptyState type=\"user\" userId={userId} />\n        }\n      </Fragment>\n    );\n}\n\nexport default UserProjects;","import React, { useEffect, useState} from 'react'\nimport { Link } from \"react-router-dom\";\n// GraphQL\nimport { useQuery } from \"@apollo/client\";\nimport { MY_ACCOUNT, GET_MY_MATES, VALIDATE_NOTIFICATION } from \"../../../graphql/queries\";\n// Redux\nimport { connect, ConnectedProps } from \"react-redux\";\n\ninterface ComponentProps {\n  mates: {\n    id: number\n  }\n}\n\nconst mapState = (state: ComponentProps) => ({\n  userId: state.mates.id\n})\n\nconst mapDispatch = {\n  toggleMatesOptions: (payload: boolean) => ({type: \"MATES_OPTIONS\", payload}),\n  toggleMatesRemove: (payload: boolean) => ({type: \"MATES_REMOVE\", payload}),\n  toggleMatesAdd: (payload: boolean) => ({type: \"MATES_ADD\", payload}),\n  selectedUserId: (userId: number ) => ({type: \"MATES_SELECTED_ID\", payload: userId})\n}\n\nconst connector = connect(mapState, mapDispatch);\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux & {\n  type: string\n}\n\nconst Options = ({ userId, type, toggleMatesOptions, toggleMatesRemove, toggleMatesAdd, selectedUserId}:Props) => {\n  const [isOurMate, setIsOurMate] = useState(false);\n  const [myId, setMyId] = useState(0);\n  const { data: meData, loading: meLoading } = useQuery(MY_ACCOUNT);\n\n  const { data: mateData, loading: mateLoading } = useQuery(GET_MY_MATES, {\n    variables: {\n      userId: meData.me.id\n    }\n  });\n  \n  const { data: nData, loading: nLoading } = useQuery(VALIDATE_NOTIFICATION, { \n    variables : {\n      senderId : meData.me.id,\n      recipient: userId,\n      type: \"request\"\n    }\n  })\n\n  useEffect(() => {\n    if(!meLoading && !mateLoading && mateData) {\n      setMyId(meData.me.id);\n      for(let x = 0; x < mateData.getMates.length; x++) {\n        if(userId === mateData.getMates[x].id) {\n          setIsOurMate(true)\n        }\n      }\n    }\n  }, [meLoading, mateLoading , meData, mateData, userId, setIsOurMate])\n  return (\n    <div className=\"options-container\">\n        <div className=\"options\">\n          {!nLoading && nData.validateNotification !== true &&  isOurMate === false && myId !== userId && \n            <button className=\"add-btn\" onClick={() => toggleMatesAdd(true)}>Add Friend</button>\n          }\n          { myId !== userId  && !nLoading && nData.validateNotification === true &&\n           <button className=\"add-btn\" disabled style={{cursor: \"default\"}}>Mate request sent</button>\n           }  \n          {isOurMate === true && myId !== userId &&  \n            <button className=\"delete-btn\" onClick={() => toggleMatesRemove(true)}>Remove Friend</button>\n          }\n          { type !== \"profile\" && \n            <Link className=\"share-btn\" to={`/profile/${userId}`}>See Profile</Link>  \n          }\n            <button onClick={() => toggleMatesOptions(false)}>Cancel</button>\n        </div>\n    </div>\n  )\n}\n\nexport default connector(Options);","import React, { Fragment } from 'react'\n// GrahphQL\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport {MY_ACCOUNT, GET_MY_MATES, USER_BY_ID, VALIDATE_NOTIFICATION } from \"../../../graphql/queries\"\nimport { REMOVE_MATE, SEND_NOTIFICATION } from \"../../../graphql/mutations\";\n// Redux\nimport { connect, ConnectedProps } from \"react-redux\";\n\ninterface ComponentProps {\n  mates: {\n    id: number\n  }\n}\n\nconst mapState = (state: ComponentProps) => ({\n  userId: state.mates.id\n})\n\n\ntype Result  = {\n  show: boolean\n  success: boolean\n  type: string\n}\nconst mapDispatch = {\n  toggleMatesOptions: (payload: boolean) => ({type: \"MATES_OPTIONS\", payload}),\n  toggleMatesRemove: (payload: boolean) => ({type: \"MATES_REMOVE\", payload}),\n  toggleMatesAdd: (payload: boolean) => ({type: \"MATES_ADD\", payload}),\n  toggleResult: (payload: Result ) => ({type: \"RESULT_TOGGLE\", payload}),\n  selectedUserId: (userId: number ) => ({type: \"MATES_SELECTED_ID\", payload: userId})\n}\n\nconst connector = connect(mapState, mapDispatch);\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux & {\n  type: string\n}\n\nconst Validation = ({userId, type, toggleMatesRemove, toggleMatesOptions, toggleMatesAdd, toggleResult, selectedUserId}: Props) => {\n  const [sendNotfication] = useMutation(SEND_NOTIFICATION);\n  const [removeMate] = useMutation(REMOVE_MATE);\n  const { data, loading } = useQuery(USER_BY_ID, {\n    variables : {\n      userId\n    }\n  })\n  const { data: meData } = useQuery(MY_ACCOUNT);\n\n  const removeMateFunc = async () => {\n   await removeMate({\n      variables: {\n        mateId: userId\n      },\n      update: (cache, { data: { removeMate }}) => {\n     \n        cache.writeQuery({\n          query: GET_MY_MATES, \n          variables: {\n                userId : meData.me.id\n                    }, \n          data: {\n            getMates: removeMate\n           }\n        })  \n      }\n    }) \n    try {\n      toggleMatesOptions(false)\n      toggleMatesRemove(false)\n      selectedUserId(0);\n    } catch(err) {\n      console.log(err);\n    }\n  }\n\n  const addMate = async () => {\n    const response =  await sendNotfication({\n      variables : {\n          recipient: userId,\n          type: \"request\",\n          message: \"wants to be your mate.\"\n      }, update : (cache ,  {data : { sendNotfication }}) => {\n        const cacheRead = cache.readQuery({\n          query : VALIDATE_NOTIFICATION,\n          variables: {\n            senderId : meData.me.id,\n            recipient: userId,\n            type: \"request\"\n          }\n        });\n          console.log(cacheRead);\n          cache.writeQuery({\n            query : VALIDATE_NOTIFICATION,\n            variables: {\n              senderId : meData.me.id,\n              recipient: userId,\n              type: \"request\"\n            },\n            data: {\n              validateNotification: true\n            }\n          })\n         }\n      })\n  try{\n    toggleMatesOptions(false);\n    toggleMatesAdd(false);\n    selectedUserId(0);\n    if(response.data.sendNotfication.reqBlocked !== true) {\n      const result = {\n        show: true,\n        success: true,\n        type: \"request\"\n      }\n      toggleResult(result);\n    }\n  } catch(err) {\n      console.log(err);\n  }\n  }\n  return (\n    <div className=\"result-component\">\n    <div className=\"wrapper\">\n      {type === \"remove\" && \n        <Fragment>\n          <p>Are you sure you want to remove <em className=\"capitalize\">{!loading && data && data.user.firstName}</em> as a mate?</p> \n          <span className=\"btn-wrapper\">\n            <button onClick={() => removeMateFunc()} className=\"delete-btn\">\n              <span className=\"btn-bg\"></span>\n              <p>Remove mate</p>\n            </button>\n            <button onClick={() => toggleMatesRemove(false)} >\n              <p>Cancel</p>\n            </button>\n          </span>\n        </Fragment>\n      }\n       {type === \"add\" && \n        <Fragment>\n          <p>Are you sure you want to add <em className=\"capitalize\">{!loading && data && data.user.firstName}</em> as a mate?</p> \n          <span className=\"btn-wrapper\">\n            <button onClick={() => addMate()} className=\"add-btn\">\n              <span className=\"btn-bg\"></span>\n              <p>Add mate</p>\n            </button>\n            <button onClick={() =>  toggleMatesAdd(false)}>\n              <p>Cancel</p>\n            </button>\n          </span>\n        </Fragment>\n      }\n    </div>\n  </div>\n  )\n}\n\nexport default connector(Validation)","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\"\n// Redux\nimport { connect, ConnectedProps } from \"react-redux\";\n// Components \nimport Options from \"../options/Options\";\nimport Validation from \"../functions/Validation\";\n\ninterface ComponentProps {\n  mates: {\n    options : boolean\n    remove: boolean\n    add : boolean\n    id : number\n  }\n}\nconst mapState = (state: ComponentProps) => ({\n  userId: state.mates.id,\n  options: state.mates.options,\n  remove: state.mates.remove,\n  add : state.mates.add\n  \n})\n\nconst mapDispatch = {\n  toggleMatesOptions: (payload: boolean) => ({type: \"MATES_OPTIONS\", payload}),\n  selectedUserId: (userId: number ) => ({type: \"MATES_SELECTED_ID\", payload: userId})\n}\n\nconst connector = connect(mapState, mapDispatch);\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux & {\n  mate: {\n    id: number\n    avatar: string\n    firstName: string\n    lastName: string\n  }\n}\nconst Mate = ({userId, mate, options, remove, add, toggleMatesOptions, selectedUserId}: Props) => {\n  const [selectedId, setSelectedId] = useState(-1)\n\n  const toggleOptionsMenu = (id: number) => {\n    console.log(id);\n    if(options === true) {\n      setSelectedId(0);\n      selectedUserId(0);\n      toggleMatesOptions(false);\n    } else {\n      setSelectedId(id);\n      selectedUserId(id)\n      toggleMatesOptions(true);\n    }\n  }\n  \n  return (\n        <li key={mate.id} className=\"mate-container\">\n          <img src={mate.avatar} alt=\"User Avatar\"></img>\n          <span>\n            <p>{mate.firstName} {mate.lastName}</p>\n            <Link to={`/profile/${mate.id}`}>View Profile</Link>\n          </span>\n          <span className=\"post-btn-wrapper\"> \n            <button className=\"post-buttons\" onClick={() => toggleOptionsMenu(mate.id)}>\n              <img src=\"/assets/icons/post/options.svg\" alt=\"Project options\"/>\n            </button>\n          </span> \n          {selectedId === mate.id &&  <p>{mate.id}</p>}\n          { options === true && userId === mate.id &&  <Options type=\"user\" />} \n          {remove === true && userId === mate.id  && <Validation type=\"remove\" />}\n          {add === true &&  userId=== mate.id  && <Validation type=\"add\" />} \n        </li> \n  )\n}\n\nexport default connector(Mate);","import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\"\n// GrahphQL\nimport { useQuery } from \"@apollo/client\";\nimport { GET_MY_MATES } from \"../../../graphql/queries\"\nimport Mate from \"../mate/Mate\";\ninterface ComponentProps {\n  userId: string\n}\nconst Mates = ({userId}: ComponentProps) => {\n  const { data, loading } = useQuery(GET_MY_MATES, {\n  variables : {\n    userId\n  } \n  });\n\n  return (\n    <Fragment>\n        { !loading && data && data.getMates.length !== 0 ? data.getMates.map((mate: any) => \n        <Fragment key={mate.id}> \n          <Mate mate={mate} />\n        </Fragment>\n        ) : \n        <li className=\"no-posts\" key={0}>\n          <p>You have no mates. Check out the <Link to=\"/discover\">Discover</Link> page and find some new mates.</p>\n        </li> }\n    </Fragment>\n  )\n}\n\nexport default Mates;","import React, { useState, Fragment } from 'react'\nimport { withRouter, useLocation } from \"react-router-dom\";\n// GraphQL\nimport { useQuery } from \"@apollo/client\";\nimport { USER_BY_ID } from \"../../../graphql/queries\";\n// Redux\nimport { connect, ConnectedProps } from \"react-redux\";\n// Components \nimport Information from \"./components/Information\"\nimport Options from \"../../../components/mates/options/Options\";\nimport Validation from \"../../../components/mates/functions/Validation\";\nimport Posts from \"./posts/Posts\";\nimport Projects from \"./projects/Projects\";\nimport Mates from \"../../mates/lists/Mates\";\n\n\ninterface ComponentProps {  \n    mates: {\n        options : boolean\n        remove: boolean\n        add : boolean\n      }\n  }\n  \n  const mapState = (state: ComponentProps) => ({\n    options: state.mates.options,\n    remove: state.mates.remove,\n    add : state.mates.add\n  })\n  \n  const mapDispatch = {\n\n  }\n  \n  const connector = connect(mapState,mapDispatch);\n  \n  type PropsFromRedux = ConnectedProps<typeof connector>;\n  type Props = PropsFromRedux & {\n      history : any\n  }\n  \nconst ProfileByID = ({ add, options, remove } : Props) => {\n    const location: any = useLocation();\n    const params = location.pathname.split(\"/\")\n    const userId = parseInt(params[2]);\n    const { data, loading } = useQuery(USER_BY_ID, {\n        variables: {\n            userId: userId,\n        } \n    });\n    const [display , setDisplayOption] = useState(\"posts\");\n\n    if(loading) {\n        return <div>loading...</div>\n    }\n    const onChange = (e:React.ChangeEvent<HTMLSelectElement> ) => {\n        setDisplayOption(e.target.value);\n    }\n\n    return (\n    <div className=\"component-container\">\n        <div className=\"user-profile-wrapper\"> \n        {/* <div className=\"component-header\">\n        <h3 className=\"feed-title\">{data.user.firstName + \" \" + data.user.lastName}</h3>\n        { !meLoading && meData && meData.me.id === userId  ? null : myFriend === true ?\n            <button \n                onClick={() => removeMateFunc(data.user.id)} className=\"remove-mate\"\n                disabled={addBtnDisabled === true}>\n                <p>Remove mate</p>\n            </button> :\n             <button \n            onClick={() => addMate(data.user.id)} className=\"add-mate\"\n            disabled={addBtnDisabled === true}>\n                <p>Add Mate</p>\n                <img src=\"/assets/icons/profile/add.svg\" alt=\"Add Mate\"/>\n        </button>}\n\n        {clearMessage === false && addBtnDisabled === true &&\n            <span className=\"res-status\" style={ {backgroundColor: \"#f8323b\"} }>\n                <div></div> \n                <p>{responseStatus}</p>\n            </span>\n        }\n       { clearMessage === false && notificationSent === true &&\n          <span className=\"res-status\" style={ {backgroundColor: \"2767fa\", width: \"200px\"}}>\n          <div></div> \n          <p>{responseStatus}</p>\n      </span> }\n        </div> */}\n         {!loading && data && data.user &&\n         <Fragment>\n            <Information user={data.user}/>\n            <ul className=\"profile-components-options\">\n                <li>\n                    <button \n                    onClick={() => setDisplayOption(\"posts\")} \n                    className={ display === \"posts\" ? \"display-active\" : \"display-normal\"}>Posts</button>\n                </li>\n                <li>\n                    <button \n                    onClick={() => setDisplayOption(\"projects\")}\n                    className={ display === \"projects\" ? \"display-active\" : \"display-normal\"}>Projects</button>\n                </li>\n                <li>\n                    <button  \n                        className={ display === \"mates\" ? \"display-active\" : \"display-normal\"}\n                        onClick={() => setDisplayOption(\"mates\")}>Mates</button>\n                </li>\n                <select value={display} onChange={(e) => onChange(e)}>\n                    <option value=\"posts\">Posts</option>\n                    <option value=\"projects\">Projects</option>\n                    <option value=\"mates\">Mates</option>\n                </select>\n            </ul> \n            <ul className=\"profile-display\">\n            { display === \"posts\" && <Posts />}\n            { display === \"projects\" && <Projects />}\n            { display === \"mates\" && <Mates userId={data.user.id} />}\n            </ul>\n        </Fragment>\n        }\n        {/* { options === true && <Options type=\"profile\" mateId={userId}/>}\n        {remove === true  && <Validation type=\"remove\" mateId={userId} />}\n        {add === true &&  <Validation type=\"add\" mateId={userId} />} */}\n        </div>\n        </div>\n    );\n}\n\nexport default withRouter(connector(ProfileByID));","import { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\n\ninterface ComponentProps {\n  history: any\n}\n\nfunction ScrollToTop({ history }: ComponentProps) {\n  useEffect(() => {\n    const unlisten = history.listen(() => {\n      window.scrollTo(0, 0);\n    });\n    return () => {\n      unlisten();\n    }\n  }, [history]);\n\n  return (null);\n}\n\nexport default withRouter(ScrollToTop);","import React, { useEffect } from 'react'\n// Redux\nimport { connect, ConnectedProps } from \"react-redux\";\n\ntype Result  = {\n  show: boolean\n  success: boolean\n  type: string\n}\nconst mapDispatch = {\n  toggleResult: (payload: Result ) => ({type: \"RESULT_TOGGLE\", payload})\n}\n\nconst connector = connect(null, mapDispatch);\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux\n\n const RequestResult = ({toggleResult}:Props) => {\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      const result = {\n        show: false,\n        success: false,\n        type: \"\"\n      }\n      toggleResult(result);\n    }, 5000);\n    return () => clearTimeout(timer);\n  }, [toggleResult])\n  return (\n    <div className=\"request-sent-container\">\n      <img src=\"/assets/icons/result/success.svg\" alt=\"Success\"/> \n      <p>Mate request sent :)</p>\n    </div>\n  )\n}\n\nexport default connector(RequestResult);","import React, { useEffect , useState} from 'react'\nimport { Link, useLocation } from \"react-router-dom\"\nimport { useQuery } from \"@apollo/client\";\nimport { MY_ACCOUNT } from \"../../graphql/queries\";\n// Redux \nimport { connect, ConnectedProps } from \"react-redux\";\n\ninterface ComponentProps {\n application : {\n   postPanel : boolean,\n   projectPanel: boolean\n }\n}\n\nconst mapState = (state: ComponentProps) => ({\n  postPanel : state.application.postPanel,\n  projectPanel: state.application.projectPanel\n})\n\nconst mapDispatch = {\n  closePostPanel : (payload: boolean) => ({ type: \"CLOSE_POST_PANEL\", payload: payload }),\n  intialiseProject: (bool: boolean ) => ({type: \"INIT_PROJECT\", payload: bool }),\n}\n\nconst connector = connect(mapState, mapDispatch)\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype Props = PropsFromRedux;\nconst CreateComponent = ({projectPanel, postPanel ,closePostPanel , intialiseProject} : Props) => {\n  \n  const togglePostPanel = () => {\n    if(postPanel === true) {\n      closePostPanel(false)\n    } else {\n      closePostPanel(true)\n    }\n  }\n\n  const toggleProjectPanel = () => {\n    if(projectPanel === true) {\n      intialiseProject(false)\n    } else {\n      intialiseProject(true)\n    }\n  }\n\n\n  return (\n    <div className=\"create-component\">\n      <button onClick={() => toggleProjectPanel()} className=\"create-project\"> \n        <img src=\"/assets/icons/create/project-create.svg\" alt=\"Create Project\" />\n        <p>Create Project</p>\n      </button>\n\n      <button onClick={() => togglePostPanel()}  className=\"create-post\"> \n        <img src=\"/assets/icons/create/post-colour.svg\" alt=\"Create Post\" />\n        <p>Create Post</p>\n      </button>\n    </div>\n  )\n}\nexport default connector(CreateComponent);","import React, { Fragment, useEffect } from 'react'\nimport { Link } from \"react-router-dom\"\n// GraphQL\nimport { useMutation } from \"@apollo/client\";\nimport { MY_POSTS, FEED_POSTS, ALL_POSTS } from \"../../../graphql/queries\";\nimport { DELETE_POST } from \"../../../graphql/mutations\";\n// Redux\nimport { connect, ConnectedProps } from \"react-redux\";\n\ninterface ComponentProps {\n\n}\n\nconst mapState = (state: ComponentProps) => ({\n\n})\n\nconst mapDispatch = {\n  setPostId : (id:number) => ({type: \"SELECTED_POST_ID\", payload: id}),\n  validatePostDelete: (payload:boolean) => ({type: \"SET_DELETE_COMPONENT\", payload: payload}),\n  togglePostOptions: (payload: boolean) => ({type: \"TOGGLE_POST_OPTIONS\", payload}),\n}\n\nconst connector = connect(mapState, mapDispatch);\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux & {\n  postId: number\n};\n\nconst DeletePost = ({postId, validatePostDelete, setPostId, togglePostOptions} : Props) => {\n  const [deletePost] = useMutation(DELETE_POST);\n  const deletPostById = () => {\n    const id = postId; \n    // Remove post and update all caches\n    deletePost({\n        variables: { postId: id }, \n        update: (cache, { data: { deletePost }}) => {\n            // Cache for my posts : Update cache to show on profile in realtime\n          const cacheMyData: any = cache.readQuery({ query: MY_POSTS });\n          // Check to see if there is a cache\n          if(cacheMyData !== null) {\n            let updatedMyCache = [...cacheMyData.myPosts];\n            let index;\n            for(let x = 0; x < updatedMyCache.length; x++ ) {\n              if(updatedMyCache[x].postId === postId ) {\n               index =  updatedMyCache.indexOf(updatedMyCache[x]);\n               updatedMyCache.splice(index, 1);\n              }\n          }\n          cache.writeQuery({ \n            query: MY_POSTS, \n            data: {\n              myPosts: updatedMyCache\n            }\n          });\n        }  \n          // Cache for feed posts : Update cache to show on profile in realtime\n          const cacheFeedPosts: any = cache.readQuery({ query: FEED_POSTS });\n          // Check to see if there is a cache\n          if(cacheFeedPosts !== null) {\n            let updatedFeedCache = [...cacheFeedPosts.myFeed];\n            let index;\n            for(let x = 0; x < updatedFeedCache.length; x++ ) {\n              if(updatedFeedCache[x].postId === postId ) {\n               index =  updatedFeedCache.indexOf(updatedFeedCache[x]);\n               updatedFeedCache.splice(index, 1);\n              }\n          }\n          cache.writeQuery({ \n            query: FEED_POSTS, \n            data: {\n              myFeed: updatedFeedCache\n            }\n          });\n        }  \n          // Cache for all posts : Update cache to show on feed in realtime\n          const cacheAllData: any = cache.readQuery({ query: ALL_POSTS });\n           // Check to see if there is a cache\n           if(cacheAllData !== null) {\n            let updatedAllCache = [...cacheAllData.allPosts];\n            let index\n            // Loop through the cache and find the post we want to delete by matching the postId\n            for(let x = 0; x < updatedAllCache.length; x++ ) {\n                if(updatedAllCache[x].postId === postId ) {\n                 index =  updatedAllCache.indexOf(updatedAllCache[x]);\n                 updatedAllCache.splice(index, 1);\n                }\n            }\n          cache.writeQuery({ \n            query: ALL_POSTS,\n            data : {\n              allPosts : updatedAllCache\n            } \n          });\n          }\n        }\n      }).then(() => {\n        setPostId(0);\n        validatePostDelete(false);\n        togglePostOptions(false)\n      })\n      .catch(err => console.log(err) )\n    }\n  return (\n    <div className=\"result-component\">\n      <div className=\"wrapper\">\n            <p>Are you sure you want to delete this post?</p> \n            <span className=\"btn-wrapper\">\n              <button onClick={() => deletPostById()} className=\"delete-btn\">\n                <span className=\"btn-bg\"></span>\n                <p>Delete</p>\n              </button>\n              <button onClick={() =>    validatePostDelete(false)} >\n                <p>Cancel</p>\n              </button>\n            </span>\n      </div>\n    </div>\n  )\n}\nexport default connector(DeletePost)","import React, { useState } from 'react'\nimport { Link } from \"react-router-dom\"\n// Components \nimport Comment from \"../comments/Comment\";\nimport FormatTimestamp from \"../../formatTime/FormatTimestamp\"\nimport Options from \"../options/Options\";\nimport DeletePost from \"../functions/DeletePost\"\n// Redux\nimport { connect, ConnectedProps } from \"react-redux\";\ninterface ComponentProps  { \nposts : {\n  options: boolean\n  postDelete: boolean\n}\n}\nconst mapState = (state: ComponentProps) => ({\n  options: state.posts.options,\n  postDelete: state.posts.postDelete\n})\n\nconst mapDispatch = {\n  togglePostOptions: (payload: boolean) => ({type: \"TOGGLE_POST_OPTIONS\", payload}),\n}\n\nconst connector = connect(mapState, mapDispatch)\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux & {\n  post : { \n    post: {\n      id: number\n      creatorId : string\n      avatar: string\n      created: number\n      content: string\n    }\n    project: {\n      id: string\n      mainTrack: string\n    }\n    comments: [{\n      id: number\n      postId:  number\n      userId:  number\n      userName: string\n      comment: string\n      created : number\n      avatar : string\n    }]\n    likes : [{\n      id : number\n      postId: number\n      userId: string\n    }]\n  }\n}\n\n\nconst MyPost = ({ post, options, postDelete, togglePostOptions }: Props ) => {\n  const [selectId, setSelectedId] = useState(0);\n  const [ postIdForComment, setIdForComments ] = useState(0)\n\n  const toggleOptionsMenu = (id: number) => {\n    if(options === true) {\n      setSelectedId(0);\n      togglePostOptions(false)\n    } else {\n      setSelectedId(id);\n      togglePostOptions(true)\n    }\n  }\n  const openComments = (postId: number) => {\n    if(postIdForComment === postId) {\n     setIdForComments(0)\n    } else {\n     setIdForComments(postId)\n    }\n  }\n\n  return (\n    <div className=\"post\">\n      <div className=\"post-top-wrapper\">\n        <div className=\"avatar\">\n          <img src={post.post.avatar} alt=\"User's Avatar\"/>\n        </div>\n        <span className=\"post-name-wrapper\">\n          <Link to={`/profile/${post.post.creatorId}`} className=\"post-name post-user\">You</Link>\n          <FormatTimestamp timestamp={post.post.created} />\n        </span>  \n        <span className=\"post-btn-wrapper\"> \n          <button className=\"post-buttons\" onClick={() => toggleOptionsMenu(post.post.id)}>\n            <img src=\"/assets/icons/post/options.svg\" alt=\"Project options\"/>\n          </button>\n        </span>\n      </div>\n    <div className=\"post-content\"><p>{post.post.content}</p></div>\n    <div className=\"post-bottom-wrapper\">\n      <button onClick={() => openComments(post.post.id)} className=\"comment-button\">Comments</button>\n        <p className=\"comments-length\">{post.comments.length}</p>\n      <div className=\"likes\"> \n        <img src=\"/assets/icons/post/thumb.svg\" alt=\"Likes\"/>\n        <p>{post.likes.length}</p>\n      </div>\n    </div>\n    {postIdForComment === post.post.id ? <Comment postId={post.post.id} /> : null}\n    { selectId === post.post.id && options === true && \n      <Options type=\"post\"/>}\n    { postDelete === true && selectId === post.post.id && <DeletePost postId={post.post.id}/>}\n  </div> \n  )\n}\n\nexport default connector(MyPost);","import React, { useState } from 'react'\nimport { Link } from \"react-router-dom\"\n// Components \nimport Comment from \"../comments/Comment\";\nimport FormatTimestamp from \"../../formatTime/FormatTimestamp\"\nimport ContributorAvatar from \"../../project/contributors/ContributorAvatar\";\nimport Options from \"../options/Options\";\nimport DeletePost from \"../functions/DeletePost\"\n// Redux\nimport { connect, ConnectedProps } from \"react-redux\";\ninterface ComponentProps  {\n  posts : {\n    options: boolean\n    postDelete: boolean\n  }\n}\nconst mapState = (state: ComponentProps) => ({\n  options: state.posts.options,\n  postDelete: state.posts.postDelete\n})\n\nconst mapDispatch = {\n  activatePlaybar : (payload: boolean) => ({ type: \"OPEN_PLAYBAR\", payload: payload }),\n  assignTrack : (payload: object) => ({type: \"ASSIGN_TRACK\", payload: payload}),\n  togglePostOptions: (payload: boolean) => ({type: \"TOGGLE_POST_OPTIONS\", payload}),\n}\n\nconst connector = connect(mapState, mapDispatch)\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux & {\n  post : { \n    post: {\n      id: number\n      creatorId : string\n      avatar: string\n      created: number\n      content: string\n    }\n    project: {\n      id: string\n      mainTrack: string\n    }\n    comments: [{\n      id: number\n      postId:  number\n      userId:  number\n      userName: string\n      comment: string\n      created : number\n      avatar : string\n    }]\n    likes : [{\n      id : number\n      postId: number\n      userId: string\n    }]\n  }\n}\n\n\nconst MySharedProject = ({ post, options, postDelete, activatePlaybar, assignTrack, togglePostOptions }: Props ) => {\n  const [ postIdForComment, setIdForComments ] = useState(0)\n  const [selectId, setSelectedId] = useState(0);\n  const openPlaybarAndAssignTrackId = (trackId: string, projectId: string) => {\n    activatePlaybar(true);\n    const dataObject = {\n      id: trackId,\n      projectId,\n      trackName: \"\"\n    }\n    assignTrack(dataObject)\n  }\n  const toggleOptionsMenu = (id: number) => {\n    if(options === true) {\n      setSelectedId(0);\n      togglePostOptions(false)\n    } else {\n      setSelectedId(id);\n      togglePostOptions(true)\n    }\n  }\n\n  const openComments = (postId: number) => {\n    if(postIdForComment === postId) {\n     setIdForComments(0)\n    } else {\n     setIdForComments(postId)\n    }\n  }\n\n  return (\n      <div className=\"post\">\n        <div className=\"post-top-wrapper\">\n          <div className=\"avatar\">\n            <img src={post.post.avatar} alt=\"User's Avatar\"/>\n          </div>\n          <span className=\"post-name-wrapper\">\n            <Link to={`/profile/${post.post.creatorId}`} className=\"post-name post-user\">You <span className=\"shared-project-span\">Shared project</span></Link>\n            <FormatTimestamp timestamp={post.post.created} />\n          </span>  \n          <span className=\"post-btn-wrapper\">\n            <button className=\"post-buttons\" onClick={() => toggleOptionsMenu(post.post.id)}>\n              <img src=\"/assets/icons/post/options.svg\" alt=\"Project options\"/>\n            </button>\n          </span>\n        </div>\n                      <div className=\"post-project-wrapper\">\n                        <button onClick={() => openPlaybarAndAssignTrackId(post.project.mainTrack, post.project.id)}>\n                          <img src=\"/assets/icons/post/play.svg\" alt=\"Play button\"/>\n                        </button>\n                          <Link to={`/workspace/${post.project.id}`} className=\"project-name\">{post.post.content}</Link>\n                      </div>\n                      <div className=\"contributors\">\n                        <span className=\"flex-wrapper\">\n                        <p>Contributors</p>\n                          <span className=\"contributors-avatars\">\n                          <ContributorAvatar projectId={post.project.id} />\n                          </span>\n                        </span>   \n                        </div>\n\n                     <div className=\"post-bottom-wrapper\">\n                         <button onClick={() => openComments(post.post.id)} className=\"comment-button\">Comments</button>\n                         <p className=\"comments-length\">{post.comments.length}</p>\n                       <div className=\"likes\"> \n                         <img src=\"/assets/icons/post/thumb.svg\" alt=\"Likes\"/>\n                         <p>{post.likes.length}</p>\n                       </div>\n                     </div>\n                     {postIdForComment === post.post.id ? <Comment postId={post.post.id} /> : null}\n                     { selectId === post.post.id && options === true && \n                      <Options type=\"post\"/>}\n                    { postDelete === true && selectId === post.post.id && <DeletePost postId={post.post.id}/>}\n                   </div> \n  )\n}\n\nexport default connector(MySharedProject);","import React, { Fragment } from 'react'\nimport { Link } from \"react-router-dom\"\n// GraphQL\nimport { useQuery } from \"@apollo/client\";\nimport {MY_ACCOUNT, FEED_POSTS} from \"../../graphql/queries\";\nimport CreateComponent from \"../../components/create/CreateComponent\"\nimport MyPost from \"../../components/post/posts/MyPost\";\nimport UsersPost from \"../../components/post/posts/UsersPost\";\nimport MySharedProject from \"../../components/post/sharedProject/MySharedProject\";\nimport UserSharedProject from \"../../components/post/sharedProject/UserSharedProject\";\n\nconst Feed: React.FC = () => {\n  const { data, loading } = useQuery(FEED_POSTS);\n  const { data: meData, loading: meLoading } = useQuery(MY_ACCOUNT);\n\n    return (\n      <div className=\"component-container\">\n        <div className=\"feed-flex\">\n         <CreateComponent />\n         {!loading && data && data.myFeed.length !== 0  ?\n              <ul>\n                {data.myFeed.map((post: any) => \n                <li key={post.post.id}>\n                  { post.project !== null ?\n                    <Fragment> \n                    { !meLoading && meData && meData.me.id === post.post.creatorId ? \n                      <MySharedProject post={post} />  :\n                      <UserSharedProject post={post} /> \n                    }\n                   </Fragment>\n                  :\n                  <Fragment> \n                  { !meLoading && meData && meData.me.id === post.post.creatorId ? \n                    <MyPost post={post} />  :\n                    <UsersPost post={post} /> \n                  }\n                 </Fragment>\n                }\n                  </li> )}\n              </ul> : \n              <div className=\"no-posts\">\n                <p>There are no posts on your feed. Check out the <Link to=\"/discover\">Discover</Link> page and find some new mates. </p>\n              </div> }\n        </div>\n      </div> \n    );\n}\n\nexport default Feed;","import React, { useState , useEffect} from 'react'\nimport { v4 as uuidv4 } from 'uuid';\n// GraphQL\nimport { useMutation } from \"@apollo/client\";\nimport { CREATE_TAB } from \"../../../graphql/mutations\";\nimport { GET_TABS } from \"../../../graphql/queries\";\n// Redux \nimport { connect, ConnectedProps } from \"react-redux\";\n// Component Props and their types\ninterface ComponentProps {\n  workspace: {\n    tabInit: boolean\n  }\n  project: {\n    currentProject: string\n  }\n}\n\nconst mapState = (state : ComponentProps) => ({\n  currentProject: state.project.currentProject,\n  tabInit: state.workspace.tabInit\n})\nconst mapDispatch = {\n  initTabCreation : (bool: boolean) => ({type: \"INIT_AND_EXIT_TAB_CREATION\", payload: bool})\n}\n\nconst connector = connect(mapState, mapDispatch);\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux\n\n \n\n const CreateTab = ({initTabCreation , currentProject}: Props) => {\n   const [tabArray, initTabArray] = useState([]);\n   const [description, setDescription] = useState({description : \"\"});\n   const [disable, disableSubmitBtn] = useState(false);\n   const [createTab] = useMutation(CREATE_TAB);\n\n   // Used to set the correct value to the related select \n   var index = 0;\n   useEffect(() => {\n     // Populate array state so it can be rendered properly in the form\n     // x = rows indictaing the strings on the guitar\n     // y = columns indictating frets on a guitar neck\n     if(tabArray.length < 1) {\n      let initialArray: any = []\n      for(var y = 0 ; y < 6 ; y++) {\n        for(var x = 0 ; x <= 10; x++) {\n          initialArray.push(\"\")\n        }\n      }\n      initTabArray(initialArray);\n     }\n   }, [tabArray])\n\n  const onChange = (e:React.ChangeEvent<HTMLInputElement>) => {\n    setDescription({...description, description: e.target.value})\n  }\n\n  const onTabChange = () => {\n    disableSubmitBtn(true);\n    var newArray: any = [];\n    var i = 0;\n    // Loop through the 6 x 11 \"grid\"\n    for(var y = 0 ; y < 6 ; y++) {\n      for(var x = 0 ; x <= 10; x++) {\n        // Assign note variable with each select element\n        var note: any = document.getElementsByClassName(\"tab-note\")[i];\n        // Assign val the note value then push to array\n        var val = note.value;\n        newArray.push(val);\n        // increment i\n        i++;\n      }\n    } \n    // Assign the new array to the tabArray state\n    initTabArray(newArray)\n  }\n\n  const onSubmit = async (e: any) => {\n    e.preventDefault();\n    // Adding tab with our createTab mutation and updating cache\n    await createTab({\n      variables : {\n        projectId: currentProject,\n        tab: tabArray,\n        description : description.description\n      },\n      update: ( cache, { data: { createTab } }) => {\n        // Updating the GET_TABS cache with createTab result\n        const cacheTabs: any = cache.readQuery({\n          query: GET_TABS,\n          variables : {\n              projectId: currentProject\n            },\n        });\n\n        let newTabArray = [...cacheTabs.tabs, createTab]\n        cache.writeQuery({\n          query: GET_TABS,\n          variables : {\n            projectId: currentProject\n          },\n          data : {\n            tabs: newTabArray\n          }\n        })\n      }\n    }) \n      try{\n      // Close Creation panel\n      initTabCreation(false); \n      // Resest initial array with empty strings\n      let initialArray: any = [];\n      setDescription({description : \"\"});\n      for(var y = 0 ; y < 6 ; y++) {\n        for(var x = 0 ; x <= 10; x++) {\n          initialArray.push(\"\")\n        }\n      }\n      initTabArray(initialArray);\n      } catch(err) {\n        console.log(err);\n      }\n    }\n  \n  return (\n    <div className=\"create-container workspace-create\">\n        <span className=\"panel-top\">\n              <h4>Create Tab</h4>\n              <button onClick={() => initTabCreation(false)} className=\"exit-btn\">\n              <img src=\"/assets/icons/plus/exit-dark.svg\" alt=\"Exit panel\"/>\n            </button>\n        </span>\n      <form className=\"create-form\" onSubmit={(e) => onSubmit(e)}>\n        <span className=\"input-wrapper\">\n          <label htmlFor=\"description\">Tab Description</label>\n          <input \n            type=\"text\" \n          \n            name= \"description\"\n            id= \"description\"\n            placeholder=\"Give this tab a description e.g. intro, solo etc\"\n            onChange={(e) => onChange(e)}/>\n        </span>\n      <div className=\"select-grid\">\n        {tabArray.map(() => (\n        <select \n          name=\"tab-note\" \n          className=\"tab-note\"  \n          value={tabArray[index++]}\n          key={uuidv4()}\n          onChange={() => onTabChange()} \n         >\n          <option value=\"\"></option>\n          <option value=\"x\">x</option>\n          <option value=\"1\">1</option>\n          <option value=\"2\">2</option>\n          <option value=\"3\">3</option>\n          <option value=\"4\">4</option>\n          <option value=\"5\">5</option>\n          <option value=\"6\">6</option>\n          <option value=\"7\">7</option>\n          <option value=\"8\">8</option>\n          <option value=\"9\">9</option>\n          <option value=\"10\">10</option>\n          <option value=\"11\">11</option>\n          <option value=\"12\">12</option>\n          <option value=\"13\">13</option>\n          <option value=\"14\">14</option>\n          <option value=\"15\">15</option>\n          <option value=\"16\">16</option>\n          <option value=\"17\">17</option>\n          <option value=\"18\">18</option>\n          <option value=\"19\">19</option>\n          <option value=\"20\">20</option>\n          <option value=\"21\">21</option>\n          <option value=\"22\">22</option>\n          <option value=\"23\">23</option>\n          <option value=\"24\">24</option>\n        </select>\n        ))}\n        </div>\n        <input type=\"submit\" id=\"submit-lyric\" value=\"Create Tab\" className=\"create-submit\" disabled={!disable}/>\n      </form>\n    </div>\n  )\n}\nexport default connector(CreateTab);","import React from 'react'\nimport { useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\n// GraphQL \nimport { useMutation } from \"@apollo/client\";\nimport { DELETE_TAB , DELETE_LYRIC, DELETE_TRACK} from \"../../graphql/mutations\";\nimport { GET_TABS, GET_LYRICS, GET_TRACKS} from \"../../graphql/queries\";\n// Redux \nimport { connect, ConnectedProps } from \"react-redux\";\n\ninterface ComponentProps {\n  workspace: {\n    lyrics :{\n      delete: boolean,\n      id: number\n    }\n  }\n  project: {\n    currentProject : string\n  }\n}\n\nconst mapState = (state : ComponentProps) => ({\n  lyrics: state.workspace.lyrics,\n  currentProject: state.project.currentProject\n})\n\nconst mapDispatch = {\n  initLyricDeletion : (bool: boolean) => ({type: \"DELETE_LYRIC\", payload: bool}),\n  initTabDeletion : (bool: boolean) => ({type: \"DELETE_TAB\", payload: bool}),\n  initTrackDeletion: (payload: boolean) => ({ type: \"DELETE_TRACK\", payload: payload }),\n  setLyricId : (id: number) => ({type: \"SET_LYRIC_ID\", payload: id})\n}\n\nconst connector = connect(mapState, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux & {\n  wsType: string,\n  itemId: number | string\n}\n\nconst DeleteWSItem = ({wsType, itemId, initTabDeletion, initLyricDeletion, initTrackDeletion}: Props) => {\n  const [deleteTab] = useMutation(DELETE_TAB);\n  const [deleteLyric] = useMutation(DELETE_LYRIC);\n  const [deleteTrack] = useMutation(DELETE_TRACK);\n  // Get project id from the route pathname\n  const location = useLocation();\n  const params = location.pathname.split(\"/\");\n  const projectId = params[2]\n \n  const deleteItem = async () => {\n    if(wsType === \"track\") {\n      await deleteTrack({\n        variables: {\n          projectId,\n          trackId: itemId\n        },\n        update: (cache, { data: deleteTrack }) => {\n          console.log(deleteTrack);\n          cache.writeQuery({\n           query: GET_TRACKS, \n            variables : {\n              projectId\n            }, \n            data: {\n              tracks : deleteTrack\n            }\n          })\n        }\n      })\n      try {\n        initTrackDeletion(false)\n  \n        const fileId: string = itemId.toString();\n        console.log(fileId)\n        var newFormData = new FormData();\n        newFormData.append(\"fileId\", fileId);\n        newFormData.append(\"projectId\", projectId);\n\n        axios({\n          method: \"post\",\n          url: 'http://localhost:4000/removeItem',\n          data: newFormData,\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        })\n          .then((res: any) => {\n            //handle success\n            console.log(res);\n          })\n          .catch((res: any) => {\n            //handle error\n            console.log(res);\n          });\n      }catch(err) {\n        console.log(err)\n      }\n    }\n    if(wsType === \"tab\") {\n      await deleteTab({\n        variables: {\n          projectId,\n          tabId: itemId\n        },\n        update: (cache, { data: deleteTab }) => {\n          console.log(deleteTab);\n          cache.writeQuery({\n           query: GET_TABS, \n            variables : {\n              projectId\n            }, \n            data: {\n              tabs : deleteTab\n            }\n          })\n        }\n      })\n      try {\n        initTabDeletion(false)\n      }catch(err) {\n        console.log(err)\n      }\n    }\n    if(wsType === \"lyric\"){\n      await deleteLyric({\n        variables: {\n          projectId,\n          lyricId: itemId\n        },\n        update: (cache, { data: { deleteLyric } }) => {\n          cache.writeQuery({\n            query: GET_LYRICS,\n            variables : {\n              projectId\n            },\n            data : {\n              lyrics: deleteLyric\n            }\n          })\n        } \n      })\n    }\n  }\n\n  const exitDeletionPanel = () => {\n    if(wsType === \"track\") {\n      initTrackDeletion(false)\n    }\n    if(wsType === \"tab\") {\n      initTabDeletion(false)\n    }\n    if(wsType === \"lyric\") {\n      initLyricDeletion(false)\n    }\n  }\n\n  return (\n    <div className=\"delete-popup\">\n      <p>Are you sure you want to delete this {wsType}?</p>\n      <div className=\"delete-buttons-wrappers\">\n        <button className=\"delete-btn\" onClick={() => deleteItem()}>Delete</button>\n        <button onClick={() => exitDeletionPanel()}>Cancel</button>\n      </div>\n    </div>\n  )\n}\n\nexport default connector(DeleteWSItem);\n","import React,  { useState, useEffect } from 'react'\nimport { v4 as uuid } from \"uuid\";\n\n// GraphQL\nimport { useQuery } from \"@apollo/client\";\nimport { GET_TABS } from \"../../../graphql/queries\";\n// Redux\nimport {connect, ConnectedProps } from \"react-redux\";\n// Components\nimport CreateTabs from \"./CreateTabs\";\nimport DeleteWSItem from \"../DeleteWSItem\";\ninterface ComponentProps {\n  workspace: {\n   tabs: {\n     create: boolean,\n     delete: boolean\n   }\n  }\n  project: {\n    currentProject: string\n  }\n}\n\nconst mapState = (state : ComponentProps) => ({\n  currentProject: state.project.currentProject,\n  tabs: state.workspace.tabs\n})\n\nconst mapDispatch = {\n  initTabCreation : (bool: boolean) => ({type: \"INIT_AND_EXIT_TAB_CREATION\", payload: bool}),\n  initTabDeletion : (bool: boolean) => ({type: \"DELETE_TAB\", payload: bool}),\n}\n\nconst connector = connect(mapState, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux\n\n\nconst Tabs = ({initTabCreation, initTabDeletion, currentProject, tabs}: Props) => {\n  const [currentTab ,setCurrentTab] = useState(-1);\n  const { data, loading } = useQuery(GET_TABS, {\n    variables: {\n      projectId: currentProject\n    }\n  });\n\n  const createTabPanel = () => {\n    initTabCreation(true)\n  }\n  const deleteTabPanel = (id: number) => {\n    setCurrentTab(id);\n    initTabDeletion(true);\n  }\n\n  return (\n    <div className=\"tabs-container\">\n      <div className=\"lyric-tab-header\">\n          <h5>Tabs</h5>\n          {/* <button className=\"add-btn\" onClick={() => createTabPanel()}>\n            <img src=\"/assets/icons/workspace/add.svg\" alt=\"Add Lyric\"/>\n          </button> */}\n        </div>\n      {  tabs.create === true ? <CreateTabs></CreateTabs> : null}\n        <div className=\"lyric-tab-scroll-container\">\n          { !loading && data && data.tabs && data.tabs.length !== 0 ? data.tabs.map((tab :any) => \n             <li key={tab.id} className=\"tab-container\">\n             <div className=\"lyric-tab-top\">\n               <p>{tab.description}</p>\n               <div className=\"button-container\">\n                 <button  onClick={() => deleteTabPanel(tab.id)}>\n                   <img src=\"/assets/icons/workspace/delete.svg\" alt=\"Delete Lyric\"/>\n                 </button>\n                 <button className=\"edit-btn\">\n                   <img src=\"/assets/icons/workspace/edit.svg\" alt=\"Edit Lyric\"/>\n                 </button>\n               </div>\n             </div>\n             <div className=\"tab-grid\">\n               <div className=\"grid-lines\">\n                  <div className=\"line\"></div>\n                  <div className=\"line\"></div>\n                  <div className=\"line\"></div>\n                  <div className=\"line\"></div>\n                  <div className=\"line\"></div>\n                  <div className=\"line\"></div>\n               </div>\n                {  tab.tab.map((item: any) => \n                 <span key={uuid()}>\n                    <p>{ item === -1 ? \"\" : item}</p>\n                 </span> \n                )}\n             </div>\n             {tabs.delete && currentTab === tab.id && <DeleteWSItem wsType=\"tab\" itemId={tab.id}/>}\n         </li> ) : \n         <li className=\"default-workspace\">\n           <p>Add a tab</p>\n           <button onClick={() => initTabCreation(true)}>Create</button>\n          </li>\n         }\n    </div>\n    </div>\n  )\n}\n\nexport default connector(Tabs);\n","import React, { useState } from 'react'\n// GraphQL \nimport { useMutation } from \"@apollo/client\";\nimport { CREATE_LYRIC } from \"../../../graphql/mutations\";\nimport { GET_LYRICS } from \"../../../graphql/queries\";\n// Redux \nimport { connect, ConnectedProps } from \"react-redux\";\n\ninterface ComponentProps {\n  project: {\n    currentProject : string\n  }\n}\n\nconst mapState = (state : ComponentProps) => ({\n  currentProject: state.project.currentProject\n})\n\nconst mapDispatch = {\n  initLyricCreation : (bool: boolean) => ({type: \"INIT_AND_EXIT_LYRIC_CREATION\", payload: bool}),\n  createTabAndAddToProject: (lyricData: object) => ({type: \"CREATE_LYRIC\", payload: lyricData})\n}\n\nconst connector = connect(mapState, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux\n\nconst CreateLyric = ({initLyricCreation, createTabAndAddToProject, currentProject}: Props) => {\n  const [formData, setFormData] = useState({  \n    timestamp: 0,\n    option: \"Verse\",\n    lyric : \"\"});\n  const [createLyric] = useMutation(CREATE_LYRIC);\n  const setSection = (e: any) => {\n      setFormData({...formData, option : e.target.value})\n  }\n\n  const onChange = (e: any) => {\n    setFormData({...formData, [e.target.name] : e.target.value})\n  }\n\n  const onSubmit = async (e: any) => {\n    e.preventDefault();\n    const { option , lyric } = formData;\n    \n     await createLyric({\n      variables: {\n        projectId: currentProject,\n        option,\n        lyric\n      },\n      update: (cache, { data: { createLyric } }) => {\n        const cacheLyrics: any = cache.readQuery({\n          query: GET_LYRICS,\n          variables : {\n              projectId: currentProject\n            },\n        });\n        const updateCache = [...cacheLyrics.lyrics, createLyric ];\n        cache.writeQuery({\n          query: GET_LYRICS,\n          variables : {\n            projectId: currentProject\n          },\n          data : {\n            lyrics: updateCache\n          }\n        })\n      } \n    })\n\n    try {\n      initLyricCreation(false);\n      // Clear state\n      setFormData({   \n        timestamp: 0,\n        option: \"\",\n        lyric : \"\"});\n    } catch(err) {\n      console.log(err);\n    }\n  }\n\n  return (\n    <div className=\"create-container workspace-create\">\n      <span className=\"panel-top\">\n        <h4>Create Lyric</h4>\n        <button onClick={() => initLyricCreation(false)} className=\"exit-btn\">\n          <img src=\"/assets/icons/plus/exit-dark.svg\" alt=\"Exit panel\"/>\n        </button>\n      </span>\n      <form className=\"create-form\" onSubmit={(e) => onSubmit(e)}>\n       <div className=\"button-wrapper\">\n          <input \n            type=\"button\" \n            className=\"form-btns\" \n            value=\"Verse\" \n            onClick={(e) => setSection(e)} \n            style={formData.option === \"Verse\" ? {backgroundColor: \"#2767fa\"} : {backgroundColor: \"#3e424e\"}}/>\n          <input \n            type=\"button\" \n            className=\"form-btns\" \n            value=\"Chorus\" \n            onClick={(e) => setSection(e)} \n            style={formData.option === \"Chorus\" ? {backgroundColor: \"#2767fa\"} : {backgroundColor: \"#3e424e\"}}/>\n         <input \n            type=\"button\" \n            className=\"form-btns\" \n            value=\"Bridge\" \n            onClick={(e) => setSection(e)} \n            style={formData.option === \"Bridge\" ? {backgroundColor: \"#2767fa\"} : {backgroundColor: \"#3e424e\"}}/>\n          <input \n            type=\"button\" \n            className=\"form-btns\" \n            value=\"Intro\" \n            onClick={(e) => setSection(e)} \n            style={formData.option === \"Intro\" ? {backgroundColor: \"#2767fa\"} : {backgroundColor: \"#3e424e\"}}/>\n          <input \n            type=\"button\" \n            className=\"form-btns\" \n            value=\"Outro\" \n            onClick={(e) => setSection(e)} \n            style={formData.option === \"Outro\" ? {backgroundColor: \"#2767fa\"} : {backgroundColor: \"#3e424e\"}}/>\n          <input \n            type=\"button\" \n            className=\"form-btns\" \n            value=\"Solo\" \n            onClick={(e) => setSection(e)} \n            style={formData.option === \"Solo\" ? {backgroundColor: \"#2767fa\"} : {backgroundColor: \"#3e424e\"}}/>\n       </div>\n       <span className=\"input-wrapper\">\n          <label htmlFor=\"lyric\">Write some lyrics</label>\n          <textarea \n            name=\"lyric\" \n            id=\"lyric\"\n            placeholder=\"Enter lyrics here\" \n            onChange={(e) => onChange(e)} value={formData.lyric} />\n       </span>\n       <input type=\"submit\" className=\"create-submit\" id=\"submit-lyric\" value=\"Create Lyric\" disabled={!formData.lyric}/>\n      </form>\n    </div>\n  )\n}\n\nexport default connector(CreateLyric);\n","import React, { useState } from 'react'\n// GraphQL\nimport { useQuery } from \"@apollo/client\";\nimport { GET_LYRICS } from \"../../../graphql/queries\";\n// Redux\nimport { connect , ConnectedProps } from \"react-redux\";\n// Components\nimport CreateLyrics from \"./CreatLyrics\";\nimport DeleteWSItem from \"../DeleteWSItem\";\n\ninterface ComponentProps {\n  workspace: {\n    lyrics: {\n      create: boolean,\n      delete: boolean,\n      id: number\n    }\n  }\n  project: {\n    currentProject: string\n  }\n}\n\nconst mapState = (state : ComponentProps) => ({\n  lyrics: state.workspace.lyrics,\n  currentProject: state.project.currentProject\n})\n\nconst mapDispatch = {\n  initLyricCreation : (bool: boolean) => ({type: \"INIT_AND_EXIT_LYRIC_CREATION\", payload: bool}),\n  initLyricDeletion : (bool: boolean) => ({type: \"DELETE_LYRIC\", payload: bool}),\n  setLyricId : (id: number) => ({type: \"SET_LYRIC_ID\", payload: id})\n}\n\nconst connector = connect(mapState, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux\n\nfunction Lyrics({ initLyricCreation, initLyricDeletion, setLyricId , lyrics , currentProject}: Props) {\n  const [currentLyric , setCurrentLyric] = useState(-1);\n  const { data, loading } = useQuery(GET_LYRICS , {\n    variables: {\n      projectId: currentProject\n    }\n  });\n\n  const setDelete = (id:number) => {\n    console.log(\"Clicked\")\n    setCurrentLyric(id)\n    initLyricDeletion(true);\n  }\n  \n  return (\n    <div className=\"lyrics-container\">\n    <div className=\"lyric-tab-header\">\n      <h5>Lyrics</h5>\n      {/* <button className=\"add-btn\" onClick={() => initLyricCreation(true)}>\n        <img src=\"/assets/icons/workspace/add.svg\" alt=\"Add Lyric\"/>\n      </button> */}\n    </div>\n    { \n    lyrics.create === true ?  <CreateLyrics />: null\n    }\n    <div className=\"lyric-tab-scroll-container\">\n      { !loading && data && data.lyrics && data.lyrics.length !== 0 ? data.lyrics.map((lyric:any)=> \n        <div className=\"lyric-tab-container\" key={lyric.id}> \n          <div className=\"lyric-tab-top\">\n            <p>{lyric.option}</p>\n            <div className=\"button-container\">\n              <button onClick={() => setDelete(lyric.id)}>\n                <img src=\"/assets/icons/workspace/delete.svg\" alt=\"Delete Lyric\"/>\n              </button>\n              <button className=\"edit-btn\">\n                <img src=\"/assets/icons/workspace/edit.svg\" alt=\"Edit Lyric\"/>\n              </button>\n            </div> \n           \n          </div>\n          <div className=\"lyric-content\">\n            <p>{lyric.lyric}</p>\n          </div>\n      \n               {lyrics.delete && currentLyric === lyric.id && <DeleteWSItem wsType=\"lyric\" itemId={lyric.id}/>}\n       </div>\n      )\n       : <li className=\"default-workspace\">\n       <p>Add a some lyrics</p>\n       <button onClick={() => initLyricCreation(true)}>Create</button>\n      </li>\n    }\n      </div>\n  </div>\n  )\n}\n\nexport default connector(Lyrics);\n","import React, {useState, Fragment} from 'react'\nimport axios from \"axios\";\n// GraphQL\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { MY_ACCOUNT, GET_TRACKS } from \"../../../graphql/queries\";\nimport { CREATE_TRACK, DELETE_TRACK } from \"../../../graphql/mutations\";\n// Redux\nimport { connect, ConnectedProps } from \"react-redux\";\n\nconst MicRecorder = require('mic-recorder-to-mp3');\n\ninterface ComponentProps {\n  playbar: {\n    data : object\n  }\n  project: {\n    currentProject: string\n  }\n}\n\nconst mapState = (state: ComponentProps) => ({\n  data: state.playbar.data,\n  currentProject: state.project.currentProject\n})\n\nconst mapDispatch = {\n  assignTrack: (data: any) => ({type: \"ASSIGN_TRACK\", payload: data })\n}\n\nconst connector = connect(mapState, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux\n\nvar counter: number;\nconst Recording  = ({currentProject} : Props) => {\n  const [trackForm, setTrackForm] = useState({\n    name: \"\"\n  })\n  const [initForm, setForm] = useState(false);\n  const [audioBuffer, storeBuffer] = useState([]);\n  const [loadingSave, setLoadingSave] = useState(false);\n  const [recording, setRecording] = useState(false);\n  const { data: meData } = useQuery(MY_ACCOUNT);\n  const [ createTrack ] = useMutation(CREATE_TRACK);\n  const [deleteTrack] = useMutation(DELETE_TRACK);\n  //New instance\nconst recorder = new MicRecorder({\n  bitRate: 128\n});\n\n// Start recording. Browser will request permission to use your microphone.\nconst startRecording = () => {\n  if(counter === 0 || counter === undefined) {\n      recorder.start().then(() => {\n      }).catch((e: any) => {\n        console.error(e);\n      });\n      return counter = 1;\n  } else if(counter === 1) {\n  // Stop recording\n  recorder\n  .stop()\n  .getMp3().then(([buffer, blob]: any) => {\n    // Store buffer in component state\n    storeBuffer(buffer);\n    // Open Form pop up\n    setForm(true);\n}).catch((err: any) => {\n  alert('We could not retrieve your message');\n  console.log(err);\n});\nreturn counter = 0;\n  }\n}\n\nconst onChange = (e:React.ChangeEvent<HTMLInputElement>) => {\n  setTrackForm({...trackForm, [e.target.name] : e.target.value })\n}\n\nconst onSubmit = async (e:React.FormEvent<HTMLFormElement>) => {\n  e.preventDefault();\n  setLoadingSave(true);\n  // Create Track name\n  const trackName = trackForm.name;\n  // Create New file\n  const newAudioFile = new File(audioBuffer, trackName, {\n    type: \"audio/mp3\",\n    lastModified: Date.now(),\n  });\n\n  var newFormData = new FormData();\n  newFormData.append(\"userId\", meData.me.id);\n  newFormData.append(\"users-audio\", newAudioFile);\n  newFormData.append(\"projectId\", currentProject);\n\n  const response = await createTrack({\n    variables: {\n      name: trackName,\n      projectId: currentProject\n  }, update : (cache , { data: { createTrack }}) => {\n      const cacheTracks: any = cache.readQuery({\n        query: GET_TRACKS,\n        variables : {\n            projectId: currentProject\n          },\n      });\n      if(cacheTracks.tracks !== null) {\n        let modifyCache = [...cacheTracks.tracks, createTrack]\n        cache.writeQuery({\n          query: GET_TRACKS,\n          variables : {\n              projectId: currentProject\n            },\n            data: {\n              tracks : modifyCache\n            }\n        })\n      }\n  }})\n\n  try {\n    if(response.data.createTrack) {\n      newFormData.append(\"trackId\", response.data.createTrack.id);\n      axios({\n        method: \"post\",\n        url: 'http://localhost:4000/upload',\n        data: newFormData,\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n      })\n        .then((_res: any) => {\n          //handle success\n          setLoadingSave(false);\n          setTrackForm({ name: \"\"});\n          setForm(false);\n        })\n        .catch(async (res: any) => {\n          //handle error\n          console.log(res);\n          // If there is an error sending the file to S3\n          // Remove the correlated track data with GraphQL\n          await deleteTrack({\n            variables: {\n              projectId: currentProject,\n              trackId: response.data.createTrack.id\n            },\n            update: (cache, { data: deleteTrack }) => {\n              cache.writeQuery({\n               query: GET_TRACKS, \n                variables : {\n                  projectId : currentProject\n                }, \n                data: {\n                  tracks : deleteTrack\n                }\n              })\n            }\n          })\n        });\n    }\n  } catch(err) {\n    console.log(err)\n  }\n}\n  return (\n    <Fragment>\n          <button onClick={() => startRecording()} className=\"create-btns\" id=\"record\">\n          { recording ? <img src=\"/assets/icons/workspace/recording.svg\" alt=\"Recording\"/>:    \n          <img src=\"/assets/icons/workspace/record.svg\" alt=\"Record\"/> }\n        </button>\n      {  initForm ===  true &&\n        <div className=\"track-popup\">\n          <form onSubmit={(e) => onSubmit(e)}>\n            <span>\n              <label htmlFor=\"trackName\">Name your track</label>\n              <input type=\"text\" name=\"name\" id=\"trackName\" value={trackForm.name} placeholder=\"Enter a track name.\" onChange={(e) => onChange(e)}/>\n            </span>\n            <input type=\"submit\" value=\"Save Track\"/>\n          </form>\n        </div>\n      }\n      {loadingSave ? <div className=\"loading-save\">Loading...</div> : null }\n      </Fragment>\n  )\n}\n\nexport default connector(Recording);","import React, {useState} from 'react'\n// GraphQL\nimport { useMutation, useQuery } from \"@apollo/client\"\nimport { GET_TRACKS, CURRENT_PROJECT } from \"../../../graphql/queries\";\nimport { ASSIGN_MAIN_TRACK_TO_PROJECT } from \"../../../graphql/mutations\"\n// Redux\nimport { connect, ConnectedProps } from \"react-redux\";\n// Components\n// import Recording from \"./Recording\";\nimport DeleteWSItem from \"../DeleteWSItem\";\n\ninterface ComponentProps {\n  playbar: {\n    data : object\n  }\n  project: {\n    currentProject: string\n  }\n\n  workspace: {\n    tracks: {\n      delete: boolean\n    }\n   }\n}\n\nconst mapState = (state: ComponentProps) => ({\n  data: state.playbar.data,\n  currentProject: state.project.currentProject,\n  tracks: state.workspace.tracks\n})\n\nconst mapDispatch = {\n  assignTrack: (data: any) => ({type: \"ASSIGN_TRACK\", payload: data }),\n  initTrackDeletion: (payload: boolean) => ({ type: \"DELETE_TRACK\", payload: payload })\n}\nconst connector = connect(mapState, mapDispatch);\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux\n\nconst Tracks  = ({tracks, currentProject, assignTrack, initTrackDeletion} : Props) => {\n  const [currentTrack ,setCurrentTrack] = useState(\"\");\n  const { data, loading } = useQuery(GET_TRACKS, {\n    variables : {\n      projectId: currentProject\n    }\n  });\n  const { data: projectData, loading: projectLoading } = useQuery(CURRENT_PROJECT,\n     { variables: {\n      projectId: currentProject\n     }})\n\n  const [assignTrackToProject] = useMutation(ASSIGN_MAIN_TRACK_TO_PROJECT);\n\n  const sendAudioData = (data: any) => {\n    assignTrack(data);\n  }\n\n  const deleteTrackPanel = (id: string) => {\n    setCurrentTrack(id);\n    initTrackDeletion(true);\n  }\n\n  const favouriteTrack = (id: string ) => {\n    assignTrackToProject({ variables : {\n      projectId: currentProject,\n      trackId: id\n    }, update: (cache , { data: {assignTrackToProject} }) => {\n        cache.writeQuery({\n          query : CURRENT_PROJECT, \n          variables : {\n            projectId: currentProject\n        }, \n        data: {\n          currentProject : assignTrackToProject\n        }})\n    }})\n  }\n\n  return (\n    <div className=\"track-list-container\">\n    <div className=\"track-list-header\">\n      <p>Track Name</p>\n      <br />\n      <p>Options</p>\n    </div>\n    <div className=\"track-list-scroll\">\n      {\n        !loading && data && data.tracks.length !== 0 ? data.tracks.map((track: any) =>\n        <li key={track.id} className=\"track-container\">\n        <button className=\"play-audio\" onClick={() => sendAudioData(track)}>  </button>\n          <div className=\"track-details\">\n            <p className=\"track-name\">{track.name}</p>\n            <p className=\"track-date\">{track.created}</p>\n          </div>\n          <div className=\"track-options\">\n            <button className=\"track-favourite\" onClick={() => favouriteTrack(track.id)}>\n            {!projectLoading && projectData && projectData.currentProject.mainTrack === track.id ?  <img src=\"/assets/icons/workspace/favourited.svg\" alt=\"The favourite track\"/> :  <img src=\"/assets/icons/workspace/favourite.svg\" alt=\"Favourite the track\"/> }\n             \n            </button>\n            <button className=\"track-delete\" onClick={() => deleteTrackPanel(track.id)}>\n              <img src=\"/assets/icons/workspace/delete.svg\" alt=\"Delete the track\"/>\n            </button>\n          </div>\n          {tracks.delete && currentTrack === track.id && \n            <DeleteWSItem wsType=\"track\" itemId={track.id}/>\n          }\n      </li> \n        ): \n        <li className=\"track-container\">\n          <p className=\"no-tracks-p\">No tracks have been recorded within this project</p>\n        </li> \n      }  \n    </div> \n    {/* <Recording /> */}\n  </div>\n  )\n}\n\nexport default connector(Tracks);","import React,  { useState, useEffect } from 'react'\nimport { v4 as uuid } from \"uuid\";\n\n// GraphQL\nimport { useQuery } from \"@apollo/client\";\nimport { GET_TABS } from \"../../../graphql/queries\";\n// Redux\nimport {connect, ConnectedProps } from \"react-redux\";\n\ninterface ComponentProps {\n  project: {\n    currentProject: string\n  }\n}\n\nconst mapState = (state : ComponentProps) => ({\n  currentProject: state.project.currentProject,\n})\n\nconst connector = connect(mapState);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux\n\n\nconst TabsViewOnly = ({currentProject}: Props) => {\n  const { data, loading } = useQuery(GET_TABS, {\n    variables: {\n      projectId: currentProject\n    }\n  });\n\n  return (\n    <div className=\"tabs-container\">\n      <div className=\"lyric-tab-header\">\n          <h5>Tabs</h5>\n        </div>\n        <div className=\"lyric-tab-scroll-container\">\n          { !loading && data && data.tabs && data.tabs.length !== 0 ? data.tabs.map((tab :any) => \n             <li key={tab.id} className=\"tab-container\">\n             <div className=\"lyric-tab-top\">\n               <p>{tab.description}</p>\n             </div>\n             <div className=\"tab-grid\">\n               <div className=\"grid-lines\">\n                  <div className=\"line\"></div>\n                  <div className=\"line\"></div>\n                  <div className=\"line\"></div>\n                  <div className=\"line\"></div>\n                  <div className=\"line\"></div>\n                  <div className=\"line\"></div>\n               </div>\n                {  tab.tab.map((item: any) => \n                 <span key={uuid()}>\n                    <p>{ item === -1 ? \"\" : item}</p>\n                 </span> \n                )}\n             </div>\n         </li> ) : \n         <li className=\"default-workspace\">\n           <p>There are no tabs</p>\n          </li>\n         }\n    </div>\n    </div>\n  )\n}\n\nexport default connector(TabsViewOnly);\n","import React, { useState } from 'react'\n// GraphQL\nimport { useQuery } from \"@apollo/client\";\nimport { GET_LYRICS } from \"../../../graphql/queries\";\n// Redux\nimport { connect , ConnectedProps } from \"react-redux\";\n\ninterface ComponentProps {\n  project: {\n    currentProject: string\n  }\n}\n\nconst mapState = (state : ComponentProps) => ({\n  currentProject: state.project.currentProject\n})\n\nconst connector = connect(mapState);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux\n\nconst LyricsViewOnly = ({ currentProject}: Props)  => {\n  const { data, loading } = useQuery(GET_LYRICS , {\n    variables: {\n      projectId: currentProject\n    }\n  });\n\n  return (\n    <div className=\"lyrics-container\">\n    <div className=\"lyric-tab-header\">\n      <h5>Lyrics</h5>\n    </div>\n    <div className=\"lyric-tab-scroll-container\">\n      { !loading && data && data.lyrics && data.lyrics.length !== 0 ? data.lyrics.map((lyric:any)=> \n        <div className=\"lyric-tab-container\" key={lyric.id}> \n          <div className=\"lyric-tab-top\">\n            <p>{lyric.option}</p>\n          </div>\n          <div className=\"lyric-content\">\n            <p>{lyric.lyric}</p>\n          </div>\n       </div>\n      )\n       : <li className=\"default-workspace\">\n       <p>There are no lyrics.</p>\n      </li>\n    }\n      </div>\n  </div>\n  )\n}\n\nexport default connector(LyricsViewOnly);\n","import React, {useState, useEffect} from 'react'\n// GraphQL\nimport { useMutation } from \"@apollo/client\";\n// import {  } from \"../../../graphql/mutations\";\n// Redux\nimport { connect, ConnectedProps } from \"react-redux\";\n\nvar ab2str = require('arraybuffer-to-string')\nvar str2ab = require('string-to-arraybuffer')\n\nconst MicRecorder = require('mic-recorder-to-mp3');\n\ninterface ComponentProps {\n  playbar: {\n    data : object\n  }\n}\n\nconst mapState = (state: ComponentProps) => ({\n  data: state.playbar.data\n})\n\nconst mapDispatch = {\n  assignTrack: (data: any) => ({type: \"ASSIGN_TRACK\", payload: data })\n}\n\nconst connector = connect(mapState, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux\n\nvar counter: number;\n// import RecorderComponent from \"../RecorderComponent\";\nconst TracksViewOnly  = ({assignTrack} : Props) => {\n  const [trackForm, setTrackForm] = useState({\n    name: \"\"\n  })\n  const [initForm, setForm] = useState(false);\n  const [audioBuffer, storeBuffer] = useState([]);\n  const [tracks, setTracks] = useState([{\n    name: \"\",\n    url : \"\",\n    created: \"\",\n  }])\n  // const [src, setSrc] = useState(\"\");\n  const [isActive, setIsActive] = useState(false);\n  const [minutes, setMinutes] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n\n  useEffect(() => {\n    let interval: any = null;\n    if (isActive) {\n      interval = setInterval(() => {\n        if(seconds === 60) {\n          setMinutes(minutes => minutes + 1);\n          setSeconds(0);\n        }else {\n          setSeconds(seconds => seconds + 1);\n        }\n      }, 1000);\n    } else if (!isActive && seconds !== 0) {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [isActive,seconds])\n\n\nconst sendAudioData = (data: any) => {\n  console.log(data);\n  assignTrack(data);\n}\n\n  return (\n    <div className=\"track-list-container\">\n    <div className=\"track-list-header\">\n      <p>Track Name</p>\n      <p>Track Length</p>\n      <p>Options</p>\n    </div>\n    <div className=\"track-list-scroll\">\n      <div className=\"track-container\">\n        <div className=\"track-details\">\n          <p className=\"track-name\">Track One</p>\n          <p className=\"track-date\">Feb 1, 2019 at 4:23 PM</p>\n        </div>\n      </div>\n      { tracks && tracks.length > 1 ? tracks.map((track) => \n      { return track.url !== \"\" &&  (\n      <li key={track.url}className=\"track-container\">\n      <button className=\"play-audio\" onClick={() => sendAudioData(track)}>  </button>\n        <div className=\"track-details\">\n          <p className=\"track-name\">{track.name}</p>\n          <p className=\"track-date\">{track.created}</p>\n        </div>\n    </li> )\n    }\n      )  : null }\n    </div> \n  </div>\n  )\n}\n\nexport default connector(TracksViewOnly);","import React, { useEffect, useState, Fragment } from 'react'\nimport PropTypes from \"prop-types\";\nimport { useLocation } from \"react-router-dom\";\n// GraphQL\nimport { useQuery } from \"@apollo/client\";\nimport { CURRENT_PROJECT, MY_ACCOUNT } from \"../../graphql/queries\";\n// Redux\nimport { connect, ConnectedProps } from \"react-redux\";\n// Components\nimport Tabs from \"./tabs/Tabs\";\nimport Lyrics from \"./lyrics/Lyrics\";\nimport Tracks from './tracks/Tracks';\nimport Recording from \"./tracks/Recording\";\n// ViewOnly\nimport TabsViewOnly from \"./tabs/TabsViewOnly\";\nimport LyricsViewOnly from \"./lyrics/LyricsViewOnly\";\nimport TracksViewOnly from \"./tracks/TracksViewOnly\";\n\ninterface ComponentProps {\n  application : {\n    location: string\n  }\n}\n\nconst mapState = (state: ComponentProps) => ({\n  location: state.application.location\n})\n\nconst mapDispatch = {\n  setAppLocation: (location: string) => ({type: \"SET_APP_LOCATION\", payload: location}),\n  storeProject: (projectId: string) => ({type: \"STORE_PROJECT\", payload: projectId}),\n  intialiseProject: (bool: boolean ) => ({type: \"INIT_PROJECT\", payload: bool }),\n  initTabCreation : (bool: boolean) => ({type: \"INIT_AND_EXIT_TAB_CREATION\", payload: bool}),\n  initLyricCreation : (bool: boolean) => ({type: \"INIT_AND_EXIT_LYRIC_CREATION\", payload: bool}),\n}\n\nconst connector = connect(mapState, mapDispatch);\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux\n\nconst Workspace = ({setAppLocation, storeProject, intialiseProject, initTabCreation, initLyricCreation} : Props) => {\n  const [component , setComponent] = useState([\n    { name: \"tracks\",\n      col: 1},\n    {name : \"lyrics\",\n    col: 2},\n    {name: \"tabs\", \n    col: 3}\n ])\n  const [isContributor, setIsContributor] = useState(false);\n  const location = useLocation();\n  const params = location.pathname.split('/');\n  const projectId = params[2];\n  const { data: meData, loading: meLoading } = useQuery(MY_ACCOUNT);\n\n  const { data , loading} = useQuery(CURRENT_PROJECT, {\n    variables : {\n      projectId : projectId\n    }\n  });\n\n  useEffect(() => {\n    if(!loading && !meLoading && meData && meData.me) {\n      for(let x = 0; x < data.currentProject.contributors.length; x++) {\n        if(meData.me.id === data.currentProject.contributors[x]) {\n          setIsContributor(true);\n        }\n      }\n      console.log(isContributor);\n    }\n\n    storeProject(projectId);\n    setAppLocation(\"workspace\");\n    intialiseProject(false);\n    return () => {\n      setAppLocation(\"\");\n    }\n  }, [data, projectId, loading, meLoading, meData, isContributor, intialiseProject, setAppLocation, storeProject])\n  \n  const changeComponent = (cType: string) => {\n    type objectType = {\n      name : string,\n      col : number,\n    }\n    let typeObject : Array<objectType>;\n    switch(cType) {\n      case \"tracks\" :\n        typeObject = [\n          {\n            name : \"tracks\",\n            col : 1,\n          },\n          {\n            name : \"lyrics\",\n            col : component[1].col + 1\n          },\n          {\n            name : \"tabs\",\n            col : component[2].col + 1\n          },\n        ];\n        break;\n      case \"lyrics\" :\n        typeObject = [\n          {\n            name : \"tracks\",\n            col : component[0].col + 1\n          },\n          {\n            name : \"lyrics\",\n            col : 1\n          },\n          {\n            name : \"tabs\",\n            col : component[2].col + 1\n          },\n        ];\n      break;\n      case \"tabs\" :\n        typeObject = [\n          {\n            name : \"tracks\",\n            col : component[0].col + 1\n          },\n          {\n            name : \"lyrics\",\n            col : component[1].col + 1\n          },\n          {\n            name : \"tabs\",\n            col : 1,\n          },\n        ];\n        break;\n      default :\n      typeObject = [\n        {\n          name : \"tracks\",\n          col : 1,\n        },\n        {\n          name : \"lyrics\",\n          col : 2,\n        },\n        {\n          name : \"tabs\",\n          col : 3,\n        },\n      ];\n    }\n    setComponent(typeObject)\n  }\n\n  return (\n    <div className=\"workspace-container\">\n        { isContributor ? \n          <Fragment>\n            <span className={`col-${component[0].col}`} >\n              <Tracks />\n            </span>\n            <span className={`col-${component[1].col}`}  >\n              <Lyrics />\n            </span>\n            <span className={`col-${component[2].col}`} >\n              <Tabs />\n            </span>\n            <div className=\"recorder-container\">\n              <span className=\"create-btn-container\">\n              <Recording />\n              <button className=\"create-btns\" id=\"create-lyrcis\" onClick={() => initLyricCreation(true)}>\n                <img src=\"/assets/icons/workspace/createLyric.svg\" alt=\"Create Lyric\"/>\n              </button>\n              <button className=\"create-btns\" \n                  id=\"create-tabs\"\n                  onClick={() =>   initTabCreation(true)}>\n                  <img src=\"/assets/icons/workspace/createTab.svg\" alt=\"Create Tab\"/>\n              </button>      \n              </span>\n              <div className=\"repsonsive-ws-menu\">\n                <button \n                  onClick={() => changeComponent(\"tracks\")} \n                  className={`active-${component[0].col}`}\n                  >Tracks</button>\n                <button \n                  onClick={() => changeComponent(\"lyrics\")} \n                  className={`active-${component[1].col}`}\n                  disabled={component[1].col === 1}\n                 >Lyrics</button>\n                <button \n                  onClick={() => changeComponent(\"tabs\")} \n                  className={`active-${component[2].col}`}\n                  disabled={component[2].col === 1}\n                  >Tabs</button>\n              </div>\n            </div>\n          </Fragment>\n          :  <Fragment>\n          <TracksViewOnly></TracksViewOnly>\n          <LyricsViewOnly></LyricsViewOnly>\n          <TabsViewOnly></TabsViewOnly>\n        </Fragment>}\n    </div>\n  )\n}\n\nWorkspace.propTypes = {\n  setAppLocation : PropTypes.func.isRequired,\n}\n\nexport default connector(Workspace);","import React, { Fragment, useState, useRef } from \"react\";\n// GrahphQL\nimport { useQuery } from \"@apollo/client\";\nimport { SEARCH_MATES } from \"../../../graphql/queries\"\n// Components\nimport Mate from \"../mate/Mate\";\n\nconst SearchMates: React.FC = () => {\n  const [searchData, setSearchData] = useState({ search: \"\" })\n  const { data, loading } = useQuery(SEARCH_MATES, {\n  variables : {\n    name: searchData.search.toLowerCase()\n  }\n  });\n  const searchInput = useRef<HTMLInputElement>(null); \n  \n  const onChange = (e:React.ChangeEvent<HTMLInputElement>) => {\n    setSearchData({...searchData , search: e.target.value })\n  }\n\n  const focusInput = () => {\n    if(searchInput && searchInput.current) {\n      searchInput.current.focus()\n    }\n  }\n\n  return (\n    <Fragment>\n      <div className=\"mates-header\">\n      <form>\n      <span className=\"input-wrapper\">\n      { searchData.search !== \"\"  ?\n          <button className=\"clear-btn\" onClick={() => setSearchData({search: \"\"})}>\n            <img src=\"/assets/icons/menu/clear.svg\" alt=\"Clear search\"/>\n          </button>\n          :\n          <button className=\"focus-btn\" onClick={() => focusInput()}>\n          <img src=\"/assets/icons/menu/search-blue.svg\" alt=\"Search\"/>\n        </button>\n        }\n        <input \n          type=\"text\"\n          id=\"search\"\n          name=\"search\"\n          value={searchData.search}\n          placeholder=\"Search for mates\"\n          onChange={(e) => onChange(e)}\n          />\n       </span>\n      </form>\n    </div>\n    { searchData.search !== \"\" && \n    <ul className=\"mates-list\" id=\"search-mates-list\">\n        { !loading && data && data.searchMates.length !== 0 ? data.searchMates.map((mate: any) => \n            <Mate mate={mate} />    \n        ) : \n        <li className=\"no-posts\">\n          <p>You don't have any mates with this name.</p>\n        </li> }\n      </ul>\n           }\n    </Fragment>\n  )\n}\n\nexport default SearchMates;","import React from 'react'\n// GraphQL\nimport { useQuery } from \"@apollo/client\";\nimport { MY_ACCOUNT } from \"../../graphql/queries\";\n// Components\nimport Mates from \"../../components/mates/lists/Mates\"\nimport SearchMates from \"../../components/mates/lists/SearchMates\";\n\nconst MyMates: React.FC = () => {\n    const { data, loading } = useQuery(MY_ACCOUNT);\n    if(loading) {\n        return <div>loading...</div>\n    }\n    return (\n        <div className=\"component-container\">\n            <SearchMates/>\n            <ul className=\"mates-list\">\n                <Mates userId={!loading && data && data.me && data.me.id} />\n            </ul>\n        </div>    \n            );\n}\n\nexport default MyMates;","import React, { useState } from \"react\"\n\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { MY_ACCOUNT } from \"../../../graphql/queries\";\nimport {UPDATE_NAMES_AND_DOB } from \"../../../graphql/mutations\";\n\n// Redux\nimport { connect, ConnectedProps } from \"react-redux\";\n\ninterface ComponentProps {  \n  }\n  \n  const mapState = (state: ComponentProps) => ({})\n  \n  const mapDispatch = {\n    editNames: (payload: boolean) => ({type: \"EDIT_NAME\", payload: payload}),\n  }\n  \n  const connector = connect(mapState,mapDispatch);\n  \n  type PropsFromRedux = ConnectedProps<typeof connector>;\n  type Props = PropsFromRedux\n\nconst NamesDob = ({editNames}: Props) => {\n  const [formErrors , setErrors] = useState({ firstName: \"\", lastName: \"\", dob:\"\"})\n  const [dobErrors, setDobErrors] = useState({\n    day: \"\",\n    month: \"\",\n    year: \"\",\n    all: \"\"\n})\n  const { data } = useQuery(MY_ACCOUNT);\n  const [UpdateNamesAndDob] = useMutation(UPDATE_NAMES_AND_DOB);    \n\n  \n const dobArray = data.me.dob.split(\" \");\n  var day = dobArray[0];\n  var month = dobArray[1];\n  var year = dobArray[2];\n\n\n  const [formData, setFormData] = useState({\n    firstName: data.me.firstName,\n    lastName :  data.me.lastName,\n    day : day,\n    month: month,\n    year: year\n  });\n\n\n  const onChange = (e:any) => {\n    setFormData({...formData, [e.target.name] : e.target.value})\n  }\n\n  const onSubmit = (e:React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n\n    var errors = {\n      firstName: \"\",\n      lastName: \"\",\n      dob: \"\"\n    }\n\n    if(formData.firstName === \"\") {\n      errors.firstName = \"First name can't be left empty\"\n    }\n    if(formData.lastName === \"\") {\n      errors.lastName = \"Last name can't be left empty\"\n    }\n    if(formData.day === \"\" || formData.month === \"\" || formData.year === \"\") {\n      errors.dob = \"Date of birth can't be left empty\"\n    }\n\n    if(errors.firstName === \"\" && errors.lastName === \"\" &&  errors.dob === \"\") {\n      const dob = formData.day + \" \" + formData.month + \" \" + formData.year;\n  \n      UpdateNamesAndDob({\n        variables : {\n          id: data.me.id,\n          firstName: formData.firstName,\n          lastName: formData.lastName,\n          dob\n        }\n      })\n      editNames(false);\n    } else { \n      setErrors(errors);\n    }\n  }\n\n  return (\n    <form onSubmit={(e) => onSubmit(e)} className=\"edit-form\">\n    <div className=\"name-email-wrapper\">\n        <span>\n            <label htmlFor=\"firstName\" className=\"label\">First Name</label>\n            <input \n              type=\"text\" \n              name=\"firstName\"\n              value={formData.firstName}\n              onChange={(e) => onChange(e)} />\n              { formErrors.firstName && <p className=\"input-error\">{formErrors.firstName}</p> }\n        </span>\n        <span>\n          <label htmlFor=\"lastName\"className=\"label\">Last Name</label>\n          <input \n              type=\"text\" \n              name=\"lastName\"\n              value={formData.lastName}\n              onChange={(e) => onChange(e)} />\n              { formErrors.lastName && <p className=\"input-error\">{formErrors.lastName}</p> }\n        </span>\n        <span className=\"email-container\">\n            <p className=\"label\">Email</p>\n            <p className=\"profile-info\">{data.me.email}</p> \n        </span>\n    </div>\n    <span>\n                        <span className=\"dob-wrapper\">\n                            <span className=\"dob-inputs day-wrapper\">\n                                <label htmlFor=\"day\">Day</label>\n                                <input \n                                    type=\"text\"\n                                    name=\"day\" \n                                    value={formData.day} \n                                    className=\"dob-input\"\n                                    id=\"day\"\n                                    placeholder=\"DD\"\n                                    maxLength={2}\n                                    style={  formErrors.dob ? {border: \"2px solid #F84061\"} : {border: \"none\"} }\n                                    onChange={e => onChange(e)}/>\n                            </span>\n                            <span className=\"dob-inputs month-wrapper\">\n                                <label htmlFor=\"month-edit\">Month</label>\n                                <select \n                                    name=\"month\" \n                                    id=\"month-edit\" \n                                    required\n                                    aria-invalid=\"true\"\n                                    style={  formErrors.dob || dobErrors.month !== \"\" ? {border: \"2px solid #F84061\"} : {border: \"none\"} }\n                                    onChange={e => onChange(e)} defaultValue={formData.month}>\n                                    <option selected disabled value=\"month\"> Month</option>\n                                  \n                                    <option value=\"January\">January</option>\n                                    <option value=\"February\">February</option>\n                                    <option value=\"March\">March</option>\n                                    <option value=\"April\">April</option>\n                                    <option value=\"May\">May</option>\n                                    <option value=\"June\">June</option>\n                                    <option value=\"July\">July</option>\n                                    <option value=\"August\">August</option>\n                                    <option value=\"September\">September</option>\n                                    <option value=\"October\">October</option>\n                                    <option value=\"November\">November</option>\n                                    <option value=\"December\">December</option>\n                                </select>\n                            </span>\n                                <span className=\"dob-inputs year-wrapper\">\n                                <label htmlFor=\"year\">Year</label>\n                                <input \n                                    type=\"text\" \n                                    name=\"year\" \n                                    value={formData.year} \n                                    className=\"dob-input\"\n                                    id=\"year\"\n                                    placeholder=\"YYYY\"\n                                    maxLength={4}\n                                    style={formErrors.dob ? {border: \"2px solid #F84061\"} : {border: \"none\"} }\n                                    onChange={e => onChange(e)}/>\n                            </span>\n                        </span>\n                        { formErrors.dob && <p className=\"input-error\">{formErrors.dob}</p> }\n                    </span>\n        <input type=\"submit\" value=\"Submit\"/>\n    <button type=\"button\" className=\"edit-profile\" onClick={() => editNames(false)}>\n            <img src=\"/assets/icons/plus/cross-red.svg\" alt=\"close\"/>\n    </button>\n    </form>   \n  )\n}\n\nexport default connector(NamesDob);","import React, { useState } from \"react\"\n\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { MY_ACCOUNT } from \"../../../graphql/queries\";\nimport { UPDATE_BIO } from \"../../../graphql/mutations\";\n\n// Redux\nimport { connect, ConnectedProps } from \"react-redux\";\n\ninterface ComponentProps {  \n  }\n  \n  const mapState = (state: ComponentProps) => ({})\n  \n  const mapDispatch = {\n    editBio: (payload: boolean) => ({type: \"EDIT_BIO\", payload: payload}),\n  }\n  \n  const connector = connect(mapState,mapDispatch);\n  \n  type PropsFromRedux = ConnectedProps<typeof connector>;\n  type Props = PropsFromRedux\n\nconst Bio = ({editBio}: Props) => {\n  const { data } = useQuery(MY_ACCOUNT);\n  const [formData, setFormData] = useState({  bio: data.me.bio,\n  });\n  const [updateBio] = useMutation(UPDATE_BIO);\n\n  const onChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setFormData({...formData, [e.target.name] : e.target.value})\n  }\n\n  const onSubmit = (e:React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n    updateBio({\n      variables : {\n        bio: formData.bio  \n      }\n    })\n    editBio(false);\n    // if(formData.bio === \"\") {\n    //   updateBio({\n    //     variables : {\n    //       bio: \"\" \n    //     }\n    //   })\n    //   editBio(false);\n    // } else { \n    //   updateBio({\n    //     variables : {\n    //       bio: formData.bio  \n    //     }\n    //   })\n    //   editBio(false);\n    // }\n  }\n\n  return (\n    <form onSubmit={(e) => onSubmit(e)} className=\"edit-form\">\n      <span className=\"bio-wrapper\">\n        <label htmlFor=\"bio\" className=\"label\">Bio</label>\n        <textarea \n        name=\"bio\"\n        value={formData.bio}\n        onChange={(e) => onChange(e)} />\n      </span>\n        <input type=\"submit\" value=\"Submit\"/>\n      <button type=\"button\"  className=\"edit-profile\" onClick={() => editBio(false)}>\n        <img src=\"/assets/icons/plus/cross-red.svg\" alt=\"close\"/>\n      </button>\n    </form>   \n  )\n}\n\nexport default connector(Bio);","import React, { useState } from \"react\"\n\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { MY_ACCOUNT } from \"../../../graphql/queries\";\nimport { UPDATE_INSTRUMENTS } from \"../../../graphql/mutations\";\n\n// Redux\nimport { connect, ConnectedProps } from \"react-redux\";\n\ninterface ComponentProps {  \n  }\n  \n  const mapState = (state: ComponentProps) => ({})\n  \n  const mapDispatch = {\n    editInstrument: (payload: boolean) => ({type: \"EDIT_INSTRUMENT\", payload: payload}),\n  }\n  \n  const connector = connect(mapState,mapDispatch);\n  \n  type PropsFromRedux = ConnectedProps<typeof connector>;\n  type Props = PropsFromRedux\n\nconst Instruments = ({editInstrument}: Props) => {\n  const { data } = useQuery(MY_ACCOUNT);\n  const [formData, setFormData] = useState({  instruments: data.me.instruments,\n  });\n  const [UpdateInstruments] = useMutation(UPDATE_INSTRUMENTS);\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormData({...formData, [e.target.name] : e.target.value})\n  }\n\n  const onSubmit = (e:React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n\n    if(formData.instruments === \"\") {\n      console.log(formData)\n      UpdateInstruments({\n        variables : {\n          id: data.me.id,\n          instruments: \" \",\n        }\n      })\n      editInstrument(false);\n    } else { \n      console.log(formData)\n      UpdateInstruments({\n        variables : {\n          id: data.me.id,\n          instruments: formData.instruments ,\n        }\n      })\n      editInstrument(false);\n    }\n  }\n\n  return (\n    <form onSubmit={(e) => onSubmit(e)} className=\"edit-form\">\n      <span className=\"instruments-wrapper\">\n        <label htmlFor=\"instruments\" className=\"label\">Instruments</label>\n        <input\n        type=\"text\" \n        name=\"instruments\"\n        value={formData.instruments}\n        onChange={(e) => onChange(e)} />\n      </span>\n        <input type=\"submit\" value=\"Submit\"/>\n      <button type=\"button\" className=\"edit-profile\" onClick={() => editInstrument(false)}>\n        <img src=\"/assets/icons/plus/cross-red.svg\" alt=\"close\"/>\n      </button>\n    </form>   \n  )\n}\n\nexport default connector(Instruments);","import React, { Fragment } from 'react'\n// GraphQL\nimport { useQuery } from \"@apollo/client\";\nimport { MY_POSTS } from \"../../../graphql/queries\";\n// Redux\nimport { connect, ConnectedProps } from \"react-redux\";\n// Components \nimport MyPost from \"../../post/posts/MyPost\";\nimport MySharedProject from \"../../post/sharedProject/MySharedProject\";\n\nconst mapDispatch = {\n  closePostPanel : (payload: boolean) => ({ type: \"CLOSE_POST_PANEL\", payload: payload }),\n}\n\nconst connector = connect(null, mapDispatch);\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux;\n\nconst Posts = ({ closePostPanel }:Props) => {\n  const { data, loading } = useQuery(MY_POSTS);\n  \n  if(loading) {\n    return <div>Loading...</div>\n  }\n  const togglePostPanel = () => {\n    closePostPanel(true)\n  }\n    return (\n     <Fragment>\n      {!loading && data && data.myPosts.length !== 0  ?\n      data.myPosts.map((post: any) => \n        <li key={post.post.id}>\n      { post.project !== null ?\n          <MySharedProject post={post} />\n                   :\n         <MyPost post={post} />\n      }\n          </li> ) : \n            <div className=\"no-posts\">\n            <p>You have no posts yet.</p>\n              <button onClick={() => togglePostPanel()}>  Why not create a new post? \n              </button>\n          </div> }\n    </Fragment>\n    );\n}\n\nexport default connector(Posts);","import React, { Fragment } from 'react'\n// GraphQL\nimport { useMutation } from \"@apollo/client\";\nimport { MY_PROJECTS, MY_POSTS, FEED_POSTS } from \"../../../graphql/queries\";\nimport { SHARE_PROJECT } from \"../../../graphql/mutations\"\n// Redux\nimport { connect, ConnectedProps } from \"react-redux\";\ninterface ComponentProps {\n  project : {\n    deleteProject: boolean\n    deleteId: string\n    options: string\n  }\n}\n\nconst mapState = (state: ComponentProps) => ({\n  options: state.project.options,\n\n})\ntype resultData =  {\n  toggle: boolean\n  type: string\n  selectedId: string\n}\nconst mapDispatch = {\n  toggleOptions: (projectId: string) => ({type: \"PROJECT_OPTIONS\", payload: projectId}), \n  setSelectedProject: (id: string) => ({ type: \"SELECTED_PROJECT_ID\", payload: id}),\n  toggleProjectResult: (payload: resultData) => ({type: \"PROJECT_RESULT\", payload}) \n}\n\nconst connector = connect(mapState, mapDispatch);\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux &  {\n  projectId: string\n  location : string\n};\n\nconst Share = ({projectId, location, options, toggleOptions, toggleProjectResult, setSelectedProject } : Props) => {\n  const [shareProject] = useMutation(SHARE_PROJECT);\n  const shareProjectFunction = async () => {\n   const response = await shareProject({\n      variables: {\n        projectId\n      },\n      update: (cache, { data: { shareProject } }) => {\n        console.log(shareProject)\n        // Read the MY_PROJECTS query cache\n       const projectCache: any = cache.readQuery({query: MY_PROJECTS})\n       if(projectCache !== null) {\n       // Assign and iterate the cache so we can modify the Array\n       let modifyCache = [...projectCache.myProjects];\n       let index: number;\n       // Loop the project cache array\n       for(let x = 0; x < modifyCache.length; x++) {\n         // Find the post that matches our newly shared post with their ids\n        if(shareProject.post.id === modifyCache[x]) {\n          // Get the index of the matching project\n          index = modifyCache.indexOf(modifyCache[x])\n        }\n       }\n        // Remove the matching project by its index and then replace our new updated post\n        modifyCache.splice(index!, 1, shareProject.post)\n        cache.writeQuery({ \n          query : MY_PROJECTS,\n          data:  {\n           myProjects: modifyCache\n         }\n       })\n      }\n       // Getting profile post cache\n       const postCache: any = cache.readQuery({query: MY_POSTS})\n       // Iterate cache and add the shareProject\n       if(postCache !== null) {\n       let modifyPostCache = [...postCache.myPosts, shareProject ];\n       // Update cache\n        cache.writeQuery({ \n          query : MY_POSTS,\n          data:  {\n           myPosts: modifyPostCache\n         }\n       })\n      }\n        // Getting feed post cache\n       const feedCache: any = cache.readQuery({query: FEED_POSTS})\n       if(feedCache !== null) {\n        // Iterate cache and add the shareProject\n       let modifyFeedCache = [...feedCache.myFeed, shareProject ];\n        // Update cache\n        cache.writeQuery({ \n          query : FEED_POSTS,\n          data:  {\n            myFeed: modifyFeedCache\n         }\n       })\n      }\n\n      }\n    })\n    try {\n        toggleOptions(\"\")\n        console.log(response)\n        if(response.data.shareProject.success) {\n          // setSelectedProject(options)\n          const result = {\n            toggle: true,\n            type: \"share\",\n            selectedId: projectId\n          }\n          toggleProjectResult(result)\n  \n        }\n    } catch(err) {\n      console.log(err);\n    }\n  }\n  return ( \n      <Fragment>\n       { location === \"options\" &&  \n       <button className=\"share-btn\" onClick={() => shareProjectFunction()}>\n       Share\n       </button> }\n       { location === \"project\" &&\n        <button className=\"post-buttons responsive-share\" onClick={() => shareProjectFunction()}>\n            <img src=\"/assets/icons/post/share.svg\" alt=\"Share post\"/>\n         </button>\n        }\n      </Fragment>\n   )\n}\n\nexport default connector(Share);","import React from 'react'\nimport { withRouter } from \"react-router-dom\";\n// GraphQL\nimport { useQuery } from \"@apollo/client\";\nimport { MY_ACCOUNT, CURRENT_PROJECT } from \"../../../graphql/queries\";\n// Redux\nimport { connect, ConnectedProps } from \"react-redux\";\n// Components \nimport Share from \"../functions/Share\";\n\ninterface ComponentProps {\n  application : { \n    contributorsPanel: boolean\n  }\n  project : {\n    deleteProject: boolean\n    deleteId: string\n    options: string\n  }\n}\n\nconst mapState = (state: ComponentProps) => ({\n  deleteProject: state.project.deleteProject,\n  deleteId : state.project.deleteId,\n  options: state.project.options,\n  contributorsPanel: state.application.contributorsPanel\n})\ntype resultData =  {\n  toggle: boolean\n  type: string\n  selectedId: string\n}\n\nconst mapDispatch = {\n  activatePlaybar : (payload: boolean) => ({ type: \"OPEN_PLAYBAR\", payload: payload }),\n  assignTrack : (payload: object) => ({type: \"ASSIGN_TRACK\", payload: payload}),\n  setSelectedProject: (id: string) => ({ type: \"SELECTED_PROJECT_ID\", payload: id}),\n  toggleContributors : (payload: boolean) => ({type: \"TOGGLE__CONTRIBUTORS\", payload: payload}),\n  toggleOptions: (projectId: string) => ({type: \"PROJECT_OPTIONS\", payload: projectId}),\n  toggleProjectResult: (payload: resultData) => ({type: \"PROJECT_RESULT\", payload}) \n}\n\nconst connector = connect(mapState, mapDispatch);\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux &  {\n  history: any\n};\nconst Options = ({ options, toggleOptions, toggleProjectResult, setSelectedProject, toggleContributors} : Props) => {\n  const { data, loading } = useQuery(CURRENT_PROJECT, {\n    variables: {\n      projectId: options\n    }\n  });\n  const { data: meData, loading: meLoading } = useQuery(MY_ACCOUNT)\n\n  const setDeleteProject = () => {\n    setSelectedProject(options)\n    const resultData = {\n      toggle: true,\n      type: \"delete\",\n      selectedId: options\n    }\n    toggleProjectResult(resultData);\n    toggleOptions(\"\");\n  }\n\n  const removeAsContributor = () => {\n    const resultData = {\n      toggle: true,\n      type: \"remove\",\n      selectedId: options\n    }\n    toggleProjectResult(resultData);\n    toggleOptions(\"\");\n  }\n\n  const addContributorFunc = () => {\n    toggleContributors(true)\n    setSelectedProject(options)\n    toggleOptions(\"\");\n  }\n  return (\n    <div className=\"options-container\">\n        <div className=\"options\">\n          { !loading && data && data.currentProject && data.currentProject.postId === null &&\n            <Share projectId={data.currentProject.id} location=\"options\"/>\n          }\n          <button className=\"add-btn\" onClick={() => addContributorFunc()}>Edit Contributors</button>\n          { !meLoading && !loading && meData.me.id === data.currentProject.creatorId ?\n           <button className=\"delete-btn\" onClick={() => setDeleteProject()}>Delete</button>\n           :\n           <button className=\"delete-btn\" onClick={() => removeAsContributor()}>Remove as contributor</button>\n           }\n          <button onClick={() => toggleOptions(\"\")}>Cancel</button>\n        </div>  \n    </div>\n  )\n}\n\nexport default withRouter(connector(Options));","import React, { Fragment, useEffect } from 'react'\nimport { Link } from \"react-router-dom\"\n// GraphQL\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { CURRENT_PROJECT, MY_PROJECTS, MY_ACCOUNT, MY_POSTS, FEED_POSTS } from \"../../../graphql/queries\";\nimport { DELETE_PROJECT, REMOVE_CONTRIBUTOR } from \"../../../graphql/mutations\";\n// Redux\nimport { connect, ConnectedProps } from \"react-redux\";\ninterface ComponentProps {\n  project : {\n    deleteProject: boolean\n    options: string\n    result:  {\n      toggle: boolean\n      type: string\n      selectedId: string\n    }\n  }\n}\nconst mapState = (state: ComponentProps) => ({\n  deleteProject: state.project.deleteProject,\n  result: state.project.result\n})\ntype resultData =  {\n  toggle: boolean\n  type: string\n  selectedId: string\n}\n\nconst mapDispatch = {\n  setDeleteProjectPanel: (payload: boolean) => ({ type: \"SHOW_PROJECT_DELETE_PANEL\", payload: payload }),\n  toggleOptions: (projectId: string) => ({type: \"PROJECT_OPTIONS\", payload: projectId}),\n  toggleProjectResult: (payload: resultData) => ({type: \"PROJECT_RESULT\", payload}) \n}\n\nconst connector = connect(mapState, mapDispatch);\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux \n\nconst ResultComponent = ({ result, toggleProjectResult, toggleOptions} : Props) => {\n  const [deleteProject] = useMutation(DELETE_PROJECT);\n  const { data, loading} = useQuery(CURRENT_PROJECT, {\n    variables: {\n      projectId: result.selectedId\n    }\n  })\n  const { data: meData } = useQuery(MY_ACCOUNT);\n  const [removeContribtutor] = useMutation(REMOVE_CONTRIBUTOR);\n  useEffect(() => {\n    return () => {\n      const result = {\n        toggle: false,\n        type: \"\",\n        selectedId: \"\"\n      }\n      toggleProjectResult(result)\n    }\n  }, [toggleProjectResult])\n  const deletProjectById = async () => {\n    const id = result.selectedId;\n    deleteProject({\n        variables: { id }, \n        update: cache => {\n           // Assign varaibel with data from MY_PROJECTS query\n          const cacheMyData: any = cache.readQuery({ query: MY_PROJECTS });\n          // Check to see if there is a cache\n          if(cacheMyData !== null) {\n          // Removing the selected project by filtering it out of array\n          const updatedMyCache = cacheMyData.myProjects.filter(({id : deleteId}: any) => deleteId !== id);\n          cache.writeQuery({ \n            query: MY_PROJECTS, \n            data: {\n              myProjects: updatedMyCache\n            }\n          });\n        } \n        for(let x = 0; x < cacheMyData.myProjects.length; x++) {\n          if(cacheMyData.myProjects[x].id === id) {\n            if(cacheMyData.myProjects[x].postId !== \"\" ) {\n              const myPostsCache: any = cache.readQuery({ query: MY_POSTS });\n              const feedCache: any = cache.readQuery({ query: FEED_POSTS });\n              if(myPostsCache !== null) {\n                let updatedPostCache = myPostsCache.myPosts.filter(({postId : deleteId}: any) => deleteId !== cacheMyData.myProjects[x].postId)\n                cache.writeQuery({ \n                  query: MY_POSTS, \n                  data: {\n                    myPosts: updatedPostCache\n                }})\n              }\n              if(feedCache !== null) {\n                let updatedFeedCache = feedCache.myFeed.filter(({postId : deleteId}: any) => deleteId !== cacheMyData.myProjects[x].postId);\n                cache.writeQuery({ \n                  query: FEED_POSTS, \n                  data: {\n                    myFeed: updatedFeedCache\n                }})\n              }\n            }\n          }\n        }\n      }\n      }).then(() => {\n        // setSelectedProject(\"\")\n        const resultData = {\n          toggle: false,\n          type: \"\",\n          selectedId: \"\"\n        }\n        toggleProjectResult(resultData);\n      })\n      .catch(err => console.log(err) )\n    }\n\n    const removeAsContributor = async () => {\n      const projectId = result.selectedId;\n\n      await removeContribtutor({ \n        variables : {\n          userId: meData.me.id,\n          projectId\n      }, update : (cache) => {\n            // Get project cache\n            const projectCache: any = cache.readQuery({ query: MY_PROJECTS })\n            // Iterate cache and assign to new variable\n            let cacheArray = [...projectCache.myProjects]\n            // Loop through array\n            for(let x = 0; x < cacheArray.length; x++) {\n              // Find the project id in the array\n              if(cacheArray[x].id === projectId ) {\n                // Get index of project and splice out of array\n                let index = cacheArray.indexOf(cacheArray[x]);\n                cacheArray.splice(index, 1);\n              }\n            }\n            /// Update myProjects cache\n            cache.writeQuery({\n              query: MY_PROJECTS,\n              data: {\n                myProjects : cacheArray\n              }\n            })\n      } })\n      try {      \n        // setSelectedProject(\"\")\n        const resultData = {\n          toggle: false,\n          type: \"\",\n          selectedId: \"\"\n        }\n        toggleProjectResult(resultData);\n      } catch(err) {\n        console.log(err);\n      }\n\n    }\n  const closeComponent = () => {\n    const resultData = {\n      toggle: false,\n      type: \"\",\n      selectedId: \"\"\n    }\n    if(result.type === \"delete\"){\n      toggleOptions(result.selectedId)\n      toggleProjectResult(resultData); \n    } else {\n      // setSelectedProject(\"\")\n      toggleProjectResult(resultData);\n    }  \n  }\n\n  return (\n    <div className=\"result-component\">\n      <div className=\"wrapper\">\n        { result.type === \"share\" && \n          <Fragment>\n            <p>You shared <em>{ !loading && data && data.currentProject ? data.currentProject.name : \"a project\" }</em>. Would you like to see it on your feed?</p> \n            <span className=\"btn-wrapper\">\n              <Link to=\"feed\">\n                <span className=\"btn-bg\"></span>\n                <p>Go to feed</p>\n              </Link>\n              <button onClick={() => closeComponent()}>\n                <p>Back to projects</p>\n              </button>\n            </span>\n          </Fragment>\n        }\n          { result.type === \"delete\" && \n          <Fragment>\n            <p>Are you sure you want to delete <em>{ !loading && data && data.currentProject ? data.currentProject.name : \"a project\" }</em>?</p> \n            <span className=\"btn-wrapper\">\n              <button onClick={() => deletProjectById()} className=\"delete-btn\">\n                <span className=\"btn-bg\"></span>\n                <p>Delete</p>\n              </button>\n              <button onClick={() => closeComponent()}>\n                <p>Cancel</p>\n              </button>\n            </span>\n          </Fragment>\n        }\n        { result.type === \"remove\" && \n          <Fragment>\n            <p>Are you sure you want to remove yourself as a contributor on <em>{ !loading && data && data.currentProject ? data.currentProject.name : \"a project\" }</em>?</p> \n            <span className=\"btn-wrapper\">\n              <button onClick={() => removeAsContributor()} className=\"delete-btn\">\n                <span className=\"btn-bg\"></span>\n                <p>Remove</p>\n              </button>\n              <button onClick={() => closeComponent()}>\n                <p>Cancel</p>\n              </button>\n            </span>\n          </Fragment>\n        }\n      </div>\n    </div>\n  )\n}\nexport default connector(ResultComponent)","import React from 'react'\nimport { Link } from \"react-router-dom\";\n// GraphQL\nimport { useQuery } from \"@apollo/client\";\nimport { MY_ACCOUNT } from \"../../../graphql/queries\";\n// Redux\nimport { connect, ConnectedProps } from \"react-redux\";\n// Components\nimport ContributorPanel from \"../contributors/ContributorPanel\"\nimport ContributorAvatar from \"../contributors/ContributorAvatar\";\nimport FormatTimestamp from \"../../formatTime/FormatTimestamp\";\nimport Options from \"../options/Options\";\nimport ResultComponent from \"../components/ResultComponent\";\nimport Share from \"../functions/Share\";\n\ninterface ComponentProps {\n  application : { \n    contributorsPanel: boolean\n  }\n  project : {\n    options: string\n    result: {\n      toggle: boolean,\n      type: string,\n      currentId: string\n    }\n  }\n}\n\nconst mapState = (state: ComponentProps) => ({\n  options: state.project.options,\n  contributorsPanel: state.application.contributorsPanel,\n  result: state.project.result\n})\n\nconst mapDispatch = {\n  activatePlaybar : (payload: boolean) => ({ type: \"OPEN_PLAYBAR\", payload: payload }),\n  assignTrack : (payload: object) => ({type: \"ASSIGN_TRACK\", payload: payload}),\n  toggleOptions: (projectId: string) => ({type: \"PROJECT_OPTIONS\", payload: projectId}),\n}\n\nconst connector = connect(mapState, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux &  {\n  project: {\n    id: string\n    name: string\n    creatorId: number\n    creatorName: string\n    mainTrack: string\n    created: string\n    postId: number\n    isPublic: boolean\n  }\n};\n\nconst MyProject = ({ project, contributorsPanel, options, result, activatePlaybar, assignTrack, toggleOptions }:Props) => {\n  const { data: meData, loading: meLoading } = useQuery(MY_ACCOUNT);\n\n\n  const openPlaybarAndAssignTrackId = (trackId: string, projectId: string, projectName: string) => {\n    activatePlaybar(true);\n    const dataObject = {\n      id: trackId,\n      projectId,\n      trackName: \"\"\n    }\n    assignTrack(dataObject)\n  }\n\n  const toggleOptionsMenu = (id: string) => {\n    if(options === \"\") {\n      toggleOptions(id)\n    } else {\n      toggleOptions(\"\")\n    }\n  }\n\n    return (\n        <li className=\"project\" key={project.id}>\n           <span className=\"top\">\n              <span className=\"project-details\">\n                <span>\n                <Link to={`/workspace/${project.id}`} className=\"project-name\">{project.name}</Link>\n                { !meLoading && meData && meData.me.id !== project.creatorId &&\n                   <Link to={`/profile/${project.creatorId}`} className=\"project-creator\"> by <em>{project.creatorName}</em></Link>\n                }\n                </span>\n                <FormatTimestamp timestamp={project.created} />\n              </span>\n              <span className=\"responsive-btns\">\n                <button className=\"post-buttons responsive-play\"  onClick={() => openPlaybarAndAssignTrackId(project.mainTrack, project.id, project.name)}>\n                  <img src=\"/assets/icons/post/play-blue.svg\" alt=\"Play\"/>\n                </button>\n                { project.postId === null &&  \n                <Share projectId={project.id} location=\"project\"/>\n                }\n                <button className=\"post-buttons\" onClick={() => toggleOptionsMenu(project.id)}>\n                  <img src=\"/assets/icons/post/options.svg\" alt=\"Project options\"/>\n                </button>\n              </span>\n            </span>\n            <div className=\"bottom\">\n            {project.isPublic === true ? \n              <p className=\"public\">Public</p> :\n              <p className=\"private\">Private</p>\n            }\n              <span className=\"contributors\">\n                <ContributorAvatar projectId={project.id} />\n              </span>  \n            </div>\n            {contributorsPanel === true && <ContributorPanel />}\n            { options !== \"\" && <Options/>}\n            { result.toggle && <ResultComponent /> }\n        </li> \n    );\n} \n\nexport default connector(MyProject);\n\n","import React, { Fragment } from 'react'\n// GraphQL\nimport { useQuery } from \"@apollo/client\";\nimport { MY_PROJECTS } from \"../../../graphql/queries\";\n// Components\nimport MyProject from \"../project/MyProject\";\nimport EmptyState from \"../components/EmptyState\";\n \nconst Projects: React.FC = () => {\n    const { data, loading } = useQuery(MY_PROJECTS);\n    return (\n        <Fragment>\n        {!loading && data && data.myProjects.length !== 0  ?\n            data.myProjects.map((project: any) => \n            <MyProject key={project.id}project={project}/>) :\n            <EmptyState type=\"me\" userId={0}/>\n        }\n        </Fragment>\n    );\n}\n \nexport default Projects;","import React, { useState, Fragment } from 'react'\n\nimport { withRouter } from \"react-router-dom\";\n\n// GraphQL\nimport { useQuery } from \"@apollo/client\";\nimport { MY_ACCOUNT } from \"../../graphql/queries\";\n\n// Redux\nimport { connect, ConnectedProps } from \"react-redux\";\n\nimport NameDob from \"./edit/NameDob\";\nimport Bio from \"./edit/Bio\";\nimport Instruments from \"./edit/Instruments\";\n\nimport Posts from \"../../components/profile/me/Posts\";\nimport MyProjects from \"../../components/project/lists/MyProjects\";\nimport Mates from \"../../components/mates/lists/Mates\";\n\ninterface ComponentProps {  \n    profile: {\n      update: boolean\n      editting: {\n        names : boolean\n        bio: boolean\n        instruments: boolean\n      }\n    }\n  }\n  \n  const mapState = (state: ComponentProps) => ({\n    update: state.profile.update,\n    edittingNames : state.profile.editting.names,\n    edditingBio: state.profile.editting.bio,\n    edditingInstruments: state.profile.editting.instruments,\n  })\n  \n  const mapDispatch = {\n    updateProfile: (payload: boolean) => ({ type: \"UPDATE_PROFILE\", payload: payload}),\n    editNames: (payload: boolean) => ({type: \"EDIT_NAME\", payload: payload}),\n    editBio: (payload: boolean) => ({type: \"EDIT_BIO\", payload: payload}),\n    editInstrument: (payload: boolean) => ({type: \"EDIT_INSTRUMENT\", payload: payload}),\n  }\n  \n  const connector = connect(mapState,mapDispatch);\n  \n  type PropsFromRedux = ConnectedProps<typeof connector>;\n  type Props = PropsFromRedux & {\n      history : any\n  }\n  \nconst Profile = ({\n    updateProfile, \n    update, \n    history, \n    editNames, \n    editBio,\n    editInstrument,\n    edittingNames,\n    edditingBio,\n    edditingInstruments,} : Props) => {\n    // const { data, loading } = useQuery(MY_PROFILE);\n    const { data, loading } = useQuery(MY_ACCOUNT);\n    const [display , setDisplayOption] = useState(\"posts\");\n\n    if(loading) {\n        return <div>loading...</div>\n    }\n\n    const onChange = (e:React.ChangeEvent<HTMLSelectElement> ) => {\n        setDisplayOption(e.target.value);\n    }\n    return (\n    <div className=\"component-container\">\n         {!loading && data && data.me &&\n         <div className=\"profile-wrapper\">\n             {edittingNames === true ?  <NameDob/> : \n               <div className=\"info-wrappers\">\n                   <div className=\"my-profile-avatar\">\n                       <img src={data.me.avatar} alt=\"Users Avatar\"/>\n                   </div>\n                 <div className=\"name-dob-wrapper\">\n                    <span>\n                        <p className=\"label\">Full Name</p>\n                        <p className=\"profile-info capitalize\">{data.me.firstName + \" \" + data.me.lastName}</p>\n                    </span>\n                    <span>\n                        <p className=\"label\">Date of birth</p>\n                        <p className=\"profile-info\">{data.me.dob}</p>\n                    </span>\n                 </div>\n                <span className=\"email-container\">\n                        <p className=\"label\">Email</p>\n                        <p className=\"profile-info\">{data.me.email}</p> \n                    </span>\n                 <button className=\"edit-profile\" onClick={() =>  editNames(true)}>\n                        <img src=\"/assets/icons/post/edit-green.svg\" alt=\"Edit\"/>\n                    </button>\n             </div>}\n             {edditingBio === true ?  <Bio/> : \n                <div className=\"info-wrappers\">                    \n                    {data.me.bio ?\n                        <Fragment>\n                            <span>\n                                <p className=\"label\">Bio</p>\n                                <p className=\"profile-info\">{data.me.bio}</p>\n                            </span>\n                            <button className=\"edit-profile\" onClick={() => editBio(true)}>\n                                <img src=\"/assets/icons/post/edit-green.svg\" alt=\"Edit\"/>\n                            </button>\n                        </Fragment>\n                       : \n                        <span className=\"empty-state-wrapper\">\n                            <p className=\"label\">Why not add a bio?</p>\n                            <button className=\"add-info-btn\" onClick={() => editBio(true)}>\n                                Add bio\n                            </button>\n                        </span> }\n                </div>\n                } \n            {edditingInstruments === true ?  <Instruments/> :       \n             <div className=\"info-wrappers\"> \n             { data.me.instruments ? \n                <Fragment>\n                    <span>\n                        <p className=\"label\">Instruments</p>\n                        <p className=\"profile-info instruments\">{data.me.instruments}</p>\n                    </span>\n                    <button className=\"edit-profile\" onClick={() => editInstrument(true)}>\n                        <img src=\"/assets/icons/post/edit-green.svg\" alt=\"Edit\"/>\n                    </button>\n                </Fragment>\n                 :\n                  <span className=\"empty-state-wrapper\">\n                            <p className=\"label\">Why not show what instruments you play?</p>\n                            <button className=\"add-info-btn\" onClick={() => editInstrument(true)}>Add Instruments</button>\n                        </span> \n                    }\n                </div> \n            } \n            <ul className=\"profile-components-options\">\n                <li><button \n                    onClick={() => setDisplayOption(\"posts\")} \n                    className={display === \"posts\" ? \"active-btn\" : \"component-btn\"}>\n                    Posts</button></li>\n                <li><button \n                    onClick={() => setDisplayOption(\"projects\")}\n                    className={display === \"projects\" ? \"active-btn\" : \"component-btn\"}\n                     >Projects</button></li>\n                <li><button className={display === \"mates\" ? \"active-btn\" : \"component-btn\"} onClick={() => setDisplayOption(\"mates\")}>Mates</button></li>\n                <select value={display} onChange={(e) => onChange(e)}>\n                    <option value=\"posts\">Posts</option>\n                    <option value=\"projects\">Projects</option>\n                    <option value=\"mates\">Mates</option>\n                </select>\n            </ul> \n            <ul className=\"profile-display\">\n            { display === \"posts\" && <Posts />}\n            { display === \"projects\" && <MyProjects />}\n            { display === \"mates\" && <Mates userId={!loading && data && data.me && data.me.id} />}\n            </ul>\n        </div> }\n        </div>\n    );\n}\n\nexport default withRouter(connector(Profile));","import React from 'react'\nimport { Link } from \"react-router-dom\";\n// GraphQL\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { SHARE_PROJECT } from \"../../../graphql/mutations\";\nimport { MY_ACCOUNT, MY_PROJECTS, SEARCH_PROJECTS, MY_POSTS, FEED_POSTS } from \"../../../graphql/queries\";\n// Redux\nimport { connect, ConnectedProps } from \"react-redux\";\n// Components\nimport ContributorAvatar from \"../contributors/ContributorAvatar\";\nimport FormatTimestamp from \"../../formatTime/FormatTimestamp\";\n\ninterface ComponentProps {\n  project : {\n    options: string\n  }\n}\n\nconst mapState = (state: ComponentProps) => ({\n  options: state.project.options\n})\n\ntype resultData =  {\n  toggle: boolean\n  type: string\n  selectedId: string\n}\n\nconst mapDispatch = {\n  activatePlaybar : (payload: boolean) => ({ type: \"OPEN_PLAYBAR\", payload: payload }),\n  assignTrack : (payload: object) => ({type: \"ASSIGN_TRACK\", payload: payload}),\n  setSelectedProject: (id: string) => ({ type: \"SELECTED_PROJECT_ID\", payload: id}),\n  toggleContributors : (payload: boolean) => ({type: \"TOGGLE__CONTRIBUTORS\", payload: payload}),\n  toggleOptions: (projectId: string) => ({type: \"PROJECT_OPTIONS\", payload: projectId}),\n  toggleProjectResult: (payload: resultData) => ({type: \"PROJECT_RESULT\", payload}) \n}\n\nconst connector = connect(mapState, mapDispatch);\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux & {\n  searchInput: string\n};\n\nconst SearchProjects = ({ \n  options, \n  searchInput, \n  activatePlaybar, \n  toggleContributors, \n  assignTrack, \n  toggleOptions, \n  setSelectedProject, \n  toggleProjectResult }:Props) => {\n  const [shareProject] = useMutation(SHARE_PROJECT);\n  const { data: searchData, loading: searchLoading } = useQuery(SEARCH_PROJECTS, {\n    variables : {\n      projectName: searchInput\n    }\n  });\n  const { data: meData, loading: meLoading } = useQuery(MY_ACCOUNT)\n\n  const openPlaybarAndAssignTrackId = (trackId: string, projectId: string, projectName: string) => {\n    activatePlaybar(true);\n    const dataObject = {\n      id: trackId,\n      projectId,\n      trackName: \"\"\n    }\n    assignTrack(dataObject)\n  }\n  const shareProjectFunction = async (projectId: string) => {\n    const response = await shareProject({\n       variables: {\n         projectId\n       },\n       update: (cache, { data: { shareProject } }) => {\n         // Read the MY_PROJECTS query cache\n        const projectCache: any = cache.readQuery({query: MY_PROJECTS})\n        // Assign and iterate the cache so we can modify the Array\n        let modifyCache = [...projectCache.myProjects];\n        let index: number;\n        // Loop the project cache array\n        for(let x = 0; x < modifyCache.length; x++) {\n          // Find the post that matches our newly shared post with their ids\n         if(shareProject.post.id === modifyCache[x]) {\n           // Get the index of the matching project\n           index = modifyCache.indexOf(modifyCache[x])\n         }\n        }\n         // Remove the matching project by its index and then replace our new updated post\n         modifyCache.splice(index!, 1, shareProject.post)\n         cache.writeQuery({ \n           query : MY_PROJECTS,\n           data:  {\n            myProjects: modifyCache\n          }\n        })\n        // Getting profile post cache\n        const postCache: any = cache.readQuery({query: MY_POSTS})\n        // Iterate cache and add the shareProject\n        if(postCache !== null) {\n        let modifyPostCache = [...postCache.myPosts, shareProject ];\n        // Update cache\n         cache.writeQuery({ \n           query : MY_POSTS,\n           data:  {\n            myPosts: modifyPostCache\n          }\n        })\n       }\n         // Getting feed post cache\n        const feedCache: any = cache.readQuery({query: FEED_POSTS})\n        if(feedCache !== null) {\n         // Iterate cache and add the shareProject\n        let modifyFeedCache = [...feedCache.myFeed, shareProject ];\n         // Update cache\n         cache.writeQuery({ \n           query : FEED_POSTS,\n           data:  {\n             myFeed: modifyFeedCache\n          }\n        })\n       }\n       }\n     })\n     try {\n       // If response is successful\n       if(response.data.shareProject.success) {\n         // Set teh selected project to this id\n         setSelectedProject(projectId)\n         // Result oject ready to pass through redux funtion\n         const result = {\n           toggle: true,\n           type: \"share\",\n           selectedId: projectId\n         }\n         toggleProjectResult(result)\n       }\n     } catch(err) {\n       console.log(err);\n     }\n   }\n  const toggleOptionsMenu = (id: string) => {\n    // Assign the project to options to show component\n    if(options === \"\") {\n      toggleOptions(id)\n    } else {\n      toggleOptions(\"\")\n    }\n  }\n    return (\n      <ul className=\"list-of-projects\" id=\"searched-projects-list\">\n       { !searchLoading && searchData && searchData.searchProjects.length !== 0 ? searchData.searchProjects.map((project : any) => \n        <li className=\"project\" key={project.id}>\n        <span className=\"top\">\n          <span className=\"project-details\">\n            <span>\n            <Link to={`/workspace/${project.id}`} className=\"project-name\">{project.name}</Link>\n            { !meLoading && meData && meData.me.id !== project.creatorId &&\n               <Link to={`/profile/${project.creatorId}`} className=\"project-creator\"> by <em>{project.creatorName}</em></Link>\n            }\n            </span>\n            <FormatTimestamp timestamp={project.created} />\n          </span>\n          <span className=\"responsive-btns\">\n            <button className=\"post-buttons responsive-play\"  onClick={() => openPlaybarAndAssignTrackId(project.mainTrack, project.id, project.name)}>\n              <img src=\"/assets/icons/post/play-blue.svg\" alt=\"Play\"/>\n            </button>\n            { project.postId === null &&  \n              <button className=\"post-buttons responsive-share\" onClick={() => shareProjectFunction(project.id)}>\n                <img src=\"/assets/icons/post/share.svg\" alt=\"Share post\"/>\n             </button>\n            }\n            <button className=\"post-buttons\" onClick={() => toggleOptionsMenu(project.id)}>\n              <img src=\"/assets/icons/post/options.svg\" alt=\"Project options\"/>\n            </button>\n          </span>\n        </span>\n        <div className=\"bottom\">\n        {project.isPublic === true ? \n          <p className=\"public\">Public</p> :\n          <p className=\"private\">Private</p>\n\n        }\n          <span className=\"contributors\">\n            <ContributorAvatar projectId={project.id} />\n          </span>  \n        </div>\n    </li> \n     ) : \n     <div className=\"no-posts\">\n        <p>There are no projects with that name</p>\n   </div> \n      }\n  </ul> \n    );\n} \n\nexport default connector(SearchProjects);","import React, { useRef , useState, Fragment} from 'react'\nimport { useQuery } from \"@apollo/client\";\nimport { MY_ACCOUNT, SEARCH_PROJECTS } from \"../../../graphql/queries\";\n// Redux \nimport { connect, ConnectedProps } from \"react-redux\";\n// Components \nimport SearchProjects from \"./SearchProjects\";\n\ninterface ComponentProps {\n application : {\n   projectPanel: boolean\n }\n}\n\nconst mapState = (state: ComponentProps) => ({\n  projectPanel: state.application.projectPanel\n})\n\nconst mapDispatch = {\n  intialiseProject: (bool: boolean ) => ({type: \"INIT_PROJECT\", payload: bool }),\n}\n\nconst connector = connect(mapState, mapDispatch)\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype Props = PropsFromRedux;\nconst ProjectsHeader = ({projectPanel, intialiseProject} : Props) => {\n  const [searchData, setSearchData] = useState({\n    search: \"\"\n  })\n  const searchInput = useRef<HTMLInputElement>(null); \n\n  const toggleProjectPanel = () => {\n    if(projectPanel === true) {\n      intialiseProject(false)\n    } else {\n      intialiseProject(true)\n    }\n  }\n\n  const onChange = (e:React.ChangeEvent<HTMLInputElement>) => {\n    setSearchData({...searchData , search: e.target.value})\n  } \n\n  const onSubmit = (e:React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n  }\n\n  const focusInput = () => {\n    if(searchInput && searchInput.current) {\n      searchInput.current.focus()\n    }\n  }\n  return (\n    <Fragment>\n    <div className=\"projects-header\">\n      <form onSubmit={(e) => onSubmit(e)}>\n        <span className=\"input-wrapper\">\n      { searchData.search !== \"\"  ?\n          <button className=\"clear-btn\" onClick={() => setSearchData({search: \"\"})}>\n            <img src=\"/assets/icons/menu/clear.svg\" alt=\"Clear search\"/>\n          </button>\n          :\n          <button className=\"focus-btn\" onClick={() => focusInput()}>\n            <img src=\"/assets/icons/menu/search-blue.svg\" alt=\"Search\"/>\n          </button>\n        }\n        <input \n          type=\"text\"\n          id=\"search\"\n          name=\"search\"\n          value={searchData.search}\n          placeholder=\"Search projects\"\n          onChange={(e) => onChange(e)}\n          ref={searchInput}\n          />\n          </span>\n      </form>\n          <div className=\"right\">\n            <button onClick={() => toggleProjectPanel()}> \n              <img src=\"/assets/icons/create/project-create.svg\" alt=\"Create Project\" />\n              <p>Create Project</p>\n            </button>\n          </div>\n    </div>\n    { searchData.search !== \"\"  &&  <SearchProjects searchInput={searchData.search}/> }\n    </Fragment>\n  )\n}\nexport default connector(ProjectsHeader);","import React from 'react'\n// Components\nimport MyProjects from \"../../components/project/lists/MyProjects\";\nimport ProjectsHeader from \"../../components/project/components/ProjectsHeader\";\n \nconst Projects: React.FC = () => {\n    return (\n    <div className=\"component-container\">\n         <ProjectsHeader />\n         <ul className=\"list-of-projects\">\n            <MyProjects />\n         </ul>\n    </div>\n    );\n}\n\nexport default Projects;","import React from 'react'\n\ninterface RouteState {}\n\nconst NotFound = () => {\n    return (\n    \n        <div className=\"notFound\">\n            <p>404 : NotFound</p>\n        </div>);\n}\n\nexport default NotFound;","import React, { useState } from 'react'\nimport { Link } from \"react-router-dom\";\n\nconst Landing = () => {\n  const [projectOption, setProjectOption] = useState(\"record\");\n  return (\n    <div className=\"landing-container\">\n      <header>\n        <div className=\"header-wrapper\">\n        <span className=\"logo\">\n          SocialSongs\n        </span>\n        <div className=\"header-links\">\n          <Link to=\"/login\">Login</Link>\n          <Link className=\"register-link\"to=\"/register\">Register</Link>\n        </div>\n        </div>\n      </header>\n\n  \n      <div className='bg-container'>\n        <div className=\"dark-bg\"></div>\n      <div className=\"intro-container\">\n        <div className=\"titles-container\">\n          <h1>Create,</h1><br />\n          <h1>Collaborate and</h1><br />\n          <h1>Share</h1><br />\n          <h2>Record, write and tab out song ideas but don’t only do it alone, share them with mates and collaborate and create something together.</h2>\n          <span className=\"link-span\">\n            <Link to=\"register\">Sign up today</Link>\n            <button>Find out more<img className=\"down-arrow\" src=\"/assets/icons/landing/down-arrow.svg\" alt=\"down arrow\"></img></button>\n          </span>\n        </div>\n        <div className=\"graphic-container\">\n          <img src=\"/assets/icons/landing/illustration.svg\" alt=\"Illustration\"/>\n        </div>\n      </div>\n\n        <div className=\"how-to-get-started\">\n            <h3>How to get started?</h3>\n            <div className=\"instructions-container\"></div>\n      </div>\n      </div>\n\n    <div className=\"project-showcasing\">\n      <h4>Create Projects</h4>\n      <div className=\"flex-container\">\n      <div className=\"project-list\">\n        <ul>\n          <li className={projectOption === \"record\" ? \"selected\" : \"\"}  onMouseOver={() => setProjectOption(\"record\")}>\n            <img src=\"/assets/icons/landing/record.svg\" alt=\"Recording\" id=\"record-icon\"></img> \n            <span>\n              <h5>Record</h5>\n              <p>Record audio and store them as tracks which can name, delete and of course play to listen back to the audio.</p>\n            </span>\n          </li>\n          <li className={projectOption === \"lyrics\" ? \"selected\" : \"\"} onMouseOver={() => setProjectOption(\"lyrics\")}> \n          <img src=\"/assets/icons/landing/lyrics.svg\" alt=\"Lyrics\"></img> \n            <span>\n              <h5>Write Lyrics</h5>\n              <p>Write down lyrical ideas that you can edit, delete and keep them all in one place related to the project.</p>\n            </span>\n          </li>\n          <li className={projectOption === \"tab\" ? \"selected\" : \"\"} onMouseOver={() => setProjectOption(\"tab\")}>\n          <img src=\"/assets/icons/landing/tab.svg\" alt=\"Tab\"></img> \n            <span>\n              <h5>Tab Out</h5>\n              <p>If your instrument is a guitar, keep track of your riffs, chord progression within the tab elements which are easy to read and keep track of.</p>\n            </span>\n          </li>\n        </ul>\n      </div>\n      <div className=\"project-demo\">\n        <h6>Try for yourself</h6>\n        <div className=\"record-container\">\n          <button>\n            <img src=\"/assets/icons/workspace/record.svg\" alt=\"Record\"/>\n          </button>\n        </div>\n        <ul>\n          <li> \n            <span>\n             <p className=\"track-name\">Example Track</p>\n             <p>Play me</p>\n            </span>\n            <span className=\"btn-container\">\n              <button>\n              <img src=\"/assets/icons/post/play.svg\" alt=\"Play\"/>\n              </button>\n            </span>\n          </li>\n        </ul>\n      </div>\n      </div>\n    </div>\n\n  \n    <div className=\"want-to-get-started\">\n    <div className=\"blue-bg\"></div>\n      <h3>Want to get started?</h3>\n      <p>Start creating and sharing your projects today.</p>\n      <Link to=\"/register\">Sign up today</Link>\n  </div>\n    <div className=\"contact-container\">\n      <h6>Got something to say?</h6>\n      <p>Contact me and I'll get back to you as soon as I can</p>\n      <form>\n        <span className=\"input-span\">\n            <label htmlFor=\"name\">Your Name</label>\n            <input type=\"text\" id=\"firstName\" placeholder=\"Enter your full name\"/>\n        </span>\n        <span className=\"input-span\">\n          <label htmlFor=\"email\">Email</label>\n          <input type=\"text\" id=\"email\" placeholder=\"Enter your email\"/>\n        </span>\n        <span className=\"input-span\">\n          <label htmlFor=\"message\">Message</label>\n          <textarea id=\"message\" placeholder=\"Hi Jay awesome app? Have you thought about . . .\"/>\n        </span>\n        <input type=\"submit\" value=\"Send message\"/>\n      </form>\n    </div>\n\n    <div className=\"footer\">\n      <div className=\"dark-bg\"></div>\n    </div>\n\n    </div>\n  )\n}\n\nexport default Landing","import React, { Fragment } from 'react'\nimport { Link } from \"react-router-dom\";\n// GraphQL\nimport { useQuery } from \"@apollo/client\";\nimport {MY_ACCOUNT, ALL_POSTS} from \"../../graphql/queries\";\n// Components\n// import DiscoverPost from \"../../components/post/DiscoverPost\";\nimport CreateComponent from \"../../components/create/CreateComponent\"\nimport MyPost from \"../../components/post/posts/MyPost\";\nimport UsersPost from \"../../components/post/posts/UsersPost\";\nimport MySharedProject from \"../../components/post/sharedProject/MySharedProject\";\nimport UserSharedProject from \"../../components/post/sharedProject/UserSharedProject\";\nconst Discover: React.FC = () => {\n  const { data, loading, error } = useQuery(ALL_POSTS);\n  const { data: meData, loading: meLoading } = useQuery(MY_ACCOUNT);\n    return (\n      <div className=\"component-container\">\n        <div className=\"feed-flex\">\n          <CreateComponent />\n          {!loading && data && data.allPosts.length !== 0  ?\n              <ul>\n                {data.allPosts.map((post: any) => \n                <li key={post.post.id}>\n                  { post.project !== null ?\n                    <Fragment> \n                    { !meLoading && meData && meData.me.id === post.post.creatorId ? \n                      <MySharedProject post={post} />  :\n                      <UserSharedProject post={post} /> \n                    }\n                   </Fragment>\n                  :\n                  <Fragment> \n                  { !meLoading && meData && meData.me.id === post.post.creatorId ? \n                    <MyPost post={post} />  :\n                    <UsersPost post={post} /> \n                  }\n                 </Fragment>\n                }\n                  </li> )}\n              </ul> : \n              <div className=\"no-posts\">\n                <p>There are no posts on your feed. Check out the <Link to=\"/discover\">Discover</Link> page and find some new mates. </p>\n              </div> }\n                  \n        </div>\n      </div> \n    );\n}\n\nexport default Discover;","import React, { useState, Fragment } from 'react'\nimport Mate from \"../../../components/mates/mate/Mate\";\ninterface ComponentProps {\n  users: Array<any>\n}\n\nconst Users = ({users}:ComponentProps) => {\n  const [hide, setHideResults] = useState(false);\n  const [showMore, setShowMore] = useState(false);\n  const [indexLimit, setIndexLimit] = useState(4);\n\n  const hideResults = () => {\n    if(hide === true) {\n      setHideResults(false)\n    } else {\n      setHideResults(true)\n    }\n  }\n\n  const showResults = () => {\n    if(indexLimit === 4) {\n      setShowMore(true)\n      setIndexLimit(users.length)\n    } else {\n      setShowMore(false)\n      setIndexLimit(4)\n    }\n  }\n  return (\n      <div className=\"results-wrapper\">\n    <span className=\"results-header\">\n          <h3 className=\"search-headings\">Users</h3> \n          <button className=\"hide-btn\" onClick={() => hideResults()}>\n            <span className=\"btn-bg\"></span>\n            <p>Hide Users</p>\n          </button>\n        </span>\n        <ul className={hide === true ? \"hide-list\": \"\"}>\n        { users.length !== 0  ? users.map((user: any, index: number) => \n         <Fragment> \n         { index < indexLimit &&\n          <Mate mate={user}/>\n          }\n       </Fragment>\n        ) : \n         <div className=\"no-posts\"> \n          <p>There are no users with that name.</p>\n         </div>\n        }\n        </ul>\n        {\n           hide === false &&  users.length > 4 &&\n          <button onClick={() => showResults()} className=\"show-less\">\n          { showMore === true ? \n           <p>Show less</p> \n           : \n           <p>Show more</p> \n          }\n          </button>\n        }\n      </div>\n        );\n}\n\nexport default Users;","\nimport React, { Fragment, useState } from 'react'\nimport Project from \"../../../components/project/project/UsersProject\";\n\ninterface ComponentProps {\n  projects: Array<any>\n}\n\nconst Projects = ({projects}:ComponentProps) => {\n  const [hide, setHideResults] = useState(false);\n  const [showMore, setShowMore] = useState(false);\n  const [indexLimit, setIndexLimit] = useState(4);\n\n  const hideResults = () => {\n    if(hide === true) {\n      setHideResults(false)\n    } else {\n      setHideResults(true)\n    }\n  }\n\n  const showResults = () => {\n    if(indexLimit === 4) {\n      setShowMore(true)\n      setIndexLimit(projects.length)\n    } else {\n      setShowMore(false)\n      setIndexLimit(4)\n    }\n  }\n  return (\n      <div className=\"results-wrapper project-results\">\n        <span className=\"results-header\">\n          <h3 className=\"search-headings\">Projects</h3> \n          <button className=\"hide-btn\" onClick={() => hideResults()}>\n            <span className=\"btn-bg\"></span>\n            <p>Hide Projects</p>\n          </button>\n        </span>\n        <ul className={hide === true ? \"hide-list\": \"users-projects\"} >\n        { projects.length !== 0 ? projects.map((project : any, index: number) => \n        <Fragment> \n          { index < indexLimit &&\n           <Project userId={project.creatorId} project={project}/>\n           }\n        </Fragment>\n        ) : \n         <div className=\"no-posts\"> \n          <p>There are no projects with that name.</p>\n         </div>\n        }\n        </ul>\n        {\n          hide === false && projects.length > 4 &&\n          <button onClick={() => showResults()}className=\"show-less\">\n          { showMore === true ? \n           <p>Show less</p> \n           : \n           <p>Show more</p> \n          }\n          </button>\n        }\n      </div>\n        );\n}\n\nexport default Projects;\n","import React, { useState, useRef } from 'react'\nimport { useLocation, withRouter } from \"react-router-dom\";\n// GraphQL\nimport { useQuery } from \"@apollo/client\";\nimport { SEARCH_APPLICATION } from \"../../graphql/queries\"\n\nimport Users from \"./lists/Users\";\nimport Projects from \"./lists/Projects\";\n\ninterface ComponetProps {\n  history: any\n}\n\nconst SearchResult = ({history}:ComponetProps) => {\n  const [searchData, setSearchData] = useState({ search : \"\"})\n  const location = useLocation()\n  const pathName = location.pathname\n  const params = pathName.split(\"/\")\n  let inputData;\n  if(searchData.search === \"\") {\n    inputData = params[2];\n  }  else {\n    inputData = searchData.search.toLowerCase();\n  }\n  const { data, loading } = useQuery(SEARCH_APPLICATION, {\n    variables : {\n      input: inputData\n    }\n  });\n  const searchInput = useRef<HTMLInputElement>(null); \n\n  if(loading) {\n      return <div>loading...</div>\n  }\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchData({...searchData, search : e.target.value})\n  }\n  \n  const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    history.push(`/search/${searchData.search}`)\n  }\n\n  const focusInput = () => {\n    if(searchInput && searchInput.current) {\n      searchInput.current.focus()\n    }\n  }\n\n  return (\n      <div className=\"component-container\">\n        <div className=\"mates-header\">\n            <form onSubmit={(e) => onSubmit(e)}>\n                <span className=\"input-wrapper\">\n          { searchData.search !== \"\"  ?\n              <button className=\"clear-btn\" onClick={() => setSearchData({search: \"\"})}>\n                <img src=\"/assets/icons/menu/clear.svg\" alt=\"Clear search\"/>\n              </button>\n              :\n              <button className=\"focus-btn\" onClick={() => focusInput()}>\n                <img src=\"/assets/icons/menu/search-blue.svg\" alt=\"Search\"/>\n              </button>\n            }\n            <input \n              type=\"text\"\n              id=\"search\"\n              name=\"search\"\n              value={searchData.search}\n              placeholder=\"Search projects\"\n              onChange={(e) => onChange(e)}\n              ref={searchInput}\n              />\n              </span>\n          </form>\n        </div>\n        { !loading && data && data.searchApplication.users && \n          <Users users={data.searchApplication.users} />\n        }\n        { !loading && data && data.searchApplication.projects &&\n          <Projects projects={data.searchApplication.projects} />\n        }\n      </div>    \n  );\n}\n\nexport default withRouter(SearchResult)","import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route , Redirect, useLocation} from \"react-router-dom\";\n\n// GraphQL \nimport { useQuery } from \"@apollo/client\";\nimport { MY_ACCOUNT } from \"./graphql/queries\";\n\n// Redux \nimport { connect, ConnectedProps } from \"react-redux\";\n\nimport Login from './routes/login-register/Login';\nimport Register from './routes/login-register/Register';\n\n// Components \nimport Header from \"./components/header/Header\";\nimport Playbar from \"./components/playbar/Playbar\";\nimport Navigation from \"./components/navigation/Navigation\";\nimport CreatePost from './components/post/functions/CreatePost';\nimport CreateProject from './components/project/functions/CreateProject';\nimport AuthRoute from \"./components/authRoute/AuthRoute\";\nimport UnAuthRedirect from \"./components/unAuthRedirect/UnAuthRedirect\"\nimport UserProfile from \"./components/profile/user/UserProfile\"\nimport ScrollToTop from \"./components/scrollToTop/ScrollToTop\"\nimport RequestResult from \"./components/request/RequestResult\";\n// Routes\nimport Feed from './routes/feed/Feed';\nimport Workspace from './routes/workspace/Workspace';\nimport MyMates from './routes/myMates/MyMates';\nimport Profile from './routes/profile/Profile';\nimport Projects from './routes/projects/Projects';\nimport NotFound from './routes/notFound/NotFound';\nimport Landing from \"./routes/landing/Landing\";\nimport Discover from \"./routes/discover/Discover\";\nimport SearchResult from \"./routes/searchResult/SearchResult\";\n\ninterface ComponentProps {\n  application : {\n      location: string\n      postPanel : boolean\n      projectPanel : boolean\n      result: {\n        show: boolean\n        success: boolean\n        type: string\n      }\n  }  \n  user: {\n    authenticated : boolean,\n    user : {}\n  }\n  // project: {\n  //   projectPanel : boolean,\n  //   projectDetails : {}\n  // }\n}\n\nconst mapState = (state : ComponentProps) => ({\n  authenticated : state.user.authenticated,\n  location: state.application.location,\n  projectPanel: state.application.projectPanel,\n  postPanel : state.application.postPanel,\n  result: state.application.result\n})\n\nconst mapDispatch = {\n  activatePlaybar : (val:Boolean) => ({type: \"OPEN_PLAYBAR\", payload: val}),\n  authenticateUser: (user: object) => ({ type: \"USER_AUTHENTICATED\", payload: user}),\n}\n\nconst connector = connect(mapState, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux\n\n\n// Component \nconst Routes = ({location, projectPanel, authenticated, result, postPanel, activatePlaybar, authenticateUser} : Props) => {\n  const { data , loading } = useQuery(MY_ACCOUNT);\n\n  useEffect(() => {\n    if(!loading && data && data.me) {\n      const contructedUserData = {\n        id : data.me.id,\n        email: data.me.email,\n    }\n    authenticateUser(contructedUserData);\n    }\n    if(!loading && location !== \"workspace\") {\n      activatePlaybar(false);\n    } else if(!loading && location === \"workspace\") {\n      activatePlaybar(true);\n    }\n  }, [location, data, loading, activatePlaybar, authenticateUser])\n  \n    return (\n      <Router>\n\n         {authenticated === true ? \n         <div className=\"app\">\n         <Header />\n         <div className={location !== \"workspace\" ? \"app-wrapper\" : \"app-workspace-wrapper\"} > \n         {location === \"workspace\" ?  null : <Navigation></Navigation>}\n         {postPanel === true ? <CreatePost/> : null}\n         {projectPanel === true ? <CreateProject/> : null}\n         {result.show === true ? <RequestResult /> : null}\n         <ScrollToTop />\n           <Switch>\n             <Route exact path=\"/\">\n               <Redirect to=\"/feed\"></Redirect> \n            </Route> \n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/\" /> \n            <Route exact path=\"/feed\" component={Feed} />\n            <Route exact path=\"/discover\" component={Discover} />\n             <Route exact path=\"/workspace/:id\" component={Workspace} />\n             <Route exact path=\"/profile/me\" component={Profile} />\n             <Route exact path=\"/projects\" component={Projects} />\n             <Route exact path=\"/mates\" component={MyMates} />\n             <Route exact path=\"/search/:input\" component={SearchResult} />\n             <Route exact path=\"/profile/:id\" component={UserProfile} />\n             <Route component={NotFound} />\n           </Switch>\n         </div>\n         <Playbar></Playbar>\n       </div> \n       :\n        <div className=\"landing\">\n              <ScrollToTop />\n          <Switch>\n              <Route exact path=\"/\" component={Landing} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/register\" component={Register} />\n              {/* <Route component={NotFound} /> */}\n              {/* <Route exact path=\"/login\" component={UnAuthRedirect} />\n              <Route exact path=\"/register\" component={UnAuthRedirect} />\n              <Route exact path=\"/feed\" component={UnAuthRedirect} />\n              <Route exact path=\"/discover\" component={UnAuthRedirect} />\n              <Route path=\"/workspace/\" component={UnAuthRedirect} />\n              <Route path=\"/profile/\" component={UnAuthRedirect} />\n              <Route exact path=\"/projects\" component={UnAuthRedirect} />\n              <Route exact path=\"/mates\" component={UnAuthRedirect} /> */}\n          </Switch>\n        </div>\n         }\n      </Router>\n    )\n}\n\nexport default connector(Routes);\n","import React, { useState, useEffect } from \"react\";\nimport  Routes  from \"./Routes\";\nimport { setAccessToken } from \"./accessToken\"\n\ninterface Props {}\n\nexport const App: React.FC<Props> = () => {\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Sending refresh token to get new accessToken\n    fetch('https://foliotune.herokuapp.com/refresh_token', {\n      method: \"POST\",\n      credentials: \"include\"\n    }).then(async x => {\n      // Get accessToken from response data\n      const { accessToken } = await x.json();\n      // Setting new accessToken\n      setAccessToken(accessToken);\n      setLoading(false);\n   })\n  },[]);\n\n  if(loading) {\n    return <div>loading...</div>\n  }\n\n  return <Routes />;\n}","export const USER_AUTHENTICATED = \"USER_AUTHENTICATED\";\nexport const CLEAR_USER = \"CLEAR_USER\";\n\n\nexport interface User {\n  authenticated : boolean,\n  user: {}\n}\n\ninterface authenticateUser {\n  type: typeof USER_AUTHENTICATED\n  payload: User\n}\n\ninterface clearUser {\n  type: typeof CLEAR_USER\n  payload: User\n}\n\nexport type UserTypes = authenticateUser | clearUser","import {\n  User,\n  UserTypes,\n  USER_AUTHENTICATED,\n  CLEAR_USER\n} from \"../../actions/user/types\";\n\nconst intialState = {\n  authenticated : false,\n  user: {}\n}\n\nexport const user = (state: User = intialState, action: UserTypes) => {\n  const { type, payload } = action;\n  switch(type) {\n    case USER_AUTHENTICATED :\n      return {\n        ...state,\n        authenticated : true,\n        user : payload\n    }\n    case CLEAR_USER : \n      return {\n        ...state,\n        authenticated : false,\n        user : {}\n      }\n    default : \n      return state;\n  }\n}","// // App Location\n// export const SET_APP_LOCATION = \"SET_APP_LOCATION\";\n\n// Playbar Types \nexport const OPEN_PLAYBAR = \"OPEN_PLAYBAR\";\nexport const ASSIGN_TRACK = \"ASSIGN_TRACK\";\n\nexport interface Playbar {\n  status: boolean\n  data: {\n    id: string\n    projectId: string\n    trackName: string\n  }\n\n}\n\ninterface openPlaybar { \n  type: typeof OPEN_PLAYBAR\n  payload: Playbar\n}\n\ninterface assignTrack {\n  type: typeof ASSIGN_TRACK\n  payload: Playbar\n}\n\nexport type PlaybarTypes =  openPlaybar | assignTrack;\n\n","import { Playbar, PlaybarTypes, OPEN_PLAYBAR, ASSIGN_TRACK } from '../../actions/playbar/types';\n\n\nconst initialState: Playbar = {\n  status  : false,\n  data: {\n    id: \"\",\n    projectId: \"\",\n    trackName: \"\"\n  }\n}\n\nexport const playbarStatus = (state:Playbar = initialState, action: PlaybarTypes ) => {\n  const { type, payload } = action;\n  switch(type) {\n    case OPEN_PLAYBAR: \n            return {\n              ...state,\n              status : payload\n            }\n    case ASSIGN_TRACK:\n            return {\n              ...state,\n              data: payload\n            }\n    default : \n            return state;\n            \n  }\n}\n","export const SET_APP_LOCATION = \"SET_APP_LOCATION\";\nexport const CLOSE_POST_PANEL = \"CLOSE_POST_PANEL\";\nexport const CLOSE_SETTINGS_PANEL = \"CLOSE_SETTINGS_PANEL\";\nexport const TOGGLE__NOTIFICATIONS = \"TOGGLE__NOTIFICATIONS\";\nexport const INIT_PROJECT = \"INIT_PROJECT\";\nexport const TOGGLE__CONTRIBUTORS = \"TOGGLE__CONTRIBUTORS\";\nexport const TOGGLE_SEARCH = \"TOGGLE_SEARCH\";\nexport const TOGGLE_CREATE_PANEL = \"TOGGLE_CREATE_PANEL\";\nexport const RESULT_TOGGLE = \"RESULT_TOGGLE\";\nexport const NAVBAR_TOGGLE = \"NAVBAR_TOGGLE\";\n\nexport interface Application {\n  location : string\n  postPanel : boolean\n  projectPanel: boolean\n  settingsPanel: boolean\n  notificationPanel: boolean\n  contributorsPanel: boolean\n  searchPanel: boolean\n  createPanel: boolean\n  navbar: boolean\n  result: {\n    show: boolean\n    success: boolean\n    type: string\n  }\n}\n\ninterface setAppLocation  {\n  type:typeof SET_APP_LOCATION,\n  payload: Application\n}\n\n\ninterface closePostPanel  {\n  type:typeof CLOSE_POST_PANEL,\n  payload: Application\n}\n\ninterface intialiseProject {\n  type: typeof INIT_PROJECT\n  payload: Application\n}\n\ninterface closeSettingsPanel  {\n  type:typeof CLOSE_SETTINGS_PANEL,\n  payload: Application\n}\n\ninterface toggleNotification  {\n  type:typeof TOGGLE__NOTIFICATIONS,\n  payload: Application\n}\n\ninterface toggleContributors {\n  type: typeof TOGGLE__CONTRIBUTORS,\n  payload : Application\n}\n\ninterface toggleSearch {\n  type: typeof TOGGLE_SEARCH,\n  payload : Application\n}\ninterface toggleCreatePanel {\n  type: typeof TOGGLE_CREATE_PANEL,\n  payload : Application\n}\n\ninterface toggleResult {\n  type: typeof RESULT_TOGGLE,\n  payload: Application\n}\n\ninterface toggleNavbar {\n  type: typeof NAVBAR_TOGGLE,\n  payload: Application\n}\n\nexport type ApplicationTypes = setAppLocation | closePostPanel | closeSettingsPanel | intialiseProject |toggleNotification |toggleContributors | toggleSearch | toggleCreatePanel | toggleResult | toggleNavbar;","import { \n  ApplicationTypes,\n  Application,\n  CLOSE_POST_PANEL,\n  CLOSE_SETTINGS_PANEL,\n  INIT_PROJECT,\n  SET_APP_LOCATION, \n  TOGGLE__NOTIFICATIONS,\n  TOGGLE__CONTRIBUTORS,\n  TOGGLE_SEARCH,\nTOGGLE_CREATE_PANEL,\nRESULT_TOGGLE,\nNAVBAR_TOGGLE} from \"../../actions/application/types\";\n\nconst initialState: Application = {\n  location : \"\",\n  postPanel: false,\n  projectPanel: false,\n  settingsPanel: false,\n  notificationPanel: false,\n  contributorsPanel: false,\n  searchPanel: false,\n  createPanel: false,\n  navbar: false,\n  result: {\n    show: false,\n    success: false,\n    type: \"\"\n  }\n}\n\nexport const applicationReducer = (state: Application = initialState, action: ApplicationTypes ) => {\n  const { type, payload } = action;\n\n  switch(type) {\n    case SET_APP_LOCATION: \n      return { \n        ...state,\n        location : payload\n      }\n    case CLOSE_POST_PANEL : \n      return {\n        ...state,\n        postPanel: payload,\n        projectPanel: false,\n        settingsPanel: false,\n        notificationPanel: false,\n        contributorsPanel: false,\n        searchPanel: false,\n        createPanel: false,\n        navbar: false\n      }\n    case CLOSE_SETTINGS_PANEL: \n      return {\n        ...state,\n        postPanel: false,\n        projectPanel: false,\n        settingsPanel: payload,\n        notificationPanel: false,\n        contributorsPanel: false,\n        searchPanel: false,\n        createPanel: false,\n        navbar: false\n      }\n    case TOGGLE__NOTIFICATIONS: \n      return {\n        ...state,\n        postPanel: false,\n        projectPanel: false,\n        settingsPanel: false,\n        notificationPanel: payload,\n        contributorsPanel: false,\n        searchPanel: false,\n        createPanel: false,\n        navbar: false\n      }\n    case INIT_PROJECT : \n        return {\n          ...state, \n          postPanel: false,\n          projectPanel: payload,\n          settingsPanel: false,\n          notificationPanel: false,\n          contributorsPanel: false,\n          searchPanel: false,\n          createPanel: false,\n          navbar: false\n        }\n      case TOGGLE__CONTRIBUTORS: \n        return {\n          ...state,\n          postPanel: false,\n          projectPanel: false,\n          settingsPanel: false,\n          notificationPanel: false,\n          contributorsPanel: payload,\n          searchPanel: false,\n          createPanel: false,\n          navbar: false\n        }\n    case TOGGLE_SEARCH : \n      return {\n        ...state,\n        postPanel: false,\n        projectPanel: false,\n        settingsPanel: false,\n        notificationPanel: false,\n        contributorsPanel: false,\n        searchPanel: payload,\n        createPanel: false,\n        navbar: false\n      }\n      case TOGGLE_CREATE_PANEL : \n      return {\n        ...state,\n        postPanel: false,\n        projectPanel: false,\n        settingsPanel: false,\n        notificationPanel: false,\n        contributorsPanel: false,\n        searchPanel: false,\n        createPanel: payload\n      }\n      case NAVBAR_TOGGLE : \n      return {\n        ...state,\n        postPanel: false,\n        projectPanel: false,\n        settingsPanel: false,\n        notificationPanel: false,\n        contributorsPanel: false,\n        searchPanel: false,\n        navbar: payload\n      }\n      case RESULT_TOGGLE : \n        return {\n          ...state,\n          result: payload\n        }\n    default :\n    return state\n  }\n}","export const STORE_PROJECT = \"STORE_PROJECT\";\nexport const SHOW_PROJECT_DELETE_PANEL = \"SHOW_PROJECT_DELETE_PANEL\"\nexport const SELECTED_PROJECT_ID = \"SELECTED_PROJECT_ID\";\nexport const REMOVE_CONTRIBUTOR = \"REMOVE_CONTRIBUTOR\";\nexport const PROJECT_OPTIONS = \"PROJECT_OPTIONS\";\nexport const PROJECT_RESULT = \"PROJECT_RESULT\";\n\nexport interface Project {\n  currentProject: string,\n  deleteProject: boolean,\n  selectedProject: string\n  options: string\n  contributor:  {\n    remove: boolean,\n    projectId: string,\n    userId: number\n  }\n  result: {\n    toggle: boolean\n    type: string\n    selectedId: string\n  }\n}\n\ninterface storeProject {\n  type: typeof STORE_PROJECT\n  payload: Project\n}\n\ninterface setDeleteProjectPanel {\n  type: typeof SHOW_PROJECT_DELETE_PANEL\n  payload: Project\n}\n\ninterface setSelectedProject {\n  type: typeof SELECTED_PROJECT_ID\n  payload: Project\n}\n\ninterface removeContributor {\n  type: typeof REMOVE_CONTRIBUTOR\n  payload: Project\n}\n\ninterface toggleOptions {\n  type: typeof PROJECT_OPTIONS\n  payload: Project\n}\n\ninterface toggleResults {\n  type: typeof PROJECT_RESULT\n  payload: Project\n}\n\nexport type ProjectTypes =  storeProject | setDeleteProjectPanel | setSelectedProject | removeContributor | toggleOptions |toggleResults;","import { \n  Project,\n  ProjectTypes,\n  STORE_PROJECT,\n  SHOW_PROJECT_DELETE_PANEL,\n  SELECTED_PROJECT_ID,\n  REMOVE_CONTRIBUTOR,\n  PROJECT_OPTIONS,\n  PROJECT_RESULT\n} from \"../../actions/project/types\";\n\nconst intialState: Project = {\n  currentProject: \"\",\n  deleteProject: false,\n  selectedProject: \"\",\n  options: \"\",\n  contributor:  {\n    remove: false,\n    projectId: \"\",\n    userId: -1\n  },\n  result : {\n    toggle: false,\n    type: \"\",\n    selectedId: \"\"\n  }\n}\n\nexport const project = (state:Project = intialState, action : ProjectTypes) => {\n  const { type, payload } = action;\n\n  switch(type) {\n    case STORE_PROJECT : \n        return {\n          ...state,\n          initialised: true,\n          currentProject: payload\n        }\n    case SHOW_PROJECT_DELETE_PANEL : \n        return {\n          ...state,\n          deleteProject: payload,\n        }\n    case SELECTED_PROJECT_ID : \n        return {\n          ...state,\n          selectedProject: payload\n        }\n    case REMOVE_CONTRIBUTOR : \n        return {\n          ...state,\n          contributor: payload\n        }\n    case PROJECT_OPTIONS : \n        return {\n          ...state,\n          options: payload\n        }\n    case PROJECT_RESULT : \n        return {\n          ...state,\n          result: payload\n        }\n    default :\n        return state;\n  }\n}\n","export const INIT_AND_EXIT_LYRIC_CREATION = \"INIT_AND_EXIT_LYRIC_CREATION\";\nexport const INIT_AND_EXIT_TAB_CREATION = \"INIT_AND_EXIT_TAB_CREATION\";\n\n// export const INIT_LYRIC_DELETION = \"INIT_LYRIC_DELETION\";\n// export const SET_LYRIC_ID = \"SET_LYRIC_ID\";\n\nexport const CREATE_LYRIC = \"CREATE_LYRIC\";\nexport const CREATE_TAB = \"CREATE_TAB\";\n\nexport const DELETE_LYRIC = \"DELETE_LYRIC\";\nexport const DELETE_TAB = \"DELETE_TAB\";\nexport const DELETE_TRACK = \"DELETE_TRACK\";\n\nexport interface Workspace { \n  lyrics: {\n    create: boolean\n    delete: boolean\n    id: number\n  }\n  tabs : {\n    create: boolean\n    delete: boolean\n  }\n  tracks :{\n    delete: boolean\n  }\n}\n\ninterface initLyricCreation {\n  type: typeof INIT_AND_EXIT_LYRIC_CREATION\n  payload: Workspace\n}\ninterface initLyricDeletion {\n  type: typeof DELETE_LYRIC\n  payload: Workspace\n}\ninterface initTabCreation  {\n  type: typeof INIT_AND_EXIT_TAB_CREATION\n  payload: Workspace\n}\ninterface initTabDeletion {\n  type: typeof DELETE_TAB\n  payload: Workspace\n}\ninterface initTrackDeletion {\n  type: typeof DELETE_TRACK\n  payload: Workspace\n}\ninterface createLyricAndAddToProject {\n  type: typeof CREATE_LYRIC\n  payload: Workspace\n}\ninterface createTabAndAddToProject {\n  type: typeof CREATE_TAB\n  payload: Workspace\n}\n\n\nexport type WorkspaceTypes = initLyricCreation | initLyricDeletion | initTabDeletion | initTabCreation | createLyricAndAddToProject | createTabAndAddToProject |initTrackDeletion;","\nimport { \n  Workspace,\n  WorkspaceTypes,\n  INIT_AND_EXIT_LYRIC_CREATION,\n  DELETE_LYRIC,\n  DELETE_TAB,\n  DELETE_TRACK,\n  INIT_AND_EXIT_TAB_CREATION,\n} from \"../../actions/workspace/types\"\n\nconst intialState: Workspace = {\n  lyrics : {\n    create: false,\n    delete: false,\n    id: 0\n  },\n  tabs: {\n    create: false,\n    delete: false\n  },\n  tracks :{\n    delete: false\n  }\n}\n\nexport const workspace = (state: Workspace = intialState, action : WorkspaceTypes) => {\nconst { type, payload } = action;\n\nswitch(type) {\n  case INIT_AND_EXIT_LYRIC_CREATION : \n    return {\n      ...state,\n      lyrics : {\n        create : payload\n      },\n      tabs :{\n        ...state.tabs,\n        create : false,\n      }\n    }\n case INIT_AND_EXIT_TAB_CREATION : \n    return {\n      ...state,\n      lyrics : {\n        ...state.lyrics,\n        create : false\n      },\n      tabs :{\n        ...state.tabs,\n        create : payload,\n      }\n    }\n  case DELETE_LYRIC : \n    return {\n      ...state,\n      lyrics : {\n        ...state.lyrics,\n        delete : payload\n      },\n      tabs : {\n        ...state.tabs,\n        delete : false\n      },\n      tracks : {\n        ...state.tracks,\n        delete : false\n      },\n    }\n  case DELETE_TAB :\n    return {\n      ...state,\n      lyrics : {\n        ...state.lyrics,\n        delete : false\n      },\n      tabs : {\n        ...state.tabs,\n        delete : payload\n      },\n      tracks : {\n        ...state.tracks,\n        delete : false\n      },\n    }\n    case DELETE_TRACK :\n      return {\n        ...state,\n        lyrics : {\n          ...state.lyrics,\n          delete : false\n        },\n        tabs : {\n          ...state.tabs,\n          delete : false\n        },\n        tracks : {\n          ...state.tracks,\n          delete : payload\n        },\n      }\n  default :\n    return state;\n}\n}","export const SET_PROFILE = \"SET_PROFILE\";\nexport const EDIT_NAME = \"EDIT_NAME\";\nexport const EDIT_BIO = \"EDIT_BIO\";\nexport const EDIT_INSTRUMENT = \"EDIT_INSTRUMENT\";\n\nexport interface Profile {\n  profileId: number\n  editting: {\n    names: boolean,\n    bio: boolean,\n    instruments: boolean\n  }\n}\n\ninterface updateProfile {\n  type:typeof SET_PROFILE,\n  payload: Profile\n}\n\ninterface edittingName {\n  type:typeof EDIT_NAME,\n  payload: Profile\n}\n\ninterface edittingBio {\n  type:typeof EDIT_BIO,\n  payload: Profile\n}\n\ninterface edittingInstrument {\n  type:typeof EDIT_INSTRUMENT,\n  payload: Profile\n}\n\n\nexport type ProfileTypes = updateProfile | edittingName | edittingBio | edittingInstrument;","import {\n  ProfileTypes,\n  Profile,\n  SET_PROFILE,\n  EDIT_NAME,\n  EDIT_BIO,\n  EDIT_INSTRUMENT\n} from \"../../actions/profile/types\"\n\nconst initialState = {\n  profileId: 0,\n  editting: {\n    names: false,\n    bio: false,\n    instruments: false\n  }\n}\n\nexport const profileReducer = (state: Profile = initialState, action:ProfileTypes )  => {\n  const { type , payload } = action;\n\n  switch(type) {\n    case SET_PROFILE : \n          return {\n            ...state,\n            profileId: payload\n          }\n    case  EDIT_NAME: \n          return {\n            ...state,\n            editting: {\n              names: payload,\n              bio: false,\n              instruments: false\n            }\n          }\n    case  EDIT_BIO: \n          return {\n            ...state,\n            editting: {\n              names: false,\n              bio: payload,\n              instruments: false\n            }\n          }\n    case  EDIT_INSTRUMENT: \n          return {\n            ...state,\n            editting: {\n              names: false,\n              bio: false,\n              instruments: payload,\n            }\n          }\n    default :\n          return state\n  } \n}","export const SELECTED_POST_ID = \"SELECTED_POST_ID\";\nexport const SET_DELETE_COMPONENT = \"SET_DELETE_COMPONENT\";\nexport const TOGGLE_POST_OPTIONS = \"TOGGLE_POST_OPTIONS\"\nexport const TOGGLE_REMOVE_COMMENT = \"TOGGLE_REMOVE_COMMENT\"\n\nexport interface Post  {\n  postId: number\n  postDelete : boolean\n  options: boolean\n  commentDelete: boolean\n}\n\ninterface setPostId {\n  type: typeof SELECTED_POST_ID\n  payload: Post\n}\n\ninterface validatePostDelete {\n  type: typeof SET_DELETE_COMPONENT\n  payload: Post\n}\ninterface togglePostOptions {\n  type: typeof TOGGLE_POST_OPTIONS\n  payload: Post\n}\ninterface toggleRemoveComment {\n  type: typeof TOGGLE_REMOVE_COMMENT,\n  payload: Post\n}\n\nexport type PostTypes = setPostId | validatePostDelete | togglePostOptions |toggleRemoveComment;","import {\n  PostTypes,\n  Post,\n  SELECTED_POST_ID,\n  SET_DELETE_COMPONENT,\n  TOGGLE_POST_OPTIONS,\n  TOGGLE_REMOVE_COMMENT\n} from \"../../actions/posts/types\";\n\nconst initialState = {\n  postId : 0,\n  postDelete: false,\n  options: false,\n  commentDelete: false,\n}\n\nexport const postReducer = (state: Post = initialState, action: PostTypes) => {\n  const {type, payload} = action;\n\n  switch(type) {\n    case SELECTED_POST_ID :\n      return {\n        ...state,\n        postId: payload\n      }\n    case SET_DELETE_COMPONENT:\n        return {\n          ...state,\n          postDelete: payload\n        }\n    case TOGGLE_POST_OPTIONS:\n        return{ \n          ...state,\n          options: payload\n        }\n    case TOGGLE_REMOVE_COMMENT: \n        return {\n          ...state,\n          commentDelete: payload\n        }\n    default :\n      return state;\n  }\n} ","export const MATES_OPTIONS = \"MATES_OPTIONS\";\nexport const MATES_REMOVE = \"MATES_REMOVE\";\nexport const MATES_ADD = \"MATES_ADD\";\nexport const MATES_SELECTED_ID = \"MATES_SELECTED_ID\";\n\nexport interface Mates {\n  options: boolean\n  remove : boolean\n  add: boolean\n  id : number\n}\n\ninterface toggleMatesOptions {\n  type: typeof MATES_OPTIONS\n  payload: Mates\n}\n\ninterface toggleMatesRemove {\n  type: typeof MATES_REMOVE\n  payload: Mates\n}\n\ninterface toggleMatesAdd {\n  type: typeof MATES_ADD\n  payload: Mates\n}\n\ninterface selectedUserId {\n  type: typeof MATES_SELECTED_ID\n  payload: Mates\n}\n\nexport type MatesTypes = toggleMatesOptions | toggleMatesRemove | toggleMatesAdd |  selectedUserId;","\nimport { \n  MatesTypes, \n  Mates, \n  MATES_OPTIONS,\n  MATES_REMOVE,\n  MATES_ADD,\n  MATES_SELECTED_ID } from \"../../actions/mates/types\";\n\n  const initialState: Mates = {\n    options: false,\n    remove: false,\n    add: false,\n    id: 0\n  }\n\n  export const matesReducer = (state: Mates = initialState, action: MatesTypes ) => {\n    const { type, payload } = action;\n    switch(type) {\n      case MATES_OPTIONS:\n        return {\n          ...state,\n          options: payload\n        }\n      case MATES_REMOVE:\n        return {\n          ...state,\n          remove: payload\n        }\n      case MATES_ADD : \n        return {\n          ...state,\n          add: payload\n        }\n      case MATES_SELECTED_ID :\n          return {\n            ...state,\n            id : payload\n          }\n      default:  \n      return state\n    }\n  }","import { combineReducers } from \"redux\";\n\nimport { user } from \"./user/reducers\";\nimport { playbarStatus } from \"./playbar/reducers\";\nimport { applicationReducer } from \"./application/reducers\";\nimport { project } from \"./project/reducers\";\nimport { workspace } from \"./workspace/reducers\";\nimport {profileReducer} from \"./profile/reducers\"\nimport {postReducer} from \"./posts/reducers\";\nimport  {matesReducer} from \"./mates/reducers\";\n\nexport const rootReducer = combineReducers({\n  application : applicationReducer,\n  user,\n  profile: profileReducer,\n  posts:postReducer,\n  project,\n  workspace,\n  playbar: playbarStatus,\n  mates: matesReducer\n}); \n\nexport type RootState = ReturnType<typeof rootReducer>","import { createElement } from \"react\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer,  RootState} from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\n// const store = createStore(rootReducer, initialState,compose(composeWithDevTools(applyMiddleware(...middleware))) );\n\nexport const store = createStore(rootReducer,initialState, compose(composeWithDevTools(applyMiddleware(...middleware))));\n\nexport default store;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink, from } from '@apollo/client'\nimport { setContext } from '@apollo/client/link/context'\nimport { TokenRefreshLink } from 'apollo-link-token-refresh'\nimport jwtDecode from 'jwt-decode'\nimport { App } from './App'\nimport { getAccessToken, setAccessToken } from './accessToken'\nimport './styles.css';\nimport { onError } from 'apollo-link-error'\n\n// Redux \nimport { Provider } from \"react-redux\";\nimport {store} from \"./redux/store\";\n\n// const httpLink = createHttpLink({\n//   uri: 'http://localhost:4000/graphql',\n//   credentials: 'include',\n// })\n\nconst url = \"http://localhost:3001\"\n\nconst httpLink = createHttpLink({\n  uri: `${url}/graphql`,\n  credentials: 'include',\n})\n\n\nconst authLink = setContext((_, { headers }) => {\n  const token = getAccessToken()\n  console.log(token);\n  console.log(headers);\n  let cookieValue = document.cookie\n  console.log(`This is tht cookie ${cookieValue}`);\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  }\n}) \n\nconst tokenRefreshLink = new TokenRefreshLink({\n  accessTokenField: 'accessToken',\n  isTokenValidOrUndefined: () => {\n    const token = getAccessToken()\n\n    if (!token) {\n      return true\n    }\n\n\n    try {\n      const { exp }: any = jwtDecode(token)\n\n      if (Date.now() >= exp * 1000) {\n        return false\n      } else {\n        return true\n      }\n    } catch (e) {\n      console.log('Error here...')\n      return false\n    }\n  },\n  fetchAccessToken: () => {\n    return fetch(`${url}/refresh_token`, {\n      method: 'POST',\n      credentials: 'include',\n      mode: 'cors',\n    })\n  },\n  handleFetch: (accessToken) => {\n    \n    console.log(`Fetching the accessToken ${accessToken}`);\n    setAccessToken(accessToken)\n  },\n  handleError: (err) => {\n    console.warn('Your refresh token is invalid. Try to relogin')\n    console.log(err)\n  },\n})\n\nconst errorLink = onError(({ graphQLErrors }) => {\n  if (graphQLErrors) graphQLErrors.map(({ message }) => console.log(message))\n})\n\n\nconst client = new ApolloClient({\n  // For some reason Typescript doesn't agree with the tokenRefreshLink type here\n  // @ts-ignore\n  link: from([tokenRefreshLink, errorLink, authLink, httpLink]),\n  cache: new InMemoryCache({\n    typePolicies: {\n      Query: {\n        fields: {\n          myFeed: {\n            merge(existing, incoming){\n              return incoming\n            }\n          },\n          myPosts: {\n            merge(existing, incoming){\n              return incoming\n            }\n          },\n          myProjects :{\n            merge(existing, incoming){\n              return incoming\n            } \n            \n          }\n        }\n      }\n      }\n  }),\n\n})\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </ApolloProvider>,\n  document.getElementById('root')\n)","import { gql } from \"@apollo/client\";\n\n// USER\nexport const MY_ACCOUNT = gql`\n{\n  me {\n    id\n    email\n    firstName\n    lastName\n    dob\n    bio\n    instruments\n    mates\n    created\n    avatar\n } \n}`\nexport const USER_BY_ID = gql`\n query UserById($userId: Int!){\n  user(userId: $userId) {\n    id\n    email\n    firstName\n    lastName\n    bio\n    instruments\n    dob\n    mates\n    created\n    avatar\n  }\n}`\n// POSTS\nexport const FEED_POSTS =gql`\n{\n  myFeed {\n    post {\n    id \n    content \n    creatorId\n    creatorName\n    avatar\n    shares\n    created\n  }\n  comments {\n      id\n      postId\n      userId\n      userName\n      comment\n      created\n      avatar\n    }\n  likes {\n    id\n    postId\n    userId\n    }\n    project {\n        id\n        name\n        isPublic\n        creatorId\n        creatorName\n        contributors\n        mainTrack\n        postId\n    }\n  postId\n  }\n}`\n\nexport const ALL_POSTS = gql`\n{\n  allPosts {\n    post {\n    id \n    content \n    creatorId\n    creatorName\n    avatar\n    shares\n    created\n  }\n  comments {\n      id\n      postId\n      userId\n      userName\n      comment\n      created\n      avatar\n    }\n  likes {\n    id\n    postId\n    userId\n    }\n    project {\n        id\n        name\n        isPublic\n        creatorId\n        creatorName\n        contributors\n        mainTrack\n        postId\n    }\n  postId\n  }\n}`\nexport const MY_POSTS = gql`\n  {\n  myPosts {\n    post {\n    id \n    content \n    creatorId\n    creatorName\n    shares\n    created\n    avatar\n  }\n  comments {\n      id\n      postId\n      userId\n      userName\n      comment\n      created\n      avatar\n    }\n  likes {\n    id\n    postId\n    userId\n    }\n    project {\n        id\n        name\n        isPublic\n        creatorId\n        creatorName\n        contributors\n        mainTrack\n        postId\n    }\n  postId\n  }\n}`\nexport const USERS_POSTS = gql`\nquery($userId: Int! ){\n  usersPosts(userId: $userId) {\n  post {\n  id \n  content \n  creatorId\n  creatorName\n  shares\n  created\n  avatar\n}\ncomments {\n    id\n    postId\n    userId\n    userName\n    comment\n    created\n    avatar\n  }\nlikes {\n  id\n  postId\n  userId\n  }\n  project {\n      id\n      name\n      isPublic\n      creatorId\n      creatorName\n      contributors\n      mainTrack\n      postId\n      created\n  }\npostId\n}\n}`\nexport const USER_BY_POST_ID = gql`\nquery($postId: Int!) {\n  userByPostId(postId :$postId) {\n    id\n  }\n}`\n// COMMENTS\nexport const GET_COMMENTS = gql`\nquery($postId: Int!) {\n  getComments(postId: $postId) {\n      id\n      postId\n      userId\n      userName\n      comment\n      created\n      avatar\n  }\n}`\n// LIKES\nexport const GET_LIKES = gql`\nquery FetchLikes($postId: Int!){\n  fetchLikes(postId: $postId) {\n    id\n    userId\n  }\n}`\n// PROJECTS\nexport const MY_PROJECTS = gql`\n{\n  myProjects {\n        id\n        name\n        isPublic\n        creatorId\n        creatorName\n        created\n        mainTrack\n        postId\n  }\n}`\n\nexport const CURRENT_PROJECT = gql`\n query CurrentProject($projectId: String!){\n   currentProject(projectId: $projectId) {\n    id\n\t\tname\n\t\tisPublic\n\t\tcreatorId\n    creatorName\n    contributors\n    mainTrack\n    created\n    postId\n  }\n}`\nexport const USERS_PROJECTS = gql`\nquery UsersProjects($userId: Int!){\n  usersProjects(userId:$userId) {\n    id\n\t\tname\n\t\tisPublic\n\t\tcreatorId\n    creatorName\n    contributors\n    created\n  }\n}`\nexport const SEARCH_PROJECTS = gql`\nquery SearchProjects($projectName: String!) {\n  searchProjects(projectName: $projectName) {\n    id\n\t\tname\n\t\tisPublic\n\t\tcreatorId\n    creatorName\n    contributors\n    mainTrack\n    created\n  }\n}`\n// LYRICS\nexport const GET_LYRICS = gql`\nquery Lyrics($projectId: String!){\n  lyrics(projectId: $projectId){\n    id\n\t\tlyric\n    option \n    projectId\n  }\n}`\n// TABS\nexport const GET_TABS = gql`\nquery Tabs($projectId: String!){\n  tabs(projectId:$projectId) {\n    description\n    id\n    projectId\n    tab\n  }\n}`\n// TRACKS\nexport const GET_TRACKS = gql`\nquery Tracks($projectId: String!){\n  tracks(projectId:$projectId ) {\n    id\n    name\n    projectId\n  }\n}`\n// CONTRIBUTORS\nexport const GET_CONTRIBUTORS = gql`\nquery Contributors($projectId: String!){\n  contributors(projectId: $projectId){\n    id\n    email\n    firstName\n    lastName\n    dob\n    bio\n    instruments\n    avatar\n  }\n}`\n// NOTIFICATIONS\nexport const GET_NOTIFICATIONS = gql`\n{\n  notifications {\n    message \n    id\n    recipient\n    senderId\n    senderName\n    avatar\n    read\n    type\n    created \n  }\n}`\nexport const VALIDATE_NOTIFICATION = gql`\nquery ValidateNotification($recipient: Int!, $type: String!){\n  validateNotification(recipient : $recipient, type: $type) \n}`\n\n// MATES\nexport const GET_MY_MATES = gql`\nquery GetMates($userId: Int!){\n  getMates(userId: $userId) {\n    id\n    email\n    firstName\n    lastName\n    avatar\n    dob\n    bio\n    instruments\n\t  mates\n    created\n  }\n}`\nexport const SEARCH_MATES = gql`\nquery SearchMates($name: String!){\n  searchMates(name: $name) {\n    id\n    email\n    firstName\n    lastName\n    dob\n    bio\n    instruments\n    avatar\n  }\n}`\nexport const SEARCH_MATES_FOR_CONTRIBUTORS = gql`\nquery SearchMatesForContributors($name: String!, $projectId: String!){\n  searchMatesForContributors(name: $name, projectId: $projectId) {\n    id\n    email\n    firstName\n    lastName\n    dob\n    bio\n    instruments\n    avatar\n  }\n}`\nexport const SEARCH_APPLICATION = gql`\nquery SearchApplication($input: String!){\n  searchApplication(input: $input) {\n    users {\n      id\n      email\n      firstName\n      lastName\n      dob\n      bio\n      instruments\n      avatar\n      mates\n      created\n    }\n  projects {\n    id\n    name\n    isPublic\n    creatorId\n    creatorName\n    contributors\n    postId\n    created\n  }\n  }\n}`"],"sourceRoot":""}