[{"/Users/jay/Desktop/Current Projects/social-songs/web/src/redux/store.ts":"1","/Users/jay/Desktop/Current Projects/social-songs/web/src/redux/reducers/index.ts":"2","/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/mates/Mates.tsx":"3","/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/notFound/NotFound.tsx":"4","/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/searchResult/SearchResult.tsx":"5","/Users/jay/Desktop/Current Projects/social-songs/web/src/components/playbar/Playbar.tsx":"6","/Users/jay/Desktop/Current Projects/social-songs/web/src/components/post/CreatePost.tsx":"7","/Users/jay/Desktop/Current Projects/social-songs/web/src/components/header/Header.tsx":"8","/Users/jay/Desktop/Current Projects/social-songs/web/src/redux/reducers/posts/reducers.ts":"9","/Users/jay/Desktop/Current Projects/social-songs/web/src/redux/reducers/workspace/reducers.ts":"10","/Users/jay/Desktop/Current Projects/social-songs/web/src/redux/reducers/playbar/reducers.ts":"11","/Users/jay/Desktop/Current Projects/social-songs/web/src/components/create/CreateComponent.tsx":"12","/Users/jay/Desktop/Current Projects/social-songs/web/src/graphql/mutations.ts":"13","/Users/jay/Desktop/Current Projects/social-songs/web/src/components/navigation/DropDown.tsx":"14","/Users/jay/Desktop/Current Projects/social-songs/web/src/components/post/DiscoverPost.tsx":"15","/Users/jay/Desktop/Current Projects/social-songs/web/src/components/post/MyPosts.tsx":"16","/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/workspace/lyrics/LyricsViewOnly.tsx":"17","/Users/jay/Desktop/Current Projects/social-songs/web/src/redux/actions/profile/types.ts":"18","/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/profile/edit/Instruments.tsx":"19","/Users/jay/Desktop/Current Projects/social-songs/web/src/redux/actions/application/types.ts":"20","/Users/jay/Desktop/Current Projects/social-songs/web/src/components/post/Comment.tsx":"21","/Users/jay/Desktop/Current Projects/social-songs/web/src/components/project/DeleteProject.tsx":"22","/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/workspace/tabs/CreateTabs.tsx":"23","/Users/jay/Desktop/Current Projects/social-songs/web/src/components/project/RemoveContributor.tsx":"24","/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/login-register/Login.tsx":"25","/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/profile/edit/Bio.tsx":"26","/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/workspace/tracks/TracksViewOnly.tsx":"27","/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/workspace/tabs/Tabs.tsx":"28","/Users/jay/Desktop/Current Projects/social-songs/web/src/redux/actions/project/types.ts":"29","/Users/jay/Desktop/Current Projects/social-songs/web/src/redux/actions/workspace/types.ts":"30","/Users/jay/Desktop/Current Projects/social-songs/web/src/components/post/DeletePost.tsx":"31","/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/workspace/DeleteWSItem.tsx":"32","/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/login-register/Register.tsx":"33","/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/workspace/tracks/Tracks.tsx":"34","/Users/jay/Desktop/Current Projects/social-songs/web/src/graphql/queries.ts":"35","/Users/jay/Desktop/Current Projects/social-songs/web/src/components/header/AccountOptions.tsx":"36","/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/workspace/tabs/TabsViewOnly.tsx":"37","/Users/jay/Desktop/Current Projects/social-songs/web/src/components/formatTime/FormatTimestamp.tsx":"38"},{"size":572,"mtime":1610533963335,"results":"39","hashOfConfig":"40"},{"size":635,"mtime":1611495307099,"results":"41","hashOfConfig":"40"},{"size":776,"mtime":1613471334087,"results":"42","hashOfConfig":"40"},{"size":208,"mtime":1610382551121,"results":"43","hashOfConfig":"40"},{"size":3104,"mtime":1613733020013,"results":"44","hashOfConfig":"40"},{"size":2337,"mtime":1614630653165,"results":"45","hashOfConfig":"40"},{"size":4296,"mtime":1612819325504,"results":"46","hashOfConfig":"40"},{"size":9233,"mtime":1613768868698,"results":"47","hashOfConfig":"40"},{"size":543,"mtime":1610656890058,"results":"48","hashOfConfig":"40"},{"size":1419,"mtime":1612458780545,"results":"49","hashOfConfig":"40"},{"size":589,"mtime":1611495897514,"results":"50","hashOfConfig":"40"},{"size":1966,"mtime":1613382725003,"results":"51","hashOfConfig":"40"},{"size":5789,"mtime":1614620258337,"results":"52","hashOfConfig":"40"},{"size":3891,"mtime":1613390537059,"results":"53","hashOfConfig":"40"},{"size":9182,"mtime":1613221280357,"results":"54","hashOfConfig":"40"},{"size":6295,"mtime":1613238091038,"results":"55","hashOfConfig":"40"},{"size":1389,"mtime":1612955003163,"results":"56","hashOfConfig":"40"},{"size":691,"mtime":1610971652091,"results":"57","hashOfConfig":"40"},{"size":2164,"mtime":1611420561537,"results":"58","hashOfConfig":"40"},{"size":1364,"mtime":1613075105523,"results":"59","hashOfConfig":"40"},{"size":5357,"mtime":1611831043550,"results":"60","hashOfConfig":"40"},{"size":2302,"mtime":1612820902159,"results":"61","hashOfConfig":"40"},{"size":5949,"mtime":1612953201368,"results":"62","hashOfConfig":"40"},{"size":3452,"mtime":1612883552794,"results":"63","hashOfConfig":"40"},{"size":6417,"mtime":1614598564343,"results":"64","hashOfConfig":"40"},{"size":1999,"mtime":1611419923305,"results":"65","hashOfConfig":"40"},{"size":2786,"mtime":1612954874535,"results":"66","hashOfConfig":"40"},{"size":3454,"mtime":1612952688438,"results":"67","hashOfConfig":"40"},{"size":849,"mtime":1612460919640,"results":"68","hashOfConfig":"40"},{"size":1365,"mtime":1612458791282,"results":"69","hashOfConfig":"40"},{"size":3952,"mtime":1612820073564,"results":"70","hashOfConfig":"40"},{"size":3013,"mtime":1612870416360,"results":"71","hashOfConfig":"40"},{"size":16106,"mtime":1614599720680,"results":"72","hashOfConfig":"40"},{"size":8840,"mtime":1614629827124,"results":"73","hashOfConfig":"40"},{"size":5232,"mtime":1614624175734,"results":"74","hashOfConfig":"40"},{"size":2466,"mtime":1611782112808,"results":"75","hashOfConfig":"40"},{"size":1948,"mtime":1612954665060,"results":"76","hashOfConfig":"40"},{"size":1474,"mtime":1612818521028,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},"19t1wyv",{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"105"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"81"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"81"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jay/Desktop/Current Projects/social-songs/web/src/redux/store.ts",["161","162"],"import { createElement } from \"react\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer,  RootState} from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\n// const store = createStore(rootReducer, initialState,compose(composeWithDevTools(applyMiddleware(...middleware))) );\n\nexport const store = createStore(rootReducer,initialState, compose(composeWithDevTools(applyMiddleware(...middleware))));\n\nexport default store;",["163","164"],"/Users/jay/Desktop/Current Projects/social-songs/web/src/redux/reducers/index.ts",[],"/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/mates/Mates.tsx",["165"],"/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/notFound/NotFound.tsx",["166"],"/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/searchResult/SearchResult.tsx",["167","168","169","170"],"/Users/jay/Desktop/Current Projects/social-songs/web/src/components/playbar/Playbar.tsx",["171"],"/Users/jay/Desktop/Current Projects/social-songs/web/src/components/post/CreatePost.tsx",[],"/Users/jay/Desktop/Current Projects/social-songs/web/src/components/header/Header.tsx",["172"],"/Users/jay/Desktop/Current Projects/social-songs/web/src/redux/reducers/posts/reducers.ts",[],"/Users/jay/Desktop/Current Projects/social-songs/web/src/redux/reducers/workspace/reducers.ts",[],"/Users/jay/Desktop/Current Projects/social-songs/web/src/redux/reducers/playbar/reducers.ts",[],"/Users/jay/Desktop/Current Projects/social-songs/web/src/components/create/CreateComponent.tsx",["173","174","175","176","177","178"],"import React, { useEffect , useState} from 'react'\nimport { Link, useLocation } from \"react-router-dom\"\nimport { useQuery } from \"@apollo/client\";\nimport { MY_ACCOUNT } from \"../../graphql/queries\";\n// Redux \nimport { connect, ConnectedProps } from \"react-redux\";\n\ninterface ComponentProps {\n application : {\n   postPanel : boolean,\n   projectPanel: boolean\n }\n}\n\nconst mapState = (state: ComponentProps) => ({\n  postPanel : state.application.postPanel,\n  projectPanel: state.application.projectPanel\n})\n\nconst mapDispatch = {\n  closePostPanel : (payload: boolean) => ({ type: \"CLOSE_POST_PANEL\", payload: payload }),\n  intialiseProject: (bool: boolean ) => ({type: \"INIT_PROJECT\", payload: bool }),\n}\n\nconst connector = connect(mapState, mapDispatch)\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype Props = PropsFromRedux;\nconst CreateComponent = ({projectPanel, postPanel ,closePostPanel , intialiseProject} : Props) => {\n  \n  const togglePostPanel = () => {\n    if(postPanel === true) {\n      closePostPanel(false)\n    } else {\n      closePostPanel(true)\n    }\n  }\n\n  const toggleProjectPanel = () => {\n    if(projectPanel === true) {\n      intialiseProject(false)\n    } else {\n      intialiseProject(true)\n    }\n  }\n\n\n  return (\n    <div className=\"create-component\">\n          <div className=\"bottom\">\n            <ul>\n              <li>\n                <button onClick={() => toggleProjectPanel()}> \n                  <img src=\"/assets/icons/create/project-create.svg\" alt=\"Create Project\" />\n                  <p>Create Project</p>\n                </button>\n              </li>\n              <li className=\"create-post\">\n                <button onClick={() => togglePostPanel()}> \n                  <img src=\"/assets/icons/create/post-colour.svg\" alt=\"Create Post\" />\n                  <p>Create Post</p>\n                </button>\n              </li>\n            </ul>\n          </div>\n    </div>\n  )\n}\nexport default connector(CreateComponent);",["179","180"],"/Users/jay/Desktop/Current Projects/social-songs/web/src/graphql/mutations.ts",[],"/Users/jay/Desktop/Current Projects/social-songs/web/src/components/navigation/DropDown.tsx",["181","182"],"/Users/jay/Desktop/Current Projects/social-songs/web/src/components/post/DiscoverPost.tsx",["183","184"],"import React, { useState, Fragment, useEffect } from 'react'\nimport { Link } from \"react-router-dom\";\n// GraphQL\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport {MY_ACCOUNT, ALL_POSTS} from \"../../graphql/queries\";\nimport { LIKE_POST } from \"../../graphql/mutations\";\n// Redux\nimport { connect, ConnectedProps } from \"react-redux\";\n// Components\nimport DeletePost from \"./DeletePost\";\nimport Comment from \"./Comment\";\nimport FormatTimestamp from \"../formatTime/FormatTimestamp\"\nimport ContributorAvatar from \"../project/ContributorAvatar\";\n\ninterface ComponentProps {\n  user: { \n    user: {\n      id : number\n    }\n  },\n  posts: {\n    postId: number,\n    postDelete: boolean\n  }\n}\n\nconst mapState = (state: ComponentProps) => ({\n  user: state.user.user,\n  postId : state.posts.postId,\n  postDelete : state.posts.postDelete\n})\n\nconst mapDispatch = {\n  setPostId : (id:number) => ({type: \"SELECTED_POST_ID\", payload: id}),\n  validatePostDelete: (payload:boolean) => ({type: \"SET_DELETE_COMPONENT\", payload: payload}),\n}\n\nconst connector = connect(mapState, mapDispatch);\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux;\n\nconst DiscoverPost = ({ user, postId, postDelete, setPostId, validatePostDelete }:Props) => {  \n  const [ postIdForComment, setIdForComments ] = useState(0)\n  const [likePost] = useMutation(LIKE_POST);\n  const { data, loading, error } = useQuery(ALL_POSTS);\n  const { data: meData, loading: meLoading } = useQuery(MY_ACCOUNT);\n\n  useEffect(() => {\n    return () => {\n      validatePostDelete(false);\n      setPostId(-1);\n    }\n  },[])\n\n  if(loading) {\n    console.log(\"loading\");\n    return <div>Loading...</div>\n  }\n  if(error) {\n    console.log(error)\n    return <div>error!</div>\n  }\n  const toggleDeletePopUp = (id: number) => {\n    validatePostDelete(true);\n    setPostId(id);\n  }\n\n  const likePostById = (postId: number) => {\n    likePost({ \n      variables : { postId },\n      update: (cache, { data: { likePost } }) => {\n        // Read the query cache\n        const cacheLikeData : any = cache.readQuery({query : ALL_POSTS })  \n        var index: any;\n        // Assign varaible with the cache so we can modify\n        var allPosts = [...cacheLikeData.allPosts];\n        // Loop through the poss array\n        for(var x = 0; x < allPosts.length; x++) {\n          // Find the post that links to the like we just created\n          if(allPosts[x].postId === likePost.postId) {\n            // Get the index of the post \n            index = allPosts.indexOf(allPosts[x]);\n          }\n        }\n        // Remove the item from the index we found\n        // and replace with the new post data we get from the mutation response \n        allPosts.splice(index, 1,likePost);\n        // Write query to update cache passing the allPosts variable in\n        cache.writeQuery({\n          query : ALL_POSTS,\n           data: {\n            allPosts : allPosts\n          }\n        })\n      }\n    })\n    .catch(err => console.log(err))\n  }\n\n const openComments = (postId: number) => {\n   if(postIdForComment === postId) {\n    setIdForComments(0)\n   } else {\n    setIdForComments(postId)\n   }\n }\n\n  const openPlaybarAndAssignTrackId = () => {\n    // activatePlaybar(true);\n    console.log(\"open playbar\")\n  }\n  \n    return (\n     <Fragment>\n        {!loading && data && data.allPosts.length !== 0  ?\n              <ul>\n                {data.allPosts.map((post: any) => \n                <li key={post.post.id}>\n                  { post.project !== null ?\n                 <div className=\"post\">\n                 <div className=\"post-top-wrapper\">\n                <div className=\"avatar\">\n                <img src={post.post.avatar} alt=\"User's Avatar\"/>\n                </div>\n                { !meLoading && meData && meData.me && meData.me.id === post.post.creatorId ?\n                    <span className=\"post-name-wrapper\">\n                    <Link to={`/profile/${post.post.creatorId}`} className=\"post-name post-user\">You <span className=\"shared-project-span\">Shared project</span></Link>\n                    <FormatTimestamp timestamp={post.post.created} />\n                  </span>  :\n                   <span className=\"post-name-wrapper\">\n                   <Link to={`/profile/${post.post.creatorId}`} className=\"post-name post-user\">{post.post.creatorName} <span className=\"shared-project-span\">Shared project</span></Link>\n                   <FormatTimestamp timestamp={post.post.created} />\n                 </span> \n                }  \n                <span className=\"post-btn-wrapper\">\n                  { !meLoading && meData && meData.me && meData.me.id=== post.post.creatorId ? \n                  <button className=\"post-buttons\" onClick={() => toggleDeletePopUp(post.post.id)}>\n                   <img src=\"/assets/icons/workspace/delete.svg\" alt=\"Delete post\"/>\n                  </button> :\n                    <button className=\"post-buttons\" onClick={() => likePostById(post.post.id)}> \n                      <img src=\"/assets/icons/post/like.svg\" alt=\"Like post\"/> \n                    </button>}\n                </span>\n              </div>\n                <div className=\"post-project-wrapper\">\n                  <button>\n                    <img src=\"/assets/icons/post/play.svg\" alt=\"Play button\"/>\n                  </button>\n                  <p className=\"project-name\">{post.post.content}</p>\n                          <Link className=\"project-name-link\" to={`/workspace/${post.project.id}`}>See project</Link>\n                </div>\n                <div className=\"contributors\">\n                  <span className=\"flex-wrapper\">\n                  <p>Contributors</p>\n                    <span className=\"contributors-avatars\">\n                    <ContributorAvatar projectId={post.project.id} />\n                    </span>\n                  </span>   \n                  </div>\n\n               <div className=\"post-bottom-wrapper\">\n                   <button onClick={() => openComments(post.post.id)} className=\"comment-button\">Comments</button>\n                   <p className=\"comments-length\">{post.comments.length}</p>\n                 <div className=\"likes\"> \n                   <img src=\"/assets/icons/post/thumb.svg\" alt=\"Likes\"/>\n                   <p>{post.likes.length}</p>\n                 </div>\n               </div>\n               {postIdForComment === post.post.id ? <Comment postId={post.post.id} /> : null}\n               { postDelete === true &&  postId === post.post.id && <DeletePost />}\n             </div> \n                      :\n                  <div className=\"post\">\n                    <div className=\"post-top-wrapper\">\n                      <div className=\"avatar\">\n                      <img src={post.post.avatar} alt=\"User's Avatar\"/>\n                      </div>\n                      { !meLoading && meData && meData.me && meData.me.id === post.post.creatorId ?\n                          <span className=\"post-name-wrapper\">\n                          <Link to={`/profile/${post.post.creatorId}`} className=\"post-name post-user\">You</Link>\n                          <FormatTimestamp timestamp={post.post.created} />\n                        </span>  :\n                         <span className=\"post-name-wrapper\">\n                         <Link to={`/profile/${post.post.creatorId}`} className=\"post-name post-user\">{post.post.creatorName}</Link>\n                         <FormatTimestamp timestamp={post.post.created} />\n                       </span> \n\n                      }\n                      \n                      <span className=\"post-btn-wrapper\">\n                        { !meLoading && meData && meData.me && meData.me.id=== post.post.creatorId ? \n                        <button className=\"post-buttons\" onClick={() => toggleDeletePopUp(post.post.id)}>\n                         <img src=\"/assets/icons/workspace/delete.svg\" alt=\"Delete post\"/>\n                        </button> :\n                          <button className=\"post-buttons\" onClick={() => likePostById(post.post.id)}> \n                            <img src=\"/assets/icons/post/like.svg\" alt=\"Like post\"/> \n                          </button>}\n                      </span>\n                    </div>\n                    <div className=\"post-content\"><p>{post.post.content}</p></div>\n                    <div className=\"post-bottom-wrapper\">\n                        <button onClick={() => openComments(post.post.id)} className=\"comment-button\">Comments</button>\n                        <p className=\"comments-length\">{post.comments.length}</p>\n                      <div className=\"likes\"> \n                        <img src=\"/assets/icons/post/thumb.svg\" alt=\"Likes\"/>\n                        <p>{post.likes.length}</p>\n                      </div>\n                    </div>\n                    {postIdForComment === post.post.id ? <Comment postId={post.post.id} /> : null}\n                    { postDelete === true &&  postId === post.post.id && <DeletePost />}\n                  </div> }\n                  </li> )}\n              </ul> : <div className=\"no-posts\">There are no posts on your feed.</div> }\n    </Fragment>\n    );\n}\n\nexport default connector(DiscoverPost);\n","/Users/jay/Desktop/Current Projects/social-songs/web/src/components/post/MyPosts.tsx",["185","186","187","188"],"import React, { Fragment, useState, useEffect } from 'react'\nimport { Link } from \"react-router-dom\";\n// GraphQL\nimport { useQuery } from \"@apollo/client\";\nimport { MY_POSTS, MY_ACCOUNT } from \"../../graphql/queries\";\n// Redux\nimport { connect, ConnectedProps } from \"react-redux\";\n// Components\nimport DeletePost from \"./DeletePost\";\nimport Comment from \"./Comment\";\nimport FormatTimestamp from \"../formatTime/FormatTimestamp\"\nimport ContributorAvatar from \"../project/ContributorAvatar\";\n\ninterface ComponentProps {\n  user: { \n    user: {\n      id : number\n    }\n  },\n  posts: {\n    postId: number,\n    postDelete: boolean\n  }\n}\n\nconst mapState = (state: ComponentProps) => ({\n  user: state.user.user,\n  postId : state.posts.postId,\n  postDelete : state.posts.postDelete\n})\n\nconst mapDispatch = {\n  setPostId : (id:number) => ({type: \"SELECTED_POST_ID\", payload: id}),\n  validatePostDelete: (payload:boolean) => ({type: \"SET_DELETE_COMPONENT\", payload: payload}),\n  closePostPanel : (payload: boolean) => ({ type: \"CLOSE_POST_PANEL\", payload: payload }),\n}\n\nconst connector = connect(mapState, mapDispatch);\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux;\n\nconst MyPosts = ({ user, postId, postDelete, setPostId, validatePostDelete, closePostPanel }:Props) => {\n  const [ postIdForComment, setIdForComments ] = useState(0)\n  const { data, loading } = useQuery(MY_POSTS);\n  const { data: meData, loading: meLoading } = useQuery(MY_ACCOUNT);\n\n  useEffect(() => {\n    return () => {\n      validatePostDelete(false);\n      setPostId(-1);\n    }\n  },[])\n  \n  if(loading) {\n    return <div>Loading...</div>\n  }\n  \n  const toggleDeletePopUp = (id: number) => {\n    validatePostDelete(true);\n    setPostId(id);\n  }\n\nconst openComments = (postId: number) => {\n  if(postIdForComment === postId) {\n   setIdForComments(0)\n  } else {\n   setIdForComments(postId)\n  }\n}\nconst openPlaybarAndAssignTrackId = () => {\n  // activatePlaybar(true);\n  console.log(\"open playbar\")\n}\nconst togglePostPanel = () => {\n  closePostPanel(true)\n}\n    return (\n     <Fragment>\n      {!loading && data && data.myPosts.length !== 0  ?\n      data.myPosts.map((post: any) => \n        <li key={post.post.id}>\n      { post.project !== null ?\n                  <div className=\"post\">\n                  <div className=\"post-top-wrapper\">\n                 <div className=\"avatar\">\n                 <img src={post.post.avatar} alt=\"User's Avatar\"/>\n                 </div>\n                     <span className=\"post-name-wrapper\">\n                     <p className=\"post-name post-user\">You <span className=\"shared-project-span\">Shared project</span></p>\n                     <FormatTimestamp timestamp={post.post.created} />\n                   </span> \n      \n                 <span className=\"post-btn-wrapper\">\n                   <button className=\"post-buttons\" onClick={() => toggleDeletePopUp(post.post.id)}>\n                    <img src=\"/assets/icons/workspace/delete.svg\" alt=\"Delete post\"/>\n                   </button> \n                 </span>\n               </div>\n                 <div className=\"post-project-wrapper\">\n                   <button>\n                     <img src=\"/assets/icons/post/play.svg\" alt=\"Play button\"/>\n                   </button>\n                   <p className=\"project-name\">{post.post.content}</p>\n                           <Link className=\"project-name-link\" to={`/workspace/${post.project.id}`}>See project</Link>\n                 </div>\n                 <div className=\"contributors\">\n                   <span className=\"flex-wrapper\">\n                   <p>Contributors</p>\n                     <span className=\"contributors-avatars\">\n                     <ContributorAvatar projectId={post.project.id} />\n                     </span>\n                   </span>   \n                   </div>\n \n                <div className=\"post-bottom-wrapper\">\n                    <button onClick={() => openComments(post.post.id)} className=\"comment-button\">Comments</button>\n                    <p className=\"comments-length\">{post.comments.length}</p>\n                  <div className=\"likes\"> \n                    <img src=\"/assets/icons/post/thumb.svg\" alt=\"Likes\"/>\n                    <p>{post.likes.length}</p>\n                  </div>\n                </div>\n                {postIdForComment === post.post.id ? <Comment postId={post.post.id} /> : null}\n                { postDelete === true &&  postId === post.post.id && <DeletePost />}\n              </div>\n                   :\n          <div className=\"post\">\n            <div className=\"post-top-wrapper\">\n               <div className=\"avatar\">\n                 <img src={post.post.avatar} alt=\"User's Avatar\"/>\n               </div>\n                      <span className=\"post-name-wrapper\">\n                        <p className=\"post-name post-user\">You</p>\n                       <FormatTimestamp timestamp={post.post.created} />\n                      </span>\n              <span className=\"post-btn-wrapper\">\n                <button className=\"post-buttons\" onClick={() => toggleDeletePopUp(post.post.id)}>\n                  <img src=\"/assets/icons/workspace/delete.svg\" alt=\"Delete post\"/>\n                </button> \n              </span>\n            </div>\n            <div className=\"post-content\"><p>{post.post.content}</p></div>\n            <div className=\"post-bottom-wrapper\">\n            <button onClick={() => openComments(post.post.id)} className=\"comment-button\">Comments</button>\n            <p className=\"comments-length\">{post.comments.length}</p>\n                      <div className=\"likes\"> \n                        <img src=\"/assets/icons/post/thumb.svg\" alt=\"Likes\"/>\n                        <p>{post.likes.length}</p>\n                      </div>\n                    </div>\n                    {postIdForComment === post.post.id ? <Comment postId={post.post.id} /> : null}\n            { postDelete === true &&  postId === post.post.id && <DeletePost />}\n          </div>\n        }\n          </li> ) : \n            <div className=\"no-posts\">\n            <p>You have no posts yet.</p>\n              <button onClick={() => togglePostPanel()}>  Why not create a new post? \n              </button>\n          </div> }\n    \n    </Fragment>\n    );\n}\n\nexport default connector(MyPosts);","/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/workspace/lyrics/LyricsViewOnly.tsx",["189"],"/Users/jay/Desktop/Current Projects/social-songs/web/src/redux/actions/profile/types.ts",[],"/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/profile/edit/Instruments.tsx",[],"/Users/jay/Desktop/Current Projects/social-songs/web/src/redux/actions/application/types.ts",[],"/Users/jay/Desktop/Current Projects/social-songs/web/src/components/post/Comment.tsx",[],"/Users/jay/Desktop/Current Projects/social-songs/web/src/components/project/DeleteProject.tsx",[],"/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/workspace/tabs/CreateTabs.tsx",[],"/Users/jay/Desktop/Current Projects/social-songs/web/src/components/project/RemoveContributor.tsx",[],"/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/login-register/Login.tsx",[],"/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/profile/edit/Bio.tsx",[],"/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/workspace/tracks/TracksViewOnly.tsx",["190","191","192","193","194","195","196","197","198","199","200","201","202","203"],"/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/workspace/tabs/Tabs.tsx",["204","205","206"],"/Users/jay/Desktop/Current Projects/social-songs/web/src/redux/actions/project/types.ts",[],"/Users/jay/Desktop/Current Projects/social-songs/web/src/redux/actions/workspace/types.ts",[],"/Users/jay/Desktop/Current Projects/social-songs/web/src/components/post/DeletePost.tsx",[],"/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/workspace/DeleteWSItem.tsx",[],"/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/login-register/Register.tsx",[],"/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/workspace/tracks/Tracks.tsx",["207","208","209","210","211","212"],"import React, {useState, useEffect} from 'react'\nimport axios from \"axios\";\n// GraphQL\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { MY_ACCOUNT, GET_TRACKS } from \"../../../graphql/queries\";\nimport { CREATE_TRACK } from \"../../../graphql/mutations\";\n// Redux\nimport { connect, ConnectedProps } from \"react-redux\";\n\n// var ab2str = require('arraybuffer-to-string')\n// var str2ab = require('string-to-arraybuffer')\n\nconst MicRecorder = require('mic-recorder-to-mp3');\n\ninterface ComponentProps {\n  playbar: {\n    data : object\n  }\n  project: {\n    currentProject: string\n  }\n}\n\nconst mapState = (state: ComponentProps) => ({\n  data: state.playbar.data,\n  currentProject: state.project.currentProject\n})\n\nconst mapDispatch = {\n  assignTrack: (data: any) => ({type: \"ASSIGN_TRACK\", payload: data })\n}\n\nconst connector = connect(mapState, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux\n\nvar counter: number;\n// import RecorderComponent from \"../RecorderComponent\";\nconst Tracks  = ({assignTrack, currentProject} : Props) => {\n  const [trackForm, setTrackForm] = useState({\n    name: \"\"\n  })\n  const [initForm, setForm] = useState(false);\n  const [audioBuffer, storeBuffer] = useState([]);\n  const [tracks, setTracks] = useState([{\n    name: \"\",\n    url : \"\",\n    created: \"\",\n  }])\n  // const [src, setSrc] = useState(\"\");\n  const [isActive, setIsActive] = useState(false);\n  const [minutes, setMinutes] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n  const { data: meData, loading:meLoading } = useQuery(MY_ACCOUNT);\n  const { data, loading } = useQuery(GET_TRACKS, {\n    variables : {\n      projectId: currentProject\n    }\n  });\n  const [ createTrack ] = useMutation(CREATE_TRACK);\n\n  useEffect(() => {\n    let interval: any = null;\n    if (isActive) {\n      interval = setInterval(() => {\n        if(seconds === 60) {\n          setMinutes(minutes => minutes + 1);\n          setSeconds(0);\n        }else {\n          setSeconds(seconds => seconds + 1);\n        }\n      }, 1000);\n    } else if (!isActive && seconds !== 0) {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [isActive,seconds])\n\n\n//New instance\nconst recorder = new MicRecorder({\n  bitRate: 128\n});\n// Start recording. Browser will request permission to use your microphone.\nconst startRecording =() => {\n  console.log(\"recording...\")\n  if(counter === 0 || counter === undefined) {\n    recorder.start().then(() => {\n      // something else\n      }).catch((e: any) => {\n        console.error(e);\n      });\n      return counter = 1;\n  } else if(counter === 1) {\n      // setIsActive(false);\n  console.log(\"stop recording\") \n  // Stop recording\n  recorder\n  .stop()\n  .getMp3().then(([buffer, blob]: any) => {\n    // Store buffer in component state\n    storeBuffer(buffer);\n    // Open Form pop up\n    setForm(true);\n}).catch((e: any) => {\n  alert('We could not retrieve your message');\n  console.log(e);\n});\nreturn counter = 0;\n  }\n}\n\nconst onChange = (e:React.ChangeEvent<HTMLInputElement>) => {\n  setTrackForm({...trackForm, [e.target.name] : e.target.value })\n}\n\nconst onSubmit = async (e:React.FormEvent<HTMLFormElement>) => {\n  e.preventDefault();\n  // Create Track name\n  const trackName = trackForm.name;\n  // Create New file\n  const newAudioFile = new File(audioBuffer, trackName, {\n    type: \"audio/mp3\",\n    lastModified: Date.now(),\n  });\n\n  var newFormData = new FormData();\n  newFormData.append(\"userId\", meData.me.id);\n  newFormData.append(\"users-audio\", newAudioFile);\n  newFormData.append(\"projectId\", currentProject);\n\n  const response = await createTrack({\n    variables: {\n      name: trackName,\n      projectId: currentProject\n  }})\n  try {\n    if(response.data.createTrack) {\n      newFormData.append(\"trackId\", response.data.createTrack.id);\n      axios({\n        method: \"post\",\n        url: 'http://localhost:4000/upload',\n        data: newFormData,\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n      })\n        .then(function (response: any) {\n          //handle success\n          console.log(response);\n        })\n        .catch(function (response: any) {\n          //handle error\n          console.log(response);\n        });\n    }\n  } catch(err) {\n    console.log(err)\n  }\n\n  console.log(newAudioFile);\n  // assignTrack(newFile);\n  const date = Date.now();\n  const newDate = new Date(date);\n  const created = newDate.toDateString();\n  \n    // Create audio url with the new file\n  // const audioUrl = URL.createObjectURL(newAudioFile);\n  // const audioObject = {\n  //   name: trackName,\n  //   url: audioUrl,\n  //   created\n  // }\n  // const player = new Audio(URL.createObjectURL(newAudioFile));\n  // player.play()\n  //     .then(() => console.log(\"Playing\"))\n  //     .catch(err => console.log(err))\n\n    // Push to state\n    // setTracks([...tracks, audioObject])\n\n    setTrackForm({ name: \"\"});\n    setForm(false);\n}\n\nconst sendAudioData = (data: any) => {\n  assignTrack(data);\n}\n\n  return (\n    <div className=\"track-list-container\">\n    <div className=\"track-list-header\">\n      <p>Track Name</p>\n      <br />\n      <p>Options</p>\n    </div>\n    <div className=\"track-list-scroll\">\n      {\n        !loading && data && data.tracks.length !== 0 ? data.tracks.map((track: any) =>\n        <li key={track.id} className=\"track-container\">\n        <button className=\"play-audio\" onClick={() => sendAudioData(track)}>  </button>\n          <div className=\"track-details\">\n            <p className=\"track-name\">{track.name}</p>\n            <p className=\"track-date\">{track.created}</p>\n          </div>\n          <div className=\"track-options\">\n            <button className=\"track-favourite\">\n              <img src=\"/assets/icons/workspace/favourite.svg\" alt=\"Favourite the track\"/>\n            </button>\n            <button className=\"track-delete\">\n              <img src=\"/assets/icons/workspace/delete.svg\" alt=\"Delete the track\"/>\n            </button>\n          </div>\n      </li> \n        ): \n        <li className=\"track-container\">\n          <p>Record track</p>\n          <button onClick={() =>  startRecording()} className=\"recording-btns\" id=\"record\">\n            <img src=\"/assets/icons/workspace/record.svg\" alt=\"Record\"/>\n          </button>\n        </li> \n      }\n\n      {/* <div className=\"track-container\">\n        <div className=\"track-details\">\n          <p className=\"track-name\">Track One</p>\n          <p className=\"track-date\">Feb 1, 2019 at 4:23 PM</p>\n        </div>\n        <div className=\"track-options\">\n          <button className=\"track-favourite\">\n            <img src=\"/assets/icons/workspace/favourite.svg\" alt=\"Favourite the track\"/>\n          </button>\n          <button className=\"track-delete\">\n            <img src=\"/assets/icons/workspace/delete.svg\" alt=\"Delete the track\"/>\n          </button>\n        </div>\n      </div> */}\n      {/* { tracks && tracks.length > 1 ? tracks.map((track) => \n      { return track.url !== \"\" &&  (\n      <li key={track.url}className=\"track-container\">\n      <button className=\"play-audio\" onClick={() => sendAudioData(track)}>  </button>\n        <div className=\"track-details\">\n          <p className=\"track-name\">{track.name}</p>\n          <p className=\"track-date\">{track.created}</p>\n        </div>\n        <div className=\"track-options\">\n          <button className=\"track-favourite\">\n            <img src=\"/assets/icons/workspace/favourite.svg\" alt=\"Favourite the track\"/>\n          </button>\n          <button className=\"track-delete\">\n            <img src=\"/assets/icons/workspace/delete.svg\" alt=\"Delete the track\"/>\n          </button>\n        </div>\n        <audio controls>\n          <source src={track.url} type=\"audio/mp3\" />\n        </audio>\n    </li> )\n    }\n      )  : null } */}\n    </div> \n   <div className=\"recorder-container\">\n      <div className=\"center-wrapper\">\n        <button onClick={() =>  startRecording()} className=\"recording-btns\" id=\"record\">\n          <img src=\"/assets/icons/workspace/record.svg\" alt=\"Record\"/>\n        </button>\n        {/* <button onClick={() => stopRecording()} className=\"recording-btns\" id=\"stop\">\n          <img src=\"/assets/icons/workspace/stop.svg\" alt=\"Stop Recording\"/>\n        </button> */}\n          {/* <p>{ seconds < 10 ?  minutes + \" : 0\" + seconds : minutes + \" : \"+ seconds}</p> */}\n      </div>\n      {  initForm ===  true &&\n    <div className=\"track-popup\">\n      <form onSubmit={(e) => onSubmit(e)}>\n        <span>\n          <label htmlFor=\"trackName\">Name your track</label>\n          <input type=\"text\" name=\"name\" id=\"trackName\" value={trackForm.name} placeholder=\"Enter a track name.\" onChange={(e) => onChange(e)}/>\n        </span>\n        <input type=\"submit\" value=\"Save Track\"/>\n      </form>\n    </div>\n    }\n    </div>\n  </div>\n  )\n}\n\nexport default connector(Tracks);","/Users/jay/Desktop/Current Projects/social-songs/web/src/graphql/queries.ts",[],"/Users/jay/Desktop/Current Projects/social-songs/web/src/components/header/AccountOptions.tsx",[],"/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/workspace/tabs/TabsViewOnly.tsx",["213","214"],"/Users/jay/Desktop/Current Projects/social-songs/web/src/components/formatTime/FormatTimestamp.tsx",["215"],{"ruleId":"216","severity":1,"message":"217","line":1,"column":10,"nodeType":"218","messageId":"219","endLine":1,"endColumn":23},{"ruleId":"216","severity":1,"message":"220","line":5,"column":24,"nodeType":"218","messageId":"219","endLine":5,"endColumn":33},{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","replacedBy":"224"},{"ruleId":"216","severity":1,"message":"225","line":9,"column":11,"nodeType":"218","messageId":"219","endLine":9,"endColumn":21},{"ruleId":"216","severity":1,"message":"225","line":3,"column":11,"nodeType":"218","messageId":"219","endLine":3,"endColumn":21},{"ruleId":"216","severity":1,"message":"226","line":12,"column":10,"nodeType":"218","messageId":"219","endLine":12,"endColumn":16},{"ruleId":"216","severity":1,"message":"227","line":12,"column":18,"nodeType":"218","messageId":"219","endLine":12,"endColumn":27},{"ruleId":"216","severity":1,"message":"228","line":13,"column":10,"nodeType":"218","messageId":"219","endLine":13,"endColumn":24},{"ruleId":"216","severity":1,"message":"229","line":13,"column":26,"nodeType":"218","messageId":"219","endLine":13,"endColumn":39},{"ruleId":"216","severity":1,"message":"230","line":27,"column":10,"nodeType":"218","messageId":"219","endLine":27,"endColumn":15},{"ruleId":"231","severity":1,"message":"232","line":95,"column":6,"nodeType":"233","endLine":95,"endColumn":63,"suggestions":"234"},{"ruleId":"216","severity":1,"message":"235","line":1,"column":17,"nodeType":"218","messageId":"219","endLine":1,"endColumn":26},{"ruleId":"216","severity":1,"message":"236","line":1,"column":29,"nodeType":"218","messageId":"219","endLine":1,"endColumn":37},{"ruleId":"216","severity":1,"message":"237","line":2,"column":10,"nodeType":"218","messageId":"219","endLine":2,"endColumn":14},{"ruleId":"216","severity":1,"message":"238","line":2,"column":16,"nodeType":"218","messageId":"219","endLine":2,"endColumn":27},{"ruleId":"216","severity":1,"message":"239","line":3,"column":10,"nodeType":"218","messageId":"219","endLine":3,"endColumn":18},{"ruleId":"216","severity":1,"message":"240","line":4,"column":10,"nodeType":"218","messageId":"219","endLine":4,"endColumn":20},{"ruleId":"221","replacedBy":"241"},{"ruleId":"223","replacedBy":"242"},{"ruleId":"216","severity":1,"message":"243","line":1,"column":18,"nodeType":"218","messageId":"219","endLine":1,"endColumn":26},{"ruleId":"216","severity":1,"message":"236","line":1,"column":28,"nodeType":"218","messageId":"219","endLine":1,"endColumn":36},{"ruleId":"231","severity":1,"message":"244","line":53,"column":5,"nodeType":"233","endLine":53,"endColumn":7,"suggestions":"245"},{"ruleId":"216","severity":1,"message":"246","line":108,"column":9,"nodeType":"218","messageId":"219","endLine":108,"endColumn":36},{"ruleId":"216","severity":1,"message":"247","line":45,"column":17,"nodeType":"218","messageId":"219","endLine":45,"endColumn":23},{"ruleId":"216","severity":1,"message":"248","line":45,"column":34,"nodeType":"218","messageId":"219","endLine":45,"endColumn":43},{"ruleId":"231","severity":1,"message":"244","line":52,"column":5,"nodeType":"233","endLine":52,"endColumn":7,"suggestions":"249"},{"ruleId":"216","severity":1,"message":"246","line":70,"column":7,"nodeType":"218","messageId":"219","endLine":70,"endColumn":34},{"ruleId":"216","severity":1,"message":"236","line":1,"column":17,"nodeType":"218","messageId":"219","endLine":1,"endColumn":25},{"ruleId":"216","severity":1,"message":"250","line":3,"column":10,"nodeType":"218","messageId":"219","endLine":3,"endColumn":21},{"ruleId":"216","severity":1,"message":"251","line":8,"column":5,"nodeType":"218","messageId":"219","endLine":8,"endColumn":11},{"ruleId":"216","severity":1,"message":"252","line":9,"column":5,"nodeType":"218","messageId":"219","endLine":9,"endColumn":11},{"ruleId":"216","severity":1,"message":"253","line":11,"column":7,"nodeType":"218","messageId":"219","endLine":11,"endColumn":18},{"ruleId":"216","severity":1,"message":"254","line":32,"column":5,"nodeType":"218","messageId":"219","endLine":32,"endColumn":20},{"ruleId":"216","severity":1,"message":"255","line":35,"column":10,"nodeType":"218","messageId":"219","endLine":35,"endColumn":19},{"ruleId":"216","severity":1,"message":"256","line":35,"column":21,"nodeType":"218","messageId":"219","endLine":35,"endColumn":33},{"ruleId":"216","severity":1,"message":"257","line":38,"column":10,"nodeType":"218","messageId":"219","endLine":38,"endColumn":18},{"ruleId":"216","severity":1,"message":"258","line":38,"column":20,"nodeType":"218","messageId":"219","endLine":38,"endColumn":27},{"ruleId":"216","severity":1,"message":"259","line":39,"column":10,"nodeType":"218","messageId":"219","endLine":39,"endColumn":21},{"ruleId":"216","severity":1,"message":"260","line":39,"column":23,"nodeType":"218","messageId":"219","endLine":39,"endColumn":34},{"ruleId":"216","severity":1,"message":"261","line":40,"column":18,"nodeType":"218","messageId":"219","endLine":40,"endColumn":27},{"ruleId":"216","severity":1,"message":"262","line":46,"column":20,"nodeType":"218","messageId":"219","endLine":46,"endColumn":31},{"ruleId":"216","severity":1,"message":"263","line":47,"column":10,"nodeType":"218","messageId":"219","endLine":47,"endColumn":17},{"ruleId":"216","severity":1,"message":"235","line":1,"column":28,"nodeType":"218","messageId":"219","endLine":1,"endColumn":37},{"ruleId":"216","severity":1,"message":"264","line":41,"column":10,"nodeType":"218","messageId":"219","endLine":41,"endColumn":19},{"ruleId":"216","severity":1,"message":"265","line":41,"column":21,"nodeType":"218","messageId":"219","endLine":41,"endColumn":33},{"ruleId":"216","severity":1,"message":"266","line":46,"column":10,"nodeType":"218","messageId":"219","endLine":46,"endColumn":16},{"ruleId":"216","severity":1,"message":"261","line":46,"column":18,"nodeType":"218","messageId":"219","endLine":46,"endColumn":27},{"ruleId":"216","severity":1,"message":"262","line":52,"column":20,"nodeType":"218","messageId":"219","endLine":52,"endColumn":31},{"ruleId":"216","severity":1,"message":"263","line":53,"column":10,"nodeType":"218","messageId":"219","endLine":53,"endColumn":17},{"ruleId":"216","severity":1,"message":"248","line":55,"column":33,"nodeType":"218","messageId":"219","endLine":55,"endColumn":42},{"ruleId":"216","severity":1,"message":"267","line":164,"column":9,"nodeType":"218","messageId":"219","endLine":164,"endColumn":16},{"ruleId":"216","severity":1,"message":"236","line":1,"column":18,"nodeType":"218","messageId":"219","endLine":1,"endColumn":26},{"ruleId":"216","severity":1,"message":"235","line":1,"column":28,"nodeType":"218","messageId":"219","endLine":1,"endColumn":37},{"ruleId":"231","severity":1,"message":"268","line":12,"column":8,"nodeType":"233","endLine":12,"endColumn":10,"suggestions":"269"},"@typescript-eslint/no-unused-vars","'createElement' is defined but never used.","Identifier","unusedVar","'RootState' is defined but never used.","no-native-reassign",["270"],"no-negated-in-lhs",["271"],"'RouteState' is defined but never used.","'mateId' is assigned a value but never used.","'setMateId' is assigned a value but never used.","'validateRemove' is assigned a value but never used.","'setValidation' is assigned a value but never used.","'audio' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'componentLocation'. Either include it or remove the dependency array.","ArrayExpression",["272"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'Link' is defined but never used.","'useLocation' is defined but never used.","'useQuery' is defined but never used.","'MY_ACCOUNT' is defined but never used.",["270"],["271"],"'Fragment' is defined but never used.","React Hook useEffect has missing dependencies: 'setPostId' and 'validatePostDelete'. Either include them or remove the dependency array. If 'validatePostDelete' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["273"],"'openPlaybarAndAssignTrackId' is assigned a value but never used.","'meData' is assigned a value but never used.","'meLoading' is assigned a value but never used.",["274"],"'useMutation' is defined but never used.","'ab2str' is assigned a value but never used.","'str2ab' is assigned a value but never used.","'MicRecorder' is assigned a value but never used.","'counter' is defined but never used.","'trackForm' is assigned a value but never used.","'setTrackForm' is assigned a value but never used.","'initForm' is assigned a value but never used.","'setForm' is assigned a value but never used.","'audioBuffer' is assigned a value but never used.","'storeBuffer' is assigned a value but never used.","'setTracks' is assigned a value but never used.","'setIsActive' is assigned a value but never used.","'minutes' is assigned a value but never used.","'deleteTab' is assigned a value but never used.","'setDeleteTab' is assigned a value but never used.","'tracks' is assigned a value but never used.","'created' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'formatTimestamp'. Either include it or remove the dependency array.",["275"],"no-global-assign","no-unsafe-negation",{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"278","fix":"280"},{"desc":"281","fix":"282"},"Update the dependencies array to be: [user, notifLoading, notifData, loading, data, pathname, componentLocation]",{"range":"283","text":"284"},"Update the dependencies array to be: [setPostId, validatePostDelete]",{"range":"285","text":"286"},{"range":"287","text":"286"},"Update the dependencies array to be: [formatTimestamp]",{"range":"288","text":"289"},[3278,3335],"[user, notifLoading, notifData, loading, data, pathname, componentLocation]",[1600,1602],"[setPostId, validatePostDelete]",[1582,1584],[274,276],"[formatTimestamp]"]