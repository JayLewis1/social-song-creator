[{"/Users/jay/Desktop/Current Projects/social-songs/web/src/redux/store.ts":"1","/Users/jay/Desktop/Current Projects/social-songs/web/src/redux/reducers/index.ts":"2","/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/mates/Mates.tsx":"3","/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/notFound/NotFound.tsx":"4","/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/searchResult/SearchResult.tsx":"5","/Users/jay/Desktop/Current Projects/social-songs/web/src/components/playbar/Playbar.tsx":"6","/Users/jay/Desktop/Current Projects/social-songs/web/src/components/post/CreatePost.tsx":"7","/Users/jay/Desktop/Current Projects/social-songs/web/src/components/header/Header.tsx":"8","/Users/jay/Desktop/Current Projects/social-songs/web/src/redux/reducers/posts/reducers.ts":"9","/Users/jay/Desktop/Current Projects/social-songs/web/src/redux/reducers/workspace/reducers.ts":"10","/Users/jay/Desktop/Current Projects/social-songs/web/src/redux/reducers/playbar/reducers.ts":"11","/Users/jay/Desktop/Current Projects/social-songs/web/src/components/create/CreateComponent.tsx":"12","/Users/jay/Desktop/Current Projects/social-songs/web/src/graphql/mutations.ts":"13","/Users/jay/Desktop/Current Projects/social-songs/web/src/components/navigation/DropDown.tsx":"14","/Users/jay/Desktop/Current Projects/social-songs/web/src/components/post/DiscoverPost.tsx":"15","/Users/jay/Desktop/Current Projects/social-songs/web/src/components/post/MyPosts.tsx":"16","/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/workspace/lyrics/LyricsViewOnly.tsx":"17","/Users/jay/Desktop/Current Projects/social-songs/web/src/redux/actions/profile/types.ts":"18","/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/profile/edit/Instruments.tsx":"19","/Users/jay/Desktop/Current Projects/social-songs/web/src/redux/actions/application/types.ts":"20","/Users/jay/Desktop/Current Projects/social-songs/web/src/components/post/Comment.tsx":"21","/Users/jay/Desktop/Current Projects/social-songs/web/src/components/project/DeleteProject.tsx":"22","/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/workspace/tabs/CreateTabs.tsx":"23","/Users/jay/Desktop/Current Projects/social-songs/web/src/components/project/RemoveContributor.tsx":"24","/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/login-register/Login.tsx":"25","/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/profile/edit/Bio.tsx":"26","/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/workspace/tracks/TracksViewOnly.tsx":"27","/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/workspace/tabs/Tabs.tsx":"28","/Users/jay/Desktop/Current Projects/social-songs/web/src/redux/actions/project/types.ts":"29","/Users/jay/Desktop/Current Projects/social-songs/web/src/redux/actions/workspace/types.ts":"30","/Users/jay/Desktop/Current Projects/social-songs/web/src/components/post/DeletePost.tsx":"31","/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/workspace/DeleteWSItem.tsx":"32","/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/login-register/Register.tsx":"33","/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/workspace/tracks/Tracks.tsx":"34","/Users/jay/Desktop/Current Projects/social-songs/web/src/graphql/queries.ts":"35"},{"size":572,"mtime":1610533963335,"results":"36","hashOfConfig":"37"},{"size":635,"mtime":1611495307099,"results":"38","hashOfConfig":"37"},{"size":776,"mtime":1613471334087,"results":"39","hashOfConfig":"37"},{"size":208,"mtime":1610382551121,"results":"40","hashOfConfig":"37"},{"size":3104,"mtime":1613733020013,"results":"41","hashOfConfig":"37"},{"size":2337,"mtime":1614630653165,"results":"42","hashOfConfig":"37"},{"size":4296,"mtime":1612819325504,"results":"43","hashOfConfig":"37"},{"size":9233,"mtime":1613768868698,"results":"44","hashOfConfig":"37"},{"size":543,"mtime":1610656890058,"results":"45","hashOfConfig":"37"},{"size":1419,"mtime":1612458780545,"results":"46","hashOfConfig":"37"},{"size":589,"mtime":1611495897514,"results":"47","hashOfConfig":"37"},{"size":1966,"mtime":1613382725003,"results":"48","hashOfConfig":"37"},{"size":5789,"mtime":1614620258337,"results":"49","hashOfConfig":"37"},{"size":3891,"mtime":1613390537059,"results":"50","hashOfConfig":"37"},{"size":9182,"mtime":1613221280357,"results":"51","hashOfConfig":"37"},{"size":6295,"mtime":1613238091038,"results":"52","hashOfConfig":"37"},{"size":1389,"mtime":1612955003163,"results":"53","hashOfConfig":"37"},{"size":691,"mtime":1610971652091,"results":"54","hashOfConfig":"37"},{"size":2164,"mtime":1611420561537,"results":"55","hashOfConfig":"37"},{"size":1364,"mtime":1613075105523,"results":"56","hashOfConfig":"37"},{"size":5357,"mtime":1611831043550,"results":"57","hashOfConfig":"37"},{"size":2302,"mtime":1612820902159,"results":"58","hashOfConfig":"37"},{"size":5949,"mtime":1612953201368,"results":"59","hashOfConfig":"37"},{"size":3452,"mtime":1612883552794,"results":"60","hashOfConfig":"37"},{"size":6417,"mtime":1614598564343,"results":"61","hashOfConfig":"37"},{"size":1999,"mtime":1611419923305,"results":"62","hashOfConfig":"37"},{"size":2786,"mtime":1612954874535,"results":"63","hashOfConfig":"37"},{"size":3454,"mtime":1612952688438,"results":"64","hashOfConfig":"37"},{"size":849,"mtime":1612460919640,"results":"65","hashOfConfig":"37"},{"size":1365,"mtime":1612458791282,"results":"66","hashOfConfig":"37"},{"size":3952,"mtime":1612820073564,"results":"67","hashOfConfig":"37"},{"size":3013,"mtime":1612870416360,"results":"68","hashOfConfig":"37"},{"size":16106,"mtime":1614599720680,"results":"69","hashOfConfig":"37"},{"size":8840,"mtime":1614629827124,"results":"70","hashOfConfig":"37"},{"size":5232,"mtime":1614624175734,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},"19t1wyv",{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"75"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"75"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"75"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jay/Desktop/Current Projects/social-songs/web/src/redux/store.ts",["147","148"],"import { createElement } from \"react\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer,  RootState} from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\n// const store = createStore(rootReducer, initialState,compose(composeWithDevTools(applyMiddleware(...middleware))) );\n\nexport const store = createStore(rootReducer,initialState, compose(composeWithDevTools(applyMiddleware(...middleware))));\n\nexport default store;",["149","150"],"/Users/jay/Desktop/Current Projects/social-songs/web/src/redux/reducers/index.ts",[],"/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/mates/Mates.tsx",["151"],"/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/notFound/NotFound.tsx",["152"],"/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/searchResult/SearchResult.tsx",["153","154","155","156"],"/Users/jay/Desktop/Current Projects/social-songs/web/src/components/playbar/Playbar.tsx",["157"],"/Users/jay/Desktop/Current Projects/social-songs/web/src/components/post/CreatePost.tsx",[],"/Users/jay/Desktop/Current Projects/social-songs/web/src/components/header/Header.tsx",["158"],"/Users/jay/Desktop/Current Projects/social-songs/web/src/redux/reducers/posts/reducers.ts",[],"/Users/jay/Desktop/Current Projects/social-songs/web/src/redux/reducers/workspace/reducers.ts",[],"/Users/jay/Desktop/Current Projects/social-songs/web/src/redux/reducers/playbar/reducers.ts",[],"/Users/jay/Desktop/Current Projects/social-songs/web/src/components/create/CreateComponent.tsx",["159","160","161","162","163","164"],"import React, { useEffect , useState} from 'react'\nimport { Link, useLocation } from \"react-router-dom\"\nimport { useQuery } from \"@apollo/client\";\nimport { MY_ACCOUNT } from \"../../graphql/queries\";\n// Redux \nimport { connect, ConnectedProps } from \"react-redux\";\n\ninterface ComponentProps {\n application : {\n   postPanel : boolean,\n   projectPanel: boolean\n }\n}\n\nconst mapState = (state: ComponentProps) => ({\n  postPanel : state.application.postPanel,\n  projectPanel: state.application.projectPanel\n})\n\nconst mapDispatch = {\n  closePostPanel : (payload: boolean) => ({ type: \"CLOSE_POST_PANEL\", payload: payload }),\n  intialiseProject: (bool: boolean ) => ({type: \"INIT_PROJECT\", payload: bool }),\n}\n\nconst connector = connect(mapState, mapDispatch)\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype Props = PropsFromRedux;\nconst CreateComponent = ({projectPanel, postPanel ,closePostPanel , intialiseProject} : Props) => {\n  \n  const togglePostPanel = () => {\n    if(postPanel === true) {\n      closePostPanel(false)\n    } else {\n      closePostPanel(true)\n    }\n  }\n\n  const toggleProjectPanel = () => {\n    if(projectPanel === true) {\n      intialiseProject(false)\n    } else {\n      intialiseProject(true)\n    }\n  }\n\n\n  return (\n    <div className=\"create-component\">\n          <div className=\"bottom\">\n            <ul>\n              <li>\n                <button onClick={() => toggleProjectPanel()}> \n                  <img src=\"/assets/icons/create/project-create.svg\" alt=\"Create Project\" />\n                  <p>Create Project</p>\n                </button>\n              </li>\n              <li className=\"create-post\">\n                <button onClick={() => togglePostPanel()}> \n                  <img src=\"/assets/icons/create/post-colour.svg\" alt=\"Create Post\" />\n                  <p>Create Post</p>\n                </button>\n              </li>\n            </ul>\n          </div>\n    </div>\n  )\n}\nexport default connector(CreateComponent);","/Users/jay/Desktop/Current Projects/social-songs/web/src/graphql/mutations.ts",[],"/Users/jay/Desktop/Current Projects/social-songs/web/src/components/navigation/DropDown.tsx",["165","166"],"/Users/jay/Desktop/Current Projects/social-songs/web/src/components/post/DiscoverPost.tsx",["167","168"],"import React, { useState, Fragment, useEffect } from 'react'\nimport { Link } from \"react-router-dom\";\n// GraphQL\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport {MY_ACCOUNT, ALL_POSTS} from \"../../graphql/queries\";\nimport { LIKE_POST } from \"../../graphql/mutations\";\n// Redux\nimport { connect, ConnectedProps } from \"react-redux\";\n// Components\nimport DeletePost from \"./DeletePost\";\nimport Comment from \"./Comment\";\nimport FormatTimestamp from \"../formatTime/FormatTimestamp\"\nimport ContributorAvatar from \"../project/ContributorAvatar\";\n\ninterface ComponentProps {\n  user: { \n    user: {\n      id : number\n    }\n  },\n  posts: {\n    postId: number,\n    postDelete: boolean\n  }\n}\n\nconst mapState = (state: ComponentProps) => ({\n  user: state.user.user,\n  postId : state.posts.postId,\n  postDelete : state.posts.postDelete\n})\n\nconst mapDispatch = {\n  setPostId : (id:number) => ({type: \"SELECTED_POST_ID\", payload: id}),\n  validatePostDelete: (payload:boolean) => ({type: \"SET_DELETE_COMPONENT\", payload: payload}),\n}\n\nconst connector = connect(mapState, mapDispatch);\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux;\n\nconst DiscoverPost = ({ user, postId, postDelete, setPostId, validatePostDelete }:Props) => {  \n  const [ postIdForComment, setIdForComments ] = useState(0)\n  const [likePost] = useMutation(LIKE_POST);\n  const { data, loading, error } = useQuery(ALL_POSTS);\n  const { data: meData, loading: meLoading } = useQuery(MY_ACCOUNT);\n\n  useEffect(() => {\n    return () => {\n      validatePostDelete(false);\n      setPostId(-1);\n    }\n  },[])\n\n  if(loading) {\n    console.log(\"loading\");\n    return <div>Loading...</div>\n  }\n  if(error) {\n    console.log(error)\n    return <div>error!</div>\n  }\n  const toggleDeletePopUp = (id: number) => {\n    validatePostDelete(true);\n    setPostId(id);\n  }\n\n  const likePostById = (postId: number) => {\n    likePost({ \n      variables : { postId },\n      update: (cache, { data: { likePost } }) => {\n        // Read the query cache\n        const cacheLikeData : any = cache.readQuery({query : ALL_POSTS })  \n        var index: any;\n        // Assign varaible with the cache so we can modify\n        var allPosts = [...cacheLikeData.allPosts];\n        // Loop through the poss array\n        for(var x = 0; x < allPosts.length; x++) {\n          // Find the post that links to the like we just created\n          if(allPosts[x].postId === likePost.postId) {\n            // Get the index of the post \n            index = allPosts.indexOf(allPosts[x]);\n          }\n        }\n        // Remove the item from the index we found\n        // and replace with the new post data we get from the mutation response \n        allPosts.splice(index, 1,likePost);\n        // Write query to update cache passing the allPosts variable in\n        cache.writeQuery({\n          query : ALL_POSTS,\n           data: {\n            allPosts : allPosts\n          }\n        })\n      }\n    })\n    .catch(err => console.log(err))\n  }\n\n const openComments = (postId: number) => {\n   if(postIdForComment === postId) {\n    setIdForComments(0)\n   } else {\n    setIdForComments(postId)\n   }\n }\n\n  const openPlaybarAndAssignTrackId = () => {\n    // activatePlaybar(true);\n    console.log(\"open playbar\")\n  }\n  \n    return (\n     <Fragment>\n        {!loading && data && data.allPosts.length !== 0  ?\n              <ul>\n                {data.allPosts.map((post: any) => \n                <li key={post.post.id}>\n                  { post.project !== null ?\n                 <div className=\"post\">\n                 <div className=\"post-top-wrapper\">\n                <div className=\"avatar\">\n                <img src={post.post.avatar} alt=\"User's Avatar\"/>\n                </div>\n                { !meLoading && meData && meData.me && meData.me.id === post.post.creatorId ?\n                    <span className=\"post-name-wrapper\">\n                    <Link to={`/profile/${post.post.creatorId}`} className=\"post-name post-user\">You <span className=\"shared-project-span\">Shared project</span></Link>\n                    <FormatTimestamp timestamp={post.post.created} />\n                  </span>  :\n                   <span className=\"post-name-wrapper\">\n                   <Link to={`/profile/${post.post.creatorId}`} className=\"post-name post-user\">{post.post.creatorName} <span className=\"shared-project-span\">Shared project</span></Link>\n                   <FormatTimestamp timestamp={post.post.created} />\n                 </span> \n                }  \n                <span className=\"post-btn-wrapper\">\n                  { !meLoading && meData && meData.me && meData.me.id=== post.post.creatorId ? \n                  <button className=\"post-buttons\" onClick={() => toggleDeletePopUp(post.post.id)}>\n                   <img src=\"/assets/icons/workspace/delete.svg\" alt=\"Delete post\"/>\n                  </button> :\n                    <button className=\"post-buttons\" onClick={() => likePostById(post.post.id)}> \n                      <img src=\"/assets/icons/post/like.svg\" alt=\"Like post\"/> \n                    </button>}\n                </span>\n              </div>\n                <div className=\"post-project-wrapper\">\n                  <button>\n                    <img src=\"/assets/icons/post/play.svg\" alt=\"Play button\"/>\n                  </button>\n                  <p className=\"project-name\">{post.post.content}</p>\n                          <Link className=\"project-name-link\" to={`/workspace/${post.project.id}`}>See project</Link>\n                </div>\n                <div className=\"contributors\">\n                  <span className=\"flex-wrapper\">\n                  <p>Contributors</p>\n                    <span className=\"contributors-avatars\">\n                    <ContributorAvatar projectId={post.project.id} />\n                    </span>\n                  </span>   \n                  </div>\n\n               <div className=\"post-bottom-wrapper\">\n                   <button onClick={() => openComments(post.post.id)} className=\"comment-button\">Comments</button>\n                   <p className=\"comments-length\">{post.comments.length}</p>\n                 <div className=\"likes\"> \n                   <img src=\"/assets/icons/post/thumb.svg\" alt=\"Likes\"/>\n                   <p>{post.likes.length}</p>\n                 </div>\n               </div>\n               {postIdForComment === post.post.id ? <Comment postId={post.post.id} /> : null}\n               { postDelete === true &&  postId === post.post.id && <DeletePost />}\n             </div> \n                      :\n                  <div className=\"post\">\n                    <div className=\"post-top-wrapper\">\n                      <div className=\"avatar\">\n                      <img src={post.post.avatar} alt=\"User's Avatar\"/>\n                      </div>\n                      { !meLoading && meData && meData.me && meData.me.id === post.post.creatorId ?\n                          <span className=\"post-name-wrapper\">\n                          <Link to={`/profile/${post.post.creatorId}`} className=\"post-name post-user\">You</Link>\n                          <FormatTimestamp timestamp={post.post.created} />\n                        </span>  :\n                         <span className=\"post-name-wrapper\">\n                         <Link to={`/profile/${post.post.creatorId}`} className=\"post-name post-user\">{post.post.creatorName}</Link>\n                         <FormatTimestamp timestamp={post.post.created} />\n                       </span> \n\n                      }\n                      \n                      <span className=\"post-btn-wrapper\">\n                        { !meLoading && meData && meData.me && meData.me.id=== post.post.creatorId ? \n                        <button className=\"post-buttons\" onClick={() => toggleDeletePopUp(post.post.id)}>\n                         <img src=\"/assets/icons/workspace/delete.svg\" alt=\"Delete post\"/>\n                        </button> :\n                          <button className=\"post-buttons\" onClick={() => likePostById(post.post.id)}> \n                            <img src=\"/assets/icons/post/like.svg\" alt=\"Like post\"/> \n                          </button>}\n                      </span>\n                    </div>\n                    <div className=\"post-content\"><p>{post.post.content}</p></div>\n                    <div className=\"post-bottom-wrapper\">\n                        <button onClick={() => openComments(post.post.id)} className=\"comment-button\">Comments</button>\n                        <p className=\"comments-length\">{post.comments.length}</p>\n                      <div className=\"likes\"> \n                        <img src=\"/assets/icons/post/thumb.svg\" alt=\"Likes\"/>\n                        <p>{post.likes.length}</p>\n                      </div>\n                    </div>\n                    {postIdForComment === post.post.id ? <Comment postId={post.post.id} /> : null}\n                    { postDelete === true &&  postId === post.post.id && <DeletePost />}\n                  </div> }\n                  </li> )}\n              </ul> : <div className=\"no-posts\">There are no posts on your feed.</div> }\n    </Fragment>\n    );\n}\n\nexport default connector(DiscoverPost);\n","/Users/jay/Desktop/Current Projects/social-songs/web/src/components/post/MyPosts.tsx",["169","170","171","172"],"import React, { Fragment, useState, useEffect } from 'react'\nimport { Link } from \"react-router-dom\";\n// GraphQL\nimport { useQuery } from \"@apollo/client\";\nimport { MY_POSTS, MY_ACCOUNT } from \"../../graphql/queries\";\n// Redux\nimport { connect, ConnectedProps } from \"react-redux\";\n// Components\nimport DeletePost from \"./DeletePost\";\nimport Comment from \"./Comment\";\nimport FormatTimestamp from \"../formatTime/FormatTimestamp\"\nimport ContributorAvatar from \"../project/ContributorAvatar\";\n\ninterface ComponentProps {\n  user: { \n    user: {\n      id : number\n    }\n  },\n  posts: {\n    postId: number,\n    postDelete: boolean\n  }\n}\n\nconst mapState = (state: ComponentProps) => ({\n  user: state.user.user,\n  postId : state.posts.postId,\n  postDelete : state.posts.postDelete\n})\n\nconst mapDispatch = {\n  setPostId : (id:number) => ({type: \"SELECTED_POST_ID\", payload: id}),\n  validatePostDelete: (payload:boolean) => ({type: \"SET_DELETE_COMPONENT\", payload: payload}),\n  closePostPanel : (payload: boolean) => ({ type: \"CLOSE_POST_PANEL\", payload: payload }),\n}\n\nconst connector = connect(mapState, mapDispatch);\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux;\n\nconst MyPosts = ({ user, postId, postDelete, setPostId, validatePostDelete, closePostPanel }:Props) => {\n  const [ postIdForComment, setIdForComments ] = useState(0)\n  const { data, loading } = useQuery(MY_POSTS);\n  const { data: meData, loading: meLoading } = useQuery(MY_ACCOUNT);\n\n  useEffect(() => {\n    return () => {\n      validatePostDelete(false);\n      setPostId(-1);\n    }\n  },[])\n  \n  if(loading) {\n    return <div>Loading...</div>\n  }\n  \n  const toggleDeletePopUp = (id: number) => {\n    validatePostDelete(true);\n    setPostId(id);\n  }\n\nconst openComments = (postId: number) => {\n  if(postIdForComment === postId) {\n   setIdForComments(0)\n  } else {\n   setIdForComments(postId)\n  }\n}\nconst openPlaybarAndAssignTrackId = () => {\n  // activatePlaybar(true);\n  console.log(\"open playbar\")\n}\nconst togglePostPanel = () => {\n  closePostPanel(true)\n}\n    return (\n     <Fragment>\n      {!loading && data && data.myPosts.length !== 0  ?\n      data.myPosts.map((post: any) => \n        <li key={post.post.id}>\n      { post.project !== null ?\n                  <div className=\"post\">\n                  <div className=\"post-top-wrapper\">\n                 <div className=\"avatar\">\n                 <img src={post.post.avatar} alt=\"User's Avatar\"/>\n                 </div>\n                     <span className=\"post-name-wrapper\">\n                     <p className=\"post-name post-user\">You <span className=\"shared-project-span\">Shared project</span></p>\n                     <FormatTimestamp timestamp={post.post.created} />\n                   </span> \n      \n                 <span className=\"post-btn-wrapper\">\n                   <button className=\"post-buttons\" onClick={() => toggleDeletePopUp(post.post.id)}>\n                    <img src=\"/assets/icons/workspace/delete.svg\" alt=\"Delete post\"/>\n                   </button> \n                 </span>\n               </div>\n                 <div className=\"post-project-wrapper\">\n                   <button>\n                     <img src=\"/assets/icons/post/play.svg\" alt=\"Play button\"/>\n                   </button>\n                   <p className=\"project-name\">{post.post.content}</p>\n                           <Link className=\"project-name-link\" to={`/workspace/${post.project.id}`}>See project</Link>\n                 </div>\n                 <div className=\"contributors\">\n                   <span className=\"flex-wrapper\">\n                   <p>Contributors</p>\n                     <span className=\"contributors-avatars\">\n                     <ContributorAvatar projectId={post.project.id} />\n                     </span>\n                   </span>   \n                   </div>\n \n                <div className=\"post-bottom-wrapper\">\n                    <button onClick={() => openComments(post.post.id)} className=\"comment-button\">Comments</button>\n                    <p className=\"comments-length\">{post.comments.length}</p>\n                  <div className=\"likes\"> \n                    <img src=\"/assets/icons/post/thumb.svg\" alt=\"Likes\"/>\n                    <p>{post.likes.length}</p>\n                  </div>\n                </div>\n                {postIdForComment === post.post.id ? <Comment postId={post.post.id} /> : null}\n                { postDelete === true &&  postId === post.post.id && <DeletePost />}\n              </div>\n                   :\n          <div className=\"post\">\n            <div className=\"post-top-wrapper\">\n               <div className=\"avatar\">\n                 <img src={post.post.avatar} alt=\"User's Avatar\"/>\n               </div>\n                      <span className=\"post-name-wrapper\">\n                        <p className=\"post-name post-user\">You</p>\n                       <FormatTimestamp timestamp={post.post.created} />\n                      </span>\n              <span className=\"post-btn-wrapper\">\n                <button className=\"post-buttons\" onClick={() => toggleDeletePopUp(post.post.id)}>\n                  <img src=\"/assets/icons/workspace/delete.svg\" alt=\"Delete post\"/>\n                </button> \n              </span>\n            </div>\n            <div className=\"post-content\"><p>{post.post.content}</p></div>\n            <div className=\"post-bottom-wrapper\">\n            <button onClick={() => openComments(post.post.id)} className=\"comment-button\">Comments</button>\n            <p className=\"comments-length\">{post.comments.length}</p>\n                      <div className=\"likes\"> \n                        <img src=\"/assets/icons/post/thumb.svg\" alt=\"Likes\"/>\n                        <p>{post.likes.length}</p>\n                      </div>\n                    </div>\n                    {postIdForComment === post.post.id ? <Comment postId={post.post.id} /> : null}\n            { postDelete === true &&  postId === post.post.id && <DeletePost />}\n          </div>\n        }\n          </li> ) : \n            <div className=\"no-posts\">\n            <p>You have no posts yet.</p>\n              <button onClick={() => togglePostPanel()}>  Why not create a new post? \n              </button>\n          </div> }\n    \n    </Fragment>\n    );\n}\n\nexport default connector(MyPosts);","/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/workspace/lyrics/LyricsViewOnly.tsx",["173"],"/Users/jay/Desktop/Current Projects/social-songs/web/src/redux/actions/profile/types.ts",[],"/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/profile/edit/Instruments.tsx",[],"/Users/jay/Desktop/Current Projects/social-songs/web/src/redux/actions/application/types.ts",[],"/Users/jay/Desktop/Current Projects/social-songs/web/src/components/post/Comment.tsx",[],"/Users/jay/Desktop/Current Projects/social-songs/web/src/components/project/DeleteProject.tsx",[],"/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/workspace/tabs/CreateTabs.tsx",[],"/Users/jay/Desktop/Current Projects/social-songs/web/src/components/project/RemoveContributor.tsx",[],"/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/login-register/Login.tsx",[],"/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/profile/edit/Bio.tsx",[],"/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/workspace/tracks/TracksViewOnly.tsx",["174","175","176","177","178","179","180","181","182","183","184","185","186","187"],"/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/workspace/tabs/Tabs.tsx",["188","189","190"],"/Users/jay/Desktop/Current Projects/social-songs/web/src/redux/actions/project/types.ts",[],"/Users/jay/Desktop/Current Projects/social-songs/web/src/redux/actions/workspace/types.ts",[],"/Users/jay/Desktop/Current Projects/social-songs/web/src/components/post/DeletePost.tsx",[],"/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/workspace/DeleteWSItem.tsx",[],"/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/login-register/Register.tsx",[],"/Users/jay/Desktop/Current Projects/social-songs/web/src/routes/workspace/tracks/Tracks.tsx",["191","192","193","194","195","196"],"/Users/jay/Desktop/Current Projects/social-songs/web/src/graphql/queries.ts",[],{"ruleId":"197","severity":1,"message":"198","line":1,"column":10,"nodeType":"199","messageId":"200","endLine":1,"endColumn":23},{"ruleId":"197","severity":1,"message":"201","line":5,"column":24,"nodeType":"199","messageId":"200","endLine":5,"endColumn":33},{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","replacedBy":"205"},{"ruleId":"197","severity":1,"message":"206","line":9,"column":11,"nodeType":"199","messageId":"200","endLine":9,"endColumn":21},{"ruleId":"197","severity":1,"message":"206","line":3,"column":11,"nodeType":"199","messageId":"200","endLine":3,"endColumn":21},{"ruleId":"197","severity":1,"message":"207","line":12,"column":10,"nodeType":"199","messageId":"200","endLine":12,"endColumn":16},{"ruleId":"197","severity":1,"message":"208","line":12,"column":18,"nodeType":"199","messageId":"200","endLine":12,"endColumn":27},{"ruleId":"197","severity":1,"message":"209","line":13,"column":10,"nodeType":"199","messageId":"200","endLine":13,"endColumn":24},{"ruleId":"197","severity":1,"message":"210","line":13,"column":26,"nodeType":"199","messageId":"200","endLine":13,"endColumn":39},{"ruleId":"197","severity":1,"message":"211","line":27,"column":10,"nodeType":"199","messageId":"200","endLine":27,"endColumn":15},{"ruleId":"212","severity":1,"message":"213","line":95,"column":6,"nodeType":"214","endLine":95,"endColumn":63,"suggestions":"215"},{"ruleId":"197","severity":1,"message":"216","line":1,"column":17,"nodeType":"199","messageId":"200","endLine":1,"endColumn":26},{"ruleId":"197","severity":1,"message":"217","line":1,"column":29,"nodeType":"199","messageId":"200","endLine":1,"endColumn":37},{"ruleId":"197","severity":1,"message":"218","line":2,"column":10,"nodeType":"199","messageId":"200","endLine":2,"endColumn":14},{"ruleId":"197","severity":1,"message":"219","line":2,"column":16,"nodeType":"199","messageId":"200","endLine":2,"endColumn":27},{"ruleId":"197","severity":1,"message":"220","line":3,"column":10,"nodeType":"199","messageId":"200","endLine":3,"endColumn":18},{"ruleId":"197","severity":1,"message":"221","line":4,"column":10,"nodeType":"199","messageId":"200","endLine":4,"endColumn":20},{"ruleId":"197","severity":1,"message":"222","line":1,"column":18,"nodeType":"199","messageId":"200","endLine":1,"endColumn":26},{"ruleId":"197","severity":1,"message":"217","line":1,"column":28,"nodeType":"199","messageId":"200","endLine":1,"endColumn":36},{"ruleId":"212","severity":1,"message":"223","line":53,"column":5,"nodeType":"214","endLine":53,"endColumn":7,"suggestions":"224"},{"ruleId":"197","severity":1,"message":"225","line":108,"column":9,"nodeType":"199","messageId":"200","endLine":108,"endColumn":36},{"ruleId":"197","severity":1,"message":"226","line":45,"column":17,"nodeType":"199","messageId":"200","endLine":45,"endColumn":23},{"ruleId":"197","severity":1,"message":"227","line":45,"column":34,"nodeType":"199","messageId":"200","endLine":45,"endColumn":43},{"ruleId":"212","severity":1,"message":"223","line":52,"column":5,"nodeType":"214","endLine":52,"endColumn":7,"suggestions":"228"},{"ruleId":"197","severity":1,"message":"225","line":70,"column":7,"nodeType":"199","messageId":"200","endLine":70,"endColumn":34},{"ruleId":"197","severity":1,"message":"217","line":1,"column":17,"nodeType":"199","messageId":"200","endLine":1,"endColumn":25},{"ruleId":"197","severity":1,"message":"229","line":3,"column":10,"nodeType":"199","messageId":"200","endLine":3,"endColumn":21},{"ruleId":"197","severity":1,"message":"230","line":8,"column":5,"nodeType":"199","messageId":"200","endLine":8,"endColumn":11},{"ruleId":"197","severity":1,"message":"231","line":9,"column":5,"nodeType":"199","messageId":"200","endLine":9,"endColumn":11},{"ruleId":"197","severity":1,"message":"232","line":11,"column":7,"nodeType":"199","messageId":"200","endLine":11,"endColumn":18},{"ruleId":"197","severity":1,"message":"233","line":32,"column":5,"nodeType":"199","messageId":"200","endLine":32,"endColumn":20},{"ruleId":"197","severity":1,"message":"234","line":35,"column":10,"nodeType":"199","messageId":"200","endLine":35,"endColumn":19},{"ruleId":"197","severity":1,"message":"235","line":35,"column":21,"nodeType":"199","messageId":"200","endLine":35,"endColumn":33},{"ruleId":"197","severity":1,"message":"236","line":38,"column":10,"nodeType":"199","messageId":"200","endLine":38,"endColumn":18},{"ruleId":"197","severity":1,"message":"237","line":38,"column":20,"nodeType":"199","messageId":"200","endLine":38,"endColumn":27},{"ruleId":"197","severity":1,"message":"238","line":39,"column":10,"nodeType":"199","messageId":"200","endLine":39,"endColumn":21},{"ruleId":"197","severity":1,"message":"239","line":39,"column":23,"nodeType":"199","messageId":"200","endLine":39,"endColumn":34},{"ruleId":"197","severity":1,"message":"240","line":40,"column":18,"nodeType":"199","messageId":"200","endLine":40,"endColumn":27},{"ruleId":"197","severity":1,"message":"241","line":46,"column":20,"nodeType":"199","messageId":"200","endLine":46,"endColumn":31},{"ruleId":"197","severity":1,"message":"242","line":47,"column":10,"nodeType":"199","messageId":"200","endLine":47,"endColumn":17},{"ruleId":"197","severity":1,"message":"216","line":1,"column":28,"nodeType":"199","messageId":"200","endLine":1,"endColumn":37},{"ruleId":"197","severity":1,"message":"243","line":41,"column":10,"nodeType":"199","messageId":"200","endLine":41,"endColumn":19},{"ruleId":"197","severity":1,"message":"244","line":41,"column":21,"nodeType":"199","messageId":"200","endLine":41,"endColumn":33},{"ruleId":"197","severity":1,"message":"245","line":46,"column":10,"nodeType":"199","messageId":"200","endLine":46,"endColumn":16},{"ruleId":"197","severity":1,"message":"240","line":46,"column":18,"nodeType":"199","messageId":"200","endLine":46,"endColumn":27},{"ruleId":"197","severity":1,"message":"241","line":52,"column":20,"nodeType":"199","messageId":"200","endLine":52,"endColumn":31},{"ruleId":"197","severity":1,"message":"242","line":53,"column":10,"nodeType":"199","messageId":"200","endLine":53,"endColumn":17},{"ruleId":"197","severity":1,"message":"227","line":55,"column":33,"nodeType":"199","messageId":"200","endLine":55,"endColumn":42},{"ruleId":"197","severity":1,"message":"246","line":164,"column":9,"nodeType":"199","messageId":"200","endLine":164,"endColumn":16},"@typescript-eslint/no-unused-vars","'createElement' is defined but never used.","Identifier","unusedVar","'RootState' is defined but never used.","no-native-reassign",["247"],"no-negated-in-lhs",["248"],"'RouteState' is defined but never used.","'mateId' is assigned a value but never used.","'setMateId' is assigned a value but never used.","'validateRemove' is assigned a value but never used.","'setValidation' is assigned a value but never used.","'audio' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'componentLocation'. Either include it or remove the dependency array.","ArrayExpression",["249"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'Link' is defined but never used.","'useLocation' is defined but never used.","'useQuery' is defined but never used.","'MY_ACCOUNT' is defined but never used.","'Fragment' is defined but never used.","React Hook useEffect has missing dependencies: 'setPostId' and 'validatePostDelete'. Either include them or remove the dependency array. If 'validatePostDelete' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["250"],"'openPlaybarAndAssignTrackId' is assigned a value but never used.","'meData' is assigned a value but never used.","'meLoading' is assigned a value but never used.",["251"],"'useMutation' is defined but never used.","'ab2str' is assigned a value but never used.","'str2ab' is assigned a value but never used.","'MicRecorder' is assigned a value but never used.","'counter' is defined but never used.","'trackForm' is assigned a value but never used.","'setTrackForm' is assigned a value but never used.","'initForm' is assigned a value but never used.","'setForm' is assigned a value but never used.","'audioBuffer' is assigned a value but never used.","'storeBuffer' is assigned a value but never used.","'setTracks' is assigned a value but never used.","'setIsActive' is assigned a value but never used.","'minutes' is assigned a value but never used.","'deleteTab' is assigned a value but never used.","'setDeleteTab' is assigned a value but never used.","'tracks' is assigned a value but never used.","'created' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"254","fix":"256"},"Update the dependencies array to be: [user, notifLoading, notifData, loading, data, pathname, componentLocation]",{"range":"257","text":"258"},"Update the dependencies array to be: [setPostId, validatePostDelete]",{"range":"259","text":"260"},{"range":"261","text":"260"},[3278,3335],"[user, notifLoading, notifData, loading, data, pathname, componentLocation]",[1600,1602],"[setPostId, validatePostDelete]",[1582,1584]]